// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: results/api/v1/cache.proto

package v1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v1 "github.com/warpbuilds/warpbuild-agent/pkg/transparent-cache/derp/generated_go/results/entities/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCacheEntryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Scope and other metadata for the cache entry
	Metadata *v1.CacheMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// An explicit key for a cache entry
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Hash of the compression tool, runner OS and paths cached
	Version       string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCacheEntryRequest) Reset() {
	*x = CreateCacheEntryRequest{}
	mi := &file_results_api_v1_cache_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCacheEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCacheEntryRequest) ProtoMessage() {}

func (x *CreateCacheEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_results_api_v1_cache_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCacheEntryRequest.ProtoReflect.Descriptor instead.
func (*CreateCacheEntryRequest) Descriptor() ([]byte, []int) {
	return file_results_api_v1_cache_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCacheEntryRequest) GetMetadata() *v1.CacheMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateCacheEntryRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CreateCacheEntryRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type CreateCacheEntryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Ok    bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// SAS URL to upload the cache archive
	SignedUploadUrl string `protobuf:"bytes,2,opt,name=signed_upload_url,json=signedUploadUrl,proto3" json:"signed_upload_url,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateCacheEntryResponse) Reset() {
	*x = CreateCacheEntryResponse{}
	mi := &file_results_api_v1_cache_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCacheEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCacheEntryResponse) ProtoMessage() {}

func (x *CreateCacheEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_results_api_v1_cache_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCacheEntryResponse.ProtoReflect.Descriptor instead.
func (*CreateCacheEntryResponse) Descriptor() ([]byte, []int) {
	return file_results_api_v1_cache_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCacheEntryResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *CreateCacheEntryResponse) GetSignedUploadUrl() string {
	if x != nil {
		return x.SignedUploadUrl
	}
	return ""
}

type FinalizeCacheEntryUploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Scope and other metadata for the cache entry
	Metadata *v1.CacheMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// An explicit key for a cache entry
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Size of the cache archive in Bytes
	SizeBytes int64 `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	// Hash of the compression tool, runner OS and paths cached
	Version       string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeCacheEntryUploadRequest) Reset() {
	*x = FinalizeCacheEntryUploadRequest{}
	mi := &file_results_api_v1_cache_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeCacheEntryUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeCacheEntryUploadRequest) ProtoMessage() {}

func (x *FinalizeCacheEntryUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_results_api_v1_cache_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeCacheEntryUploadRequest.ProtoReflect.Descriptor instead.
func (*FinalizeCacheEntryUploadRequest) Descriptor() ([]byte, []int) {
	return file_results_api_v1_cache_proto_rawDescGZIP(), []int{2}
}

func (x *FinalizeCacheEntryUploadRequest) GetMetadata() *v1.CacheMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *FinalizeCacheEntryUploadRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FinalizeCacheEntryUploadRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *FinalizeCacheEntryUploadRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type FinalizeCacheEntryUploadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Ok    bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// Cache entry database ID
	EntryId       int64 `protobuf:"varint,2,opt,name=entry_id,json=entryId,proto3" json:"entry_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeCacheEntryUploadResponse) Reset() {
	*x = FinalizeCacheEntryUploadResponse{}
	mi := &file_results_api_v1_cache_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeCacheEntryUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeCacheEntryUploadResponse) ProtoMessage() {}

func (x *FinalizeCacheEntryUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_results_api_v1_cache_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeCacheEntryUploadResponse.ProtoReflect.Descriptor instead.
func (*FinalizeCacheEntryUploadResponse) Descriptor() ([]byte, []int) {
	return file_results_api_v1_cache_proto_rawDescGZIP(), []int{3}
}

func (x *FinalizeCacheEntryUploadResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *FinalizeCacheEntryUploadResponse) GetEntryId() int64 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

type GetCacheEntryDownloadURLRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Scope and other metadata for the cache entry
	Metadata *v1.CacheMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// An explicit key for a cache entry
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Restore keys used for prefix searching
	RestoreKeys []string `protobuf:"bytes,3,rep,name=restore_keys,json=restoreKeys,proto3" json:"restore_keys,omitempty"`
	// Hash of the compression tool, runner OS and paths cached
	Version       string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCacheEntryDownloadURLRequest) Reset() {
	*x = GetCacheEntryDownloadURLRequest{}
	mi := &file_results_api_v1_cache_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCacheEntryDownloadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCacheEntryDownloadURLRequest) ProtoMessage() {}

func (x *GetCacheEntryDownloadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_results_api_v1_cache_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCacheEntryDownloadURLRequest.ProtoReflect.Descriptor instead.
func (*GetCacheEntryDownloadURLRequest) Descriptor() ([]byte, []int) {
	return file_results_api_v1_cache_proto_rawDescGZIP(), []int{4}
}

func (x *GetCacheEntryDownloadURLRequest) GetMetadata() *v1.CacheMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetCacheEntryDownloadURLRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetCacheEntryDownloadURLRequest) GetRestoreKeys() []string {
	if x != nil {
		return x.RestoreKeys
	}
	return nil
}

func (x *GetCacheEntryDownloadURLRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetCacheEntryDownloadURLResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Ok    bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// SAS URL to download the cache archive
	SignedDownloadUrl string `protobuf:"bytes,2,opt,name=signed_download_url,json=signedDownloadUrl,proto3" json:"signed_download_url,omitempty"`
	// Key or restore key that matches the lookup
	MatchedKey    string `protobuf:"bytes,3,opt,name=matched_key,json=matchedKey,proto3" json:"matched_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCacheEntryDownloadURLResponse) Reset() {
	*x = GetCacheEntryDownloadURLResponse{}
	mi := &file_results_api_v1_cache_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCacheEntryDownloadURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCacheEntryDownloadURLResponse) ProtoMessage() {}

func (x *GetCacheEntryDownloadURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_results_api_v1_cache_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCacheEntryDownloadURLResponse.ProtoReflect.Descriptor instead.
func (*GetCacheEntryDownloadURLResponse) Descriptor() ([]byte, []int) {
	return file_results_api_v1_cache_proto_rawDescGZIP(), []int{5}
}

func (x *GetCacheEntryDownloadURLResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *GetCacheEntryDownloadURLResponse) GetSignedDownloadUrl() string {
	if x != nil {
		return x.SignedDownloadUrl
	}
	return ""
}

func (x *GetCacheEntryDownloadURLResponse) GetMatchedKey() string {
	if x != nil {
		return x.MatchedKey
	}
	return ""
}

var File_results_api_v1_cache_proto protoreflect.FileDescriptor

const file_results_api_v1_cache_proto_rawDesc = "" +
	"\n" +
	"\x1aresults/api/v1/cache.proto\x12\x1dgithub.actions.results.api.v1\x1a'results/entities/v1/cachemetadata.proto\"\x94\x01\n" +
	"\x17CreateCacheEntryRequest\x12M\n" +
	"\bmetadata\x18\x01 \x01(\v21.github.actions.results.entities.v1.CacheMetadataR\bmetadata\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\"V\n" +
	"\x18CreateCacheEntryResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12*\n" +
	"\x11signed_upload_url\x18\x02 \x01(\tR\x0fsignedUploadUrl\"\xbb\x01\n" +
	"\x1fFinalizeCacheEntryUploadRequest\x12M\n" +
	"\bmetadata\x18\x01 \x01(\v21.github.actions.results.entities.v1.CacheMetadataR\bmetadata\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x03 \x01(\x03R\tsizeBytes\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\"M\n" +
	" FinalizeCacheEntryUploadResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x19\n" +
	"\bentry_id\x18\x02 \x01(\x03R\aentryId\"\xbf\x01\n" +
	"\x1fGetCacheEntryDownloadURLRequest\x12M\n" +
	"\bmetadata\x18\x01 \x01(\v21.github.actions.results.entities.v1.CacheMetadataR\bmetadata\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12!\n" +
	"\frestore_keys\x18\x03 \x03(\tR\vrestoreKeys\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\"\x83\x01\n" +
	" GetCacheEntryDownloadURLResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12.\n" +
	"\x13signed_download_url\x18\x02 \x01(\tR\x11signedDownloadUrl\x12\x1f\n" +
	"\vmatched_key\x18\x03 \x01(\tR\n" +
	"matchedKey2\xd0\x03\n" +
	"\fCacheService\x12\x83\x01\n" +
	"\x10CreateCacheEntry\x126.github.actions.results.api.v1.CreateCacheEntryRequest\x1a7.github.actions.results.api.v1.CreateCacheEntryResponse\x12\x9b\x01\n" +
	"\x18FinalizeCacheEntryUpload\x12>.github.actions.results.api.v1.FinalizeCacheEntryUploadRequest\x1a?.github.actions.results.api.v1.FinalizeCacheEntryUploadResponse\x12\x9b\x01\n" +
	"\x18GetCacheEntryDownloadURL\x12>.github.actions.results.api.v1.GetCacheEntryDownloadURLRequest\x1a?.github.actions.results.api.v1.GetCacheEntryDownloadURLResponseB+Z)toolkit-proto/generated_go/results/api/v1b\x06proto3"

var (
	file_results_api_v1_cache_proto_rawDescOnce sync.Once
	file_results_api_v1_cache_proto_rawDescData []byte
)

func file_results_api_v1_cache_proto_rawDescGZIP() []byte {
	file_results_api_v1_cache_proto_rawDescOnce.Do(func() {
		file_results_api_v1_cache_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_results_api_v1_cache_proto_rawDesc), len(file_results_api_v1_cache_proto_rawDesc)))
	})
	return file_results_api_v1_cache_proto_rawDescData
}

var file_results_api_v1_cache_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_results_api_v1_cache_proto_goTypes = []any{
	(*CreateCacheEntryRequest)(nil),          // 0: github.actions.results.api.v1.CreateCacheEntryRequest
	(*CreateCacheEntryResponse)(nil),         // 1: github.actions.results.api.v1.CreateCacheEntryResponse
	(*FinalizeCacheEntryUploadRequest)(nil),  // 2: github.actions.results.api.v1.FinalizeCacheEntryUploadRequest
	(*FinalizeCacheEntryUploadResponse)(nil), // 3: github.actions.results.api.v1.FinalizeCacheEntryUploadResponse
	(*GetCacheEntryDownloadURLRequest)(nil),  // 4: github.actions.results.api.v1.GetCacheEntryDownloadURLRequest
	(*GetCacheEntryDownloadURLResponse)(nil), // 5: github.actions.results.api.v1.GetCacheEntryDownloadURLResponse
	(*v1.CacheMetadata)(nil),                 // 6: github.actions.results.entities.v1.CacheMetadata
}
var file_results_api_v1_cache_proto_depIdxs = []int32{
	6, // 0: github.actions.results.api.v1.CreateCacheEntryRequest.metadata:type_name -> github.actions.results.entities.v1.CacheMetadata
	6, // 1: github.actions.results.api.v1.FinalizeCacheEntryUploadRequest.metadata:type_name -> github.actions.results.entities.v1.CacheMetadata
	6, // 2: github.actions.results.api.v1.GetCacheEntryDownloadURLRequest.metadata:type_name -> github.actions.results.entities.v1.CacheMetadata
	0, // 3: github.actions.results.api.v1.CacheService.CreateCacheEntry:input_type -> github.actions.results.api.v1.CreateCacheEntryRequest
	2, // 4: github.actions.results.api.v1.CacheService.FinalizeCacheEntryUpload:input_type -> github.actions.results.api.v1.FinalizeCacheEntryUploadRequest
	4, // 5: github.actions.results.api.v1.CacheService.GetCacheEntryDownloadURL:input_type -> github.actions.results.api.v1.GetCacheEntryDownloadURLRequest
	1, // 6: github.actions.results.api.v1.CacheService.CreateCacheEntry:output_type -> github.actions.results.api.v1.CreateCacheEntryResponse
	3, // 7: github.actions.results.api.v1.CacheService.FinalizeCacheEntryUpload:output_type -> github.actions.results.api.v1.FinalizeCacheEntryUploadResponse
	5, // 8: github.actions.results.api.v1.CacheService.GetCacheEntryDownloadURL:output_type -> github.actions.results.api.v1.GetCacheEntryDownloadURLResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_results_api_v1_cache_proto_init() }
func file_results_api_v1_cache_proto_init() {
	if File_results_api_v1_cache_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_results_api_v1_cache_proto_rawDesc), len(file_results_api_v1_cache_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_results_api_v1_cache_proto_goTypes,
		DependencyIndexes: file_results_api_v1_cache_proto_depIdxs,
		MessageInfos:      file_results_api_v1_cache_proto_msgTypes,
	}.Build()
	File_results_api_v1_cache_proto = out.File
	file_results_api_v1_cache_proto_goTypes = nil
	file_results_api_v1_cache_proto_depIdxs = nil
}
