/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the V1SendInviteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SendInviteRequest{}

// V1SendInviteRequest struct for V1SendInviteRequest
type V1SendInviteRequest struct {
	Email string `json:"email"`
	InviteId string `json:"invite_id"`
	AdditionalProperties map[string]interface{}
}

type _V1SendInviteRequest V1SendInviteRequest

// NewV1SendInviteRequest instantiates a new V1SendInviteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SendInviteRequest(email string, inviteId string) *V1SendInviteRequest {
	this := V1SendInviteRequest{}
	this.Email = email
	this.InviteId = inviteId
	return &this
}

// NewV1SendInviteRequestWithDefaults instantiates a new V1SendInviteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SendInviteRequestWithDefaults() *V1SendInviteRequest {
	this := V1SendInviteRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *V1SendInviteRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *V1SendInviteRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *V1SendInviteRequest) SetEmail(v string) {
	o.Email = v
}

// GetInviteId returns the InviteId field value
func (o *V1SendInviteRequest) GetInviteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InviteId
}

// GetInviteIdOk returns a tuple with the InviteId field value
// and a boolean to check if the value has been set.
func (o *V1SendInviteRequest) GetInviteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InviteId, true
}

// SetInviteId sets field value
func (o *V1SendInviteRequest) SetInviteId(v string) {
	o.InviteId = v
}

func (o V1SendInviteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SendInviteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	toSerialize["invite_id"] = o.InviteId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *V1SendInviteRequest) UnmarshalJSON(bytes []byte) (err error) {
	varV1SendInviteRequest := _V1SendInviteRequest{}

	err = json.Unmarshal(bytes, &varV1SendInviteRequest)

	if err != nil {
		return err
	}

	*o = V1SendInviteRequest(varV1SendInviteRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "email")
		delete(additionalProperties, "invite_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableV1SendInviteRequest struct {
	value *V1SendInviteRequest
	isSet bool
}

func (v NullableV1SendInviteRequest) Get() *V1SendInviteRequest {
	return v.value
}

func (v *NullableV1SendInviteRequest) Set(val *V1SendInviteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SendInviteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SendInviteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SendInviteRequest(val *V1SendInviteRequest) *NullableV1SendInviteRequest {
	return &NullableV1SendInviteRequest{value: val, isSet: true}
}

func (v NullableV1SendInviteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SendInviteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


