/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsListRunnerImageVersionsOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsListRunnerImageVersionsOutput{}

// CommonsListRunnerImageVersionsOutput struct for CommonsListRunnerImageVersionsOutput
type CommonsListRunnerImageVersionsOutput struct {
	RunnerImageVersions []CommonsRunnerImageVersion `json:"runner_image_versions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsListRunnerImageVersionsOutput CommonsListRunnerImageVersionsOutput

// NewCommonsListRunnerImageVersionsOutput instantiates a new CommonsListRunnerImageVersionsOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsListRunnerImageVersionsOutput() *CommonsListRunnerImageVersionsOutput {
	this := CommonsListRunnerImageVersionsOutput{}
	return &this
}

// NewCommonsListRunnerImageVersionsOutputWithDefaults instantiates a new CommonsListRunnerImageVersionsOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsListRunnerImageVersionsOutputWithDefaults() *CommonsListRunnerImageVersionsOutput {
	this := CommonsListRunnerImageVersionsOutput{}
	return &this
}

// GetRunnerImageVersions returns the RunnerImageVersions field value if set, zero value otherwise.
func (o *CommonsListRunnerImageVersionsOutput) GetRunnerImageVersions() []CommonsRunnerImageVersion {
	if o == nil || IsNil(o.RunnerImageVersions) {
		var ret []CommonsRunnerImageVersion
		return ret
	}
	return o.RunnerImageVersions
}

// GetRunnerImageVersionsOk returns a tuple with the RunnerImageVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListRunnerImageVersionsOutput) GetRunnerImageVersionsOk() ([]CommonsRunnerImageVersion, bool) {
	if o == nil || IsNil(o.RunnerImageVersions) {
		return nil, false
	}
	return o.RunnerImageVersions, true
}

// HasRunnerImageVersions returns a boolean if a field has been set.
func (o *CommonsListRunnerImageVersionsOutput) HasRunnerImageVersions() bool {
	if o != nil && !IsNil(o.RunnerImageVersions) {
		return true
	}

	return false
}

// SetRunnerImageVersions gets a reference to the given []CommonsRunnerImageVersion and assigns it to the RunnerImageVersions field.
func (o *CommonsListRunnerImageVersionsOutput) SetRunnerImageVersions(v []CommonsRunnerImageVersion) {
	o.RunnerImageVersions = v
}

func (o CommonsListRunnerImageVersionsOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsListRunnerImageVersionsOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RunnerImageVersions) {
		toSerialize["runner_image_versions"] = o.RunnerImageVersions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsListRunnerImageVersionsOutput) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsListRunnerImageVersionsOutput := _CommonsListRunnerImageVersionsOutput{}

	err = json.Unmarshal(bytes, &varCommonsListRunnerImageVersionsOutput)

	if err != nil {
		return err
	}

	*o = CommonsListRunnerImageVersionsOutput(varCommonsListRunnerImageVersionsOutput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "runner_image_versions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsListRunnerImageVersionsOutput struct {
	value *CommonsListRunnerImageVersionsOutput
	isSet bool
}

func (v NullableCommonsListRunnerImageVersionsOutput) Get() *CommonsListRunnerImageVersionsOutput {
	return v.value
}

func (v *NullableCommonsListRunnerImageVersionsOutput) Set(val *CommonsListRunnerImageVersionsOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsListRunnerImageVersionsOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsListRunnerImageVersionsOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsListRunnerImageVersionsOutput(val *CommonsListRunnerImageVersionsOutput) *NullableCommonsListRunnerImageVersionsOutput {
	return &NullableCommonsListRunnerImageVersionsOutput{value: val, isSet: true}
}

func (v NullableCommonsListRunnerImageVersionsOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsListRunnerImageVersionsOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


