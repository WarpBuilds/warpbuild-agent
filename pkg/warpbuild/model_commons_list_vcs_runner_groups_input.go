/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsListVCSRunnerGroupsInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsListVCSRunnerGroupsInput{}

// CommonsListVCSRunnerGroupsInput struct for CommonsListVCSRunnerGroupsInput
type CommonsListVCSRunnerGroupsInput struct {
	FetchFromRemote *bool `json:"fetch_from_remote,omitempty"`
	IntegrationId *string `json:"integration_id,omitempty"`
	Owner *string `json:"owner,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsListVCSRunnerGroupsInput CommonsListVCSRunnerGroupsInput

// NewCommonsListVCSRunnerGroupsInput instantiates a new CommonsListVCSRunnerGroupsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsListVCSRunnerGroupsInput() *CommonsListVCSRunnerGroupsInput {
	this := CommonsListVCSRunnerGroupsInput{}
	return &this
}

// NewCommonsListVCSRunnerGroupsInputWithDefaults instantiates a new CommonsListVCSRunnerGroupsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsListVCSRunnerGroupsInputWithDefaults() *CommonsListVCSRunnerGroupsInput {
	this := CommonsListVCSRunnerGroupsInput{}
	return &this
}

// GetFetchFromRemote returns the FetchFromRemote field value if set, zero value otherwise.
func (o *CommonsListVCSRunnerGroupsInput) GetFetchFromRemote() bool {
	if o == nil || IsNil(o.FetchFromRemote) {
		var ret bool
		return ret
	}
	return *o.FetchFromRemote
}

// GetFetchFromRemoteOk returns a tuple with the FetchFromRemote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListVCSRunnerGroupsInput) GetFetchFromRemoteOk() (*bool, bool) {
	if o == nil || IsNil(o.FetchFromRemote) {
		return nil, false
	}
	return o.FetchFromRemote, true
}

// HasFetchFromRemote returns a boolean if a field has been set.
func (o *CommonsListVCSRunnerGroupsInput) HasFetchFromRemote() bool {
	if o != nil && !IsNil(o.FetchFromRemote) {
		return true
	}

	return false
}

// SetFetchFromRemote gets a reference to the given bool and assigns it to the FetchFromRemote field.
func (o *CommonsListVCSRunnerGroupsInput) SetFetchFromRemote(v bool) {
	o.FetchFromRemote = &v
}

// GetIntegrationId returns the IntegrationId field value if set, zero value otherwise.
func (o *CommonsListVCSRunnerGroupsInput) GetIntegrationId() string {
	if o == nil || IsNil(o.IntegrationId) {
		var ret string
		return ret
	}
	return *o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListVCSRunnerGroupsInput) GetIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrationId) {
		return nil, false
	}
	return o.IntegrationId, true
}

// HasIntegrationId returns a boolean if a field has been set.
func (o *CommonsListVCSRunnerGroupsInput) HasIntegrationId() bool {
	if o != nil && !IsNil(o.IntegrationId) {
		return true
	}

	return false
}

// SetIntegrationId gets a reference to the given string and assigns it to the IntegrationId field.
func (o *CommonsListVCSRunnerGroupsInput) SetIntegrationId(v string) {
	o.IntegrationId = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *CommonsListVCSRunnerGroupsInput) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListVCSRunnerGroupsInput) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *CommonsListVCSRunnerGroupsInput) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *CommonsListVCSRunnerGroupsInput) SetOwner(v string) {
	o.Owner = &v
}

func (o CommonsListVCSRunnerGroupsInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsListVCSRunnerGroupsInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FetchFromRemote) {
		toSerialize["fetch_from_remote"] = o.FetchFromRemote
	}
	if !IsNil(o.IntegrationId) {
		toSerialize["integration_id"] = o.IntegrationId
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsListVCSRunnerGroupsInput) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsListVCSRunnerGroupsInput := _CommonsListVCSRunnerGroupsInput{}

	err = json.Unmarshal(bytes, &varCommonsListVCSRunnerGroupsInput)

	if err != nil {
		return err
	}

	*o = CommonsListVCSRunnerGroupsInput(varCommonsListVCSRunnerGroupsInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "fetch_from_remote")
		delete(additionalProperties, "integration_id")
		delete(additionalProperties, "owner")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsListVCSRunnerGroupsInput struct {
	value *CommonsListVCSRunnerGroupsInput
	isSet bool
}

func (v NullableCommonsListVCSRunnerGroupsInput) Get() *CommonsListVCSRunnerGroupsInput {
	return v.value
}

func (v *NullableCommonsListVCSRunnerGroupsInput) Set(val *CommonsListVCSRunnerGroupsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsListVCSRunnerGroupsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsListVCSRunnerGroupsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsListVCSRunnerGroupsInput(val *CommonsListVCSRunnerGroupsInput) *NullableCommonsListVCSRunnerGroupsInput {
	return &NullableCommonsListVCSRunnerGroupsInput{value: val, isSet: true}
}

func (v NullableCommonsListVCSRunnerGroupsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsListVCSRunnerGroupsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


