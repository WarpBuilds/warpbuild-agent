/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsListRunnerImagesOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsListRunnerImagesOutput{}

// CommonsListRunnerImagesOutput struct for CommonsListRunnerImagesOutput
type CommonsListRunnerImagesOutput struct {
	RunnerImages []CommonsRunnerImage `json:"runner_images,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsListRunnerImagesOutput CommonsListRunnerImagesOutput

// NewCommonsListRunnerImagesOutput instantiates a new CommonsListRunnerImagesOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsListRunnerImagesOutput() *CommonsListRunnerImagesOutput {
	this := CommonsListRunnerImagesOutput{}
	return &this
}

// NewCommonsListRunnerImagesOutputWithDefaults instantiates a new CommonsListRunnerImagesOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsListRunnerImagesOutputWithDefaults() *CommonsListRunnerImagesOutput {
	this := CommonsListRunnerImagesOutput{}
	return &this
}

// GetRunnerImages returns the RunnerImages field value if set, zero value otherwise.
func (o *CommonsListRunnerImagesOutput) GetRunnerImages() []CommonsRunnerImage {
	if o == nil || IsNil(o.RunnerImages) {
		var ret []CommonsRunnerImage
		return ret
	}
	return o.RunnerImages
}

// GetRunnerImagesOk returns a tuple with the RunnerImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListRunnerImagesOutput) GetRunnerImagesOk() ([]CommonsRunnerImage, bool) {
	if o == nil || IsNil(o.RunnerImages) {
		return nil, false
	}
	return o.RunnerImages, true
}

// HasRunnerImages returns a boolean if a field has been set.
func (o *CommonsListRunnerImagesOutput) HasRunnerImages() bool {
	if o != nil && !IsNil(o.RunnerImages) {
		return true
	}

	return false
}

// SetRunnerImages gets a reference to the given []CommonsRunnerImage and assigns it to the RunnerImages field.
func (o *CommonsListRunnerImagesOutput) SetRunnerImages(v []CommonsRunnerImage) {
	o.RunnerImages = v
}

func (o CommonsListRunnerImagesOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsListRunnerImagesOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RunnerImages) {
		toSerialize["runner_images"] = o.RunnerImages
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsListRunnerImagesOutput) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsListRunnerImagesOutput := _CommonsListRunnerImagesOutput{}

	err = json.Unmarshal(bytes, &varCommonsListRunnerImagesOutput)

	if err != nil {
		return err
	}

	*o = CommonsListRunnerImagesOutput(varCommonsListRunnerImagesOutput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "runner_images")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsListRunnerImagesOutput struct {
	value *CommonsListRunnerImagesOutput
	isSet bool
}

func (v NullableCommonsListRunnerImagesOutput) Get() *CommonsListRunnerImagesOutput {
	return v.value
}

func (v *NullableCommonsListRunnerImagesOutput) Set(val *CommonsListRunnerImagesOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsListRunnerImagesOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsListRunnerImagesOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsListRunnerImagesOutput(val *CommonsListRunnerImagesOutput) *NullableCommonsListRunnerImagesOutput {
	return &NullableCommonsListRunnerImagesOutput{value: val, isSet: true}
}

func (v NullableCommonsListRunnerImagesOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsListRunnerImagesOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


