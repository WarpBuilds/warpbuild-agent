/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsUserToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsUserToken{}

// CommonsUserToken struct for CommonsUserToken
type CommonsUserToken struct {
	Id *string `json:"id,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	Provider *string `json:"provider,omitempty"`
	ProviderTenantId *string `json:"provider_tenant_id,omitempty"`
	ProviderUserId *string `json:"provider_user_id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsUserToken CommonsUserToken

// NewCommonsUserToken instantiates a new CommonsUserToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsUserToken() *CommonsUserToken {
	this := CommonsUserToken{}
	return &this
}

// NewCommonsUserTokenWithDefaults instantiates a new CommonsUserToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsUserTokenWithDefaults() *CommonsUserToken {
	this := CommonsUserToken{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonsUserToken) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsUserToken) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonsUserToken) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonsUserToken) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CommonsUserToken) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsUserToken) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CommonsUserToken) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CommonsUserToken) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *CommonsUserToken) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsUserToken) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *CommonsUserToken) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *CommonsUserToken) SetProvider(v string) {
	o.Provider = &v
}

// GetProviderTenantId returns the ProviderTenantId field value if set, zero value otherwise.
func (o *CommonsUserToken) GetProviderTenantId() string {
	if o == nil || IsNil(o.ProviderTenantId) {
		var ret string
		return ret
	}
	return *o.ProviderTenantId
}

// GetProviderTenantIdOk returns a tuple with the ProviderTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsUserToken) GetProviderTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderTenantId) {
		return nil, false
	}
	return o.ProviderTenantId, true
}

// HasProviderTenantId returns a boolean if a field has been set.
func (o *CommonsUserToken) HasProviderTenantId() bool {
	if o != nil && !IsNil(o.ProviderTenantId) {
		return true
	}

	return false
}

// SetProviderTenantId gets a reference to the given string and assigns it to the ProviderTenantId field.
func (o *CommonsUserToken) SetProviderTenantId(v string) {
	o.ProviderTenantId = &v
}

// GetProviderUserId returns the ProviderUserId field value if set, zero value otherwise.
func (o *CommonsUserToken) GetProviderUserId() string {
	if o == nil || IsNil(o.ProviderUserId) {
		var ret string
		return ret
	}
	return *o.ProviderUserId
}

// GetProviderUserIdOk returns a tuple with the ProviderUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsUserToken) GetProviderUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderUserId) {
		return nil, false
	}
	return o.ProviderUserId, true
}

// HasProviderUserId returns a boolean if a field has been set.
func (o *CommonsUserToken) HasProviderUserId() bool {
	if o != nil && !IsNil(o.ProviderUserId) {
		return true
	}

	return false
}

// SetProviderUserId gets a reference to the given string and assigns it to the ProviderUserId field.
func (o *CommonsUserToken) SetProviderUserId(v string) {
	o.ProviderUserId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *CommonsUserToken) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsUserToken) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *CommonsUserToken) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *CommonsUserToken) SetUserId(v string) {
	o.UserId = &v
}

func (o CommonsUserToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsUserToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.ProviderTenantId) {
		toSerialize["provider_tenant_id"] = o.ProviderTenantId
	}
	if !IsNil(o.ProviderUserId) {
		toSerialize["provider_user_id"] = o.ProviderUserId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsUserToken) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsUserToken := _CommonsUserToken{}

	err = json.Unmarshal(bytes, &varCommonsUserToken)

	if err != nil {
		return err
	}

	*o = CommonsUserToken(varCommonsUserToken)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "provider_tenant_id")
		delete(additionalProperties, "provider_user_id")
		delete(additionalProperties, "user_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsUserToken struct {
	value *CommonsUserToken
	isSet bool
}

func (v NullableCommonsUserToken) Get() *CommonsUserToken {
	return v.value
}

func (v *NullableCommonsUserToken) Set(val *CommonsUserToken) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsUserToken) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsUserToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsUserToken(val *CommonsUserToken) *NullableCommonsUserToken {
	return &NullableCommonsUserToken{value: val, isSet: true}
}

func (v NullableCommonsUserToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsUserToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


