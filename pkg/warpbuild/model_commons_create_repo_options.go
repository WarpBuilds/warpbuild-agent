/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsCreateRepoOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsCreateRepoOptions{}

// CommonsCreateRepoOptions struct for CommonsCreateRepoOptions
type CommonsCreateRepoOptions struct {
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	IntegrationId string `json:"integration_id"`
	IsPrivate *bool `json:"is_private,omitempty"`
	Name string `json:"name"`
	Owner string `json:"owner"`
	ShouldAutoInit *bool `json:"should_auto_init,omitempty"`
	Upsert *bool `json:"upsert,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsCreateRepoOptions CommonsCreateRepoOptions

// NewCommonsCreateRepoOptions instantiates a new CommonsCreateRepoOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsCreateRepoOptions(integrationId string, name string, owner string) *CommonsCreateRepoOptions {
	this := CommonsCreateRepoOptions{}
	this.IntegrationId = integrationId
	this.Name = name
	this.Owner = owner
	return &this
}

// NewCommonsCreateRepoOptionsWithDefaults instantiates a new CommonsCreateRepoOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsCreateRepoOptionsWithDefaults() *CommonsCreateRepoOptions {
	this := CommonsCreateRepoOptions{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CommonsCreateRepoOptions) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCreateRepoOptions) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CommonsCreateRepoOptions) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CommonsCreateRepoOptions) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CommonsCreateRepoOptions) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCreateRepoOptions) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CommonsCreateRepoOptions) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CommonsCreateRepoOptions) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetIntegrationId returns the IntegrationId field value
func (o *CommonsCreateRepoOptions) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value
// and a boolean to check if the value has been set.
func (o *CommonsCreateRepoOptions) GetIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationId, true
}

// SetIntegrationId sets field value
func (o *CommonsCreateRepoOptions) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetIsPrivate returns the IsPrivate field value if set, zero value otherwise.
func (o *CommonsCreateRepoOptions) GetIsPrivate() bool {
	if o == nil || IsNil(o.IsPrivate) {
		var ret bool
		return ret
	}
	return *o.IsPrivate
}

// GetIsPrivateOk returns a tuple with the IsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCreateRepoOptions) GetIsPrivateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrivate) {
		return nil, false
	}
	return o.IsPrivate, true
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *CommonsCreateRepoOptions) HasIsPrivate() bool {
	if o != nil && !IsNil(o.IsPrivate) {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given bool and assigns it to the IsPrivate field.
func (o *CommonsCreateRepoOptions) SetIsPrivate(v bool) {
	o.IsPrivate = &v
}

// GetName returns the Name field value
func (o *CommonsCreateRepoOptions) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CommonsCreateRepoOptions) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CommonsCreateRepoOptions) SetName(v string) {
	o.Name = v
}

// GetOwner returns the Owner field value
func (o *CommonsCreateRepoOptions) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *CommonsCreateRepoOptions) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *CommonsCreateRepoOptions) SetOwner(v string) {
	o.Owner = v
}

// GetShouldAutoInit returns the ShouldAutoInit field value if set, zero value otherwise.
func (o *CommonsCreateRepoOptions) GetShouldAutoInit() bool {
	if o == nil || IsNil(o.ShouldAutoInit) {
		var ret bool
		return ret
	}
	return *o.ShouldAutoInit
}

// GetShouldAutoInitOk returns a tuple with the ShouldAutoInit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCreateRepoOptions) GetShouldAutoInitOk() (*bool, bool) {
	if o == nil || IsNil(o.ShouldAutoInit) {
		return nil, false
	}
	return o.ShouldAutoInit, true
}

// HasShouldAutoInit returns a boolean if a field has been set.
func (o *CommonsCreateRepoOptions) HasShouldAutoInit() bool {
	if o != nil && !IsNil(o.ShouldAutoInit) {
		return true
	}

	return false
}

// SetShouldAutoInit gets a reference to the given bool and assigns it to the ShouldAutoInit field.
func (o *CommonsCreateRepoOptions) SetShouldAutoInit(v bool) {
	o.ShouldAutoInit = &v
}

// GetUpsert returns the Upsert field value if set, zero value otherwise.
func (o *CommonsCreateRepoOptions) GetUpsert() bool {
	if o == nil || IsNil(o.Upsert) {
		var ret bool
		return ret
	}
	return *o.Upsert
}

// GetUpsertOk returns a tuple with the Upsert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCreateRepoOptions) GetUpsertOk() (*bool, bool) {
	if o == nil || IsNil(o.Upsert) {
		return nil, false
	}
	return o.Upsert, true
}

// HasUpsert returns a boolean if a field has been set.
func (o *CommonsCreateRepoOptions) HasUpsert() bool {
	if o != nil && !IsNil(o.Upsert) {
		return true
	}

	return false
}

// SetUpsert gets a reference to the given bool and assigns it to the Upsert field.
func (o *CommonsCreateRepoOptions) SetUpsert(v bool) {
	o.Upsert = &v
}

func (o CommonsCreateRepoOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsCreateRepoOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	toSerialize["integration_id"] = o.IntegrationId
	if !IsNil(o.IsPrivate) {
		toSerialize["is_private"] = o.IsPrivate
	}
	toSerialize["name"] = o.Name
	toSerialize["owner"] = o.Owner
	if !IsNil(o.ShouldAutoInit) {
		toSerialize["should_auto_init"] = o.ShouldAutoInit
	}
	if !IsNil(o.Upsert) {
		toSerialize["upsert"] = o.Upsert
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsCreateRepoOptions) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsCreateRepoOptions := _CommonsCreateRepoOptions{}

<<<<<<< HEAD
	err = json.Unmarshal(bytes, &varCommonsCreateRepoOptions)

	if err != nil {
		return err
	}

	*o = CommonsCreateRepoOptions(varCommonsCreateRepoOptions)

=======
	if err = json.Unmarshal(bytes, &varCommonsCreateRepoOptions); err == nil {
		*o = CommonsCreateRepoOptions(varCommonsCreateRepoOptions)
	}

>>>>>>> prajjwal-warp-323
	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "display_name")
		delete(additionalProperties, "integration_id")
		delete(additionalProperties, "is_private")
		delete(additionalProperties, "name")
		delete(additionalProperties, "owner")
		delete(additionalProperties, "should_auto_init")
		delete(additionalProperties, "upsert")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsCreateRepoOptions struct {
	value *CommonsCreateRepoOptions
	isSet bool
}

func (v NullableCommonsCreateRepoOptions) Get() *CommonsCreateRepoOptions {
	return v.value
}

func (v *NullableCommonsCreateRepoOptions) Set(val *CommonsCreateRepoOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsCreateRepoOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsCreateRepoOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsCreateRepoOptions(val *CommonsCreateRepoOptions) *NullableCommonsCreateRepoOptions {
	return &NullableCommonsCreateRepoOptions{value: val, isSet: true}
}

func (v NullableCommonsCreateRepoOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsCreateRepoOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


