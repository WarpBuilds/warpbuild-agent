/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsInternalPostUsageOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsInternalPostUsageOutput{}

// CommonsInternalPostUsageOutput struct for CommonsInternalPostUsageOutput
type CommonsInternalPostUsageOutput struct {
	LedgerId *string `json:"ledger_id,omitempty"`
	UsageId *string `json:"usage_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsInternalPostUsageOutput CommonsInternalPostUsageOutput

// NewCommonsInternalPostUsageOutput instantiates a new CommonsInternalPostUsageOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsInternalPostUsageOutput() *CommonsInternalPostUsageOutput {
	this := CommonsInternalPostUsageOutput{}
	return &this
}

// NewCommonsInternalPostUsageOutputWithDefaults instantiates a new CommonsInternalPostUsageOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsInternalPostUsageOutputWithDefaults() *CommonsInternalPostUsageOutput {
	this := CommonsInternalPostUsageOutput{}
	return &this
}

// GetLedgerId returns the LedgerId field value if set, zero value otherwise.
func (o *CommonsInternalPostUsageOutput) GetLedgerId() string {
	if o == nil || IsNil(o.LedgerId) {
		var ret string
		return ret
	}
	return *o.LedgerId
}

// GetLedgerIdOk returns a tuple with the LedgerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInternalPostUsageOutput) GetLedgerIdOk() (*string, bool) {
	if o == nil || IsNil(o.LedgerId) {
		return nil, false
	}
	return o.LedgerId, true
}

// HasLedgerId returns a boolean if a field has been set.
func (o *CommonsInternalPostUsageOutput) HasLedgerId() bool {
	if o != nil && !IsNil(o.LedgerId) {
		return true
	}

	return false
}

// SetLedgerId gets a reference to the given string and assigns it to the LedgerId field.
func (o *CommonsInternalPostUsageOutput) SetLedgerId(v string) {
	o.LedgerId = &v
}

// GetUsageId returns the UsageId field value if set, zero value otherwise.
func (o *CommonsInternalPostUsageOutput) GetUsageId() string {
	if o == nil || IsNil(o.UsageId) {
		var ret string
		return ret
	}
	return *o.UsageId
}

// GetUsageIdOk returns a tuple with the UsageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInternalPostUsageOutput) GetUsageIdOk() (*string, bool) {
	if o == nil || IsNil(o.UsageId) {
		return nil, false
	}
	return o.UsageId, true
}

// HasUsageId returns a boolean if a field has been set.
func (o *CommonsInternalPostUsageOutput) HasUsageId() bool {
	if o != nil && !IsNil(o.UsageId) {
		return true
	}

	return false
}

// SetUsageId gets a reference to the given string and assigns it to the UsageId field.
func (o *CommonsInternalPostUsageOutput) SetUsageId(v string) {
	o.UsageId = &v
}

func (o CommonsInternalPostUsageOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsInternalPostUsageOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LedgerId) {
		toSerialize["ledger_id"] = o.LedgerId
	}
	if !IsNil(o.UsageId) {
		toSerialize["usage_id"] = o.UsageId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsInternalPostUsageOutput) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsInternalPostUsageOutput := _CommonsInternalPostUsageOutput{}

	if err = json.Unmarshal(bytes, &varCommonsInternalPostUsageOutput); err == nil {
		*o = CommonsInternalPostUsageOutput(varCommonsInternalPostUsageOutput)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "ledger_id")
		delete(additionalProperties, "usage_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsInternalPostUsageOutput struct {
	value *CommonsInternalPostUsageOutput
	isSet bool
}

func (v NullableCommonsInternalPostUsageOutput) Get() *CommonsInternalPostUsageOutput {
	return v.value
}

func (v *NullableCommonsInternalPostUsageOutput) Set(val *CommonsInternalPostUsageOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsInternalPostUsageOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsInternalPostUsageOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsInternalPostUsageOutput(val *CommonsInternalPostUsageOutput) *NullableCommonsInternalPostUsageOutput {
	return &NullableCommonsInternalPostUsageOutput{value: val, isSet: true}
}

func (v NullableCommonsInternalPostUsageOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsInternalPostUsageOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


