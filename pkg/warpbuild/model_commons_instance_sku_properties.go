/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsInstanceSkuProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsInstanceSkuProperties{}

// CommonsInstanceSkuProperties struct for CommonsInstanceSkuProperties
type CommonsInstanceSkuProperties struct {
	BurstableSpeed *float32 `json:"burstable_speed,omitempty"`
	Generation *string `json:"generation,omitempty"`
	Gpu *int32 `json:"gpu,omitempty"`
	Manufacturer *string `json:"manufacturer,omitempty"`
	PerformanceCategory *string `json:"performance_category,omitempty"`
	PerformanceRating *int32 `json:"performance_rating,omitempty"`
	Speed *float32 `json:"speed,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsInstanceSkuProperties CommonsInstanceSkuProperties

// NewCommonsInstanceSkuProperties instantiates a new CommonsInstanceSkuProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsInstanceSkuProperties() *CommonsInstanceSkuProperties {
	this := CommonsInstanceSkuProperties{}
	return &this
}

// NewCommonsInstanceSkuPropertiesWithDefaults instantiates a new CommonsInstanceSkuProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsInstanceSkuPropertiesWithDefaults() *CommonsInstanceSkuProperties {
	this := CommonsInstanceSkuProperties{}
	return &this
}

// GetBurstableSpeed returns the BurstableSpeed field value if set, zero value otherwise.
func (o *CommonsInstanceSkuProperties) GetBurstableSpeed() float32 {
	if o == nil || IsNil(o.BurstableSpeed) {
		var ret float32
		return ret
	}
	return *o.BurstableSpeed
}

// GetBurstableSpeedOk returns a tuple with the BurstableSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInstanceSkuProperties) GetBurstableSpeedOk() (*float32, bool) {
	if o == nil || IsNil(o.BurstableSpeed) {
		return nil, false
	}
	return o.BurstableSpeed, true
}

// HasBurstableSpeed returns a boolean if a field has been set.
func (o *CommonsInstanceSkuProperties) HasBurstableSpeed() bool {
	if o != nil && !IsNil(o.BurstableSpeed) {
		return true
	}

	return false
}

// SetBurstableSpeed gets a reference to the given float32 and assigns it to the BurstableSpeed field.
func (o *CommonsInstanceSkuProperties) SetBurstableSpeed(v float32) {
	o.BurstableSpeed = &v
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *CommonsInstanceSkuProperties) GetGeneration() string {
	if o == nil || IsNil(o.Generation) {
		var ret string
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInstanceSkuProperties) GetGenerationOk() (*string, bool) {
	if o == nil || IsNil(o.Generation) {
		return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *CommonsInstanceSkuProperties) HasGeneration() bool {
	if o != nil && !IsNil(o.Generation) {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given string and assigns it to the Generation field.
func (o *CommonsInstanceSkuProperties) SetGeneration(v string) {
	o.Generation = &v
}

// GetGpu returns the Gpu field value if set, zero value otherwise.
func (o *CommonsInstanceSkuProperties) GetGpu() int32 {
	if o == nil || IsNil(o.Gpu) {
		var ret int32
		return ret
	}
	return *o.Gpu
}

// GetGpuOk returns a tuple with the Gpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInstanceSkuProperties) GetGpuOk() (*int32, bool) {
	if o == nil || IsNil(o.Gpu) {
		return nil, false
	}
	return o.Gpu, true
}

// HasGpu returns a boolean if a field has been set.
func (o *CommonsInstanceSkuProperties) HasGpu() bool {
	if o != nil && !IsNil(o.Gpu) {
		return true
	}

	return false
}

// SetGpu gets a reference to the given int32 and assigns it to the Gpu field.
func (o *CommonsInstanceSkuProperties) SetGpu(v int32) {
	o.Gpu = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *CommonsInstanceSkuProperties) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInstanceSkuProperties) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *CommonsInstanceSkuProperties) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *CommonsInstanceSkuProperties) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetPerformanceCategory returns the PerformanceCategory field value if set, zero value otherwise.
func (o *CommonsInstanceSkuProperties) GetPerformanceCategory() string {
	if o == nil || IsNil(o.PerformanceCategory) {
		var ret string
		return ret
	}
	return *o.PerformanceCategory
}

// GetPerformanceCategoryOk returns a tuple with the PerformanceCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInstanceSkuProperties) GetPerformanceCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.PerformanceCategory) {
		return nil, false
	}
	return o.PerformanceCategory, true
}

// HasPerformanceCategory returns a boolean if a field has been set.
func (o *CommonsInstanceSkuProperties) HasPerformanceCategory() bool {
	if o != nil && !IsNil(o.PerformanceCategory) {
		return true
	}

	return false
}

// SetPerformanceCategory gets a reference to the given string and assigns it to the PerformanceCategory field.
func (o *CommonsInstanceSkuProperties) SetPerformanceCategory(v string) {
	o.PerformanceCategory = &v
}

// GetPerformanceRating returns the PerformanceRating field value if set, zero value otherwise.
func (o *CommonsInstanceSkuProperties) GetPerformanceRating() int32 {
	if o == nil || IsNil(o.PerformanceRating) {
		var ret int32
		return ret
	}
	return *o.PerformanceRating
}

// GetPerformanceRatingOk returns a tuple with the PerformanceRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInstanceSkuProperties) GetPerformanceRatingOk() (*int32, bool) {
	if o == nil || IsNil(o.PerformanceRating) {
		return nil, false
	}
	return o.PerformanceRating, true
}

// HasPerformanceRating returns a boolean if a field has been set.
func (o *CommonsInstanceSkuProperties) HasPerformanceRating() bool {
	if o != nil && !IsNil(o.PerformanceRating) {
		return true
	}

	return false
}

// SetPerformanceRating gets a reference to the given int32 and assigns it to the PerformanceRating field.
func (o *CommonsInstanceSkuProperties) SetPerformanceRating(v int32) {
	o.PerformanceRating = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *CommonsInstanceSkuProperties) GetSpeed() float32 {
	if o == nil || IsNil(o.Speed) {
		var ret float32
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInstanceSkuProperties) GetSpeedOk() (*float32, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *CommonsInstanceSkuProperties) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given float32 and assigns it to the Speed field.
func (o *CommonsInstanceSkuProperties) SetSpeed(v float32) {
	o.Speed = &v
}

func (o CommonsInstanceSkuProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsInstanceSkuProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BurstableSpeed) {
		toSerialize["burstable_speed"] = o.BurstableSpeed
	}
	if !IsNil(o.Generation) {
		toSerialize["generation"] = o.Generation
	}
	if !IsNil(o.Gpu) {
		toSerialize["gpu"] = o.Gpu
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.PerformanceCategory) {
		toSerialize["performance_category"] = o.PerformanceCategory
	}
	if !IsNil(o.PerformanceRating) {
		toSerialize["performance_rating"] = o.PerformanceRating
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsInstanceSkuProperties) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsInstanceSkuProperties := _CommonsInstanceSkuProperties{}

	err = json.Unmarshal(bytes, &varCommonsInstanceSkuProperties)

	if err != nil {
		return err
	}

	*o = CommonsInstanceSkuProperties(varCommonsInstanceSkuProperties)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "burstable_speed")
		delete(additionalProperties, "generation")
		delete(additionalProperties, "gpu")
		delete(additionalProperties, "manufacturer")
		delete(additionalProperties, "performance_category")
		delete(additionalProperties, "performance_rating")
		delete(additionalProperties, "speed")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsInstanceSkuProperties struct {
	value *CommonsInstanceSkuProperties
	isSet bool
}

func (v NullableCommonsInstanceSkuProperties) Get() *CommonsInstanceSkuProperties {
	return v.value
}

func (v *NullableCommonsInstanceSkuProperties) Set(val *CommonsInstanceSkuProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsInstanceSkuProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsInstanceSkuProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsInstanceSkuProperties(val *CommonsInstanceSkuProperties) *NullableCommonsInstanceSkuProperties {
	return &NullableCommonsInstanceSkuProperties{value: val, isSet: true}
}

func (v NullableCommonsInstanceSkuProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsInstanceSkuProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


