/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsRunnerConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsRunnerConfiguration{}

// CommonsRunnerConfiguration struct for CommonsRunnerConfiguration
type CommonsRunnerConfiguration struct {
	Arch *string `json:"arch,omitempty"`
	Cores *int32 `json:"cores,omitempty"`
	Image *string `json:"image,omitempty"`
	Memory *int32 `json:"memory,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsRunnerConfiguration CommonsRunnerConfiguration

// NewCommonsRunnerConfiguration instantiates a new CommonsRunnerConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsRunnerConfiguration() *CommonsRunnerConfiguration {
	this := CommonsRunnerConfiguration{}
	return &this
}

// NewCommonsRunnerConfigurationWithDefaults instantiates a new CommonsRunnerConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsRunnerConfigurationWithDefaults() *CommonsRunnerConfiguration {
	this := CommonsRunnerConfiguration{}
	return &this
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *CommonsRunnerConfiguration) GetArch() string {
	if o == nil || IsNil(o.Arch) {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerConfiguration) GetArchOk() (*string, bool) {
	if o == nil || IsNil(o.Arch) {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *CommonsRunnerConfiguration) HasArch() bool {
	if o != nil && !IsNil(o.Arch) {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *CommonsRunnerConfiguration) SetArch(v string) {
	o.Arch = &v
}

// GetCores returns the Cores field value if set, zero value otherwise.
func (o *CommonsRunnerConfiguration) GetCores() int32 {
	if o == nil || IsNil(o.Cores) {
		var ret int32
		return ret
	}
	return *o.Cores
}

// GetCoresOk returns a tuple with the Cores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerConfiguration) GetCoresOk() (*int32, bool) {
	if o == nil || IsNil(o.Cores) {
		return nil, false
	}
	return o.Cores, true
}

// HasCores returns a boolean if a field has been set.
func (o *CommonsRunnerConfiguration) HasCores() bool {
	if o != nil && !IsNil(o.Cores) {
		return true
	}

	return false
}

// SetCores gets a reference to the given int32 and assigns it to the Cores field.
func (o *CommonsRunnerConfiguration) SetCores(v int32) {
	o.Cores = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *CommonsRunnerConfiguration) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerConfiguration) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *CommonsRunnerConfiguration) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *CommonsRunnerConfiguration) SetImage(v string) {
	o.Image = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *CommonsRunnerConfiguration) GetMemory() int32 {
	if o == nil || IsNil(o.Memory) {
		var ret int32
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerConfiguration) GetMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *CommonsRunnerConfiguration) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given int32 and assigns it to the Memory field.
func (o *CommonsRunnerConfiguration) SetMemory(v int32) {
	o.Memory = &v
}

func (o CommonsRunnerConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsRunnerConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arch) {
		toSerialize["arch"] = o.Arch
	}
	if !IsNil(o.Cores) {
		toSerialize["cores"] = o.Cores
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsRunnerConfiguration) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsRunnerConfiguration := _CommonsRunnerConfiguration{}

	err = json.Unmarshal(bytes, &varCommonsRunnerConfiguration)

	if err != nil {
		return err
	}

	*o = CommonsRunnerConfiguration(varCommonsRunnerConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "arch")
		delete(additionalProperties, "cores")
		delete(additionalProperties, "image")
		delete(additionalProperties, "memory")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsRunnerConfiguration struct {
	value *CommonsRunnerConfiguration
	isSet bool
}

func (v NullableCommonsRunnerConfiguration) Get() *CommonsRunnerConfiguration {
	return v.value
}

func (v *NullableCommonsRunnerConfiguration) Set(val *CommonsRunnerConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsRunnerConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsRunnerConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsRunnerConfiguration(val *CommonsRunnerConfiguration) *NullableCommonsRunnerConfiguration {
	return &NullableCommonsRunnerConfiguration{value: val, isSet: true}
}

func (v NullableCommonsRunnerConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsRunnerConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


