/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the VCSIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VCSIntegration{}

// VCSIntegration struct for VCSIntegration
type VCSIntegration struct {
	AccountId *string `json:"account_id,omitempty"`
	AccountOwner *string `json:"account_owner,omitempty"`
	ApplicationId *string `json:"application_id,omitempty"`
	// ConfigurationURL  Github - Is the installation's settings page on the github account. - This field is only populated after the github account is successfully connected.  Gitlab - <no-equivalent-exists>
	ConfigurationUrl *string `json:"configuration_url,omitempty"`
	ConnectionStatus string `json:"connection_status"`
	CreatedAt string `json:"created_at"`
	Id string `json:"id"`
	InstallationId *string `json:"installation_id,omitempty"`
	IntegrationType string `json:"integration_type"`
	IntegrationUrl string `json:"integration_url"`
	OrganizationId *string `json:"organization_id,omitempty"`
	Provider string `json:"provider"`
	TargetType string `json:"target_type"`
	UpdatedAt string `json:"updated_at"`
	VcsUrl *string `json:"vcs_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VCSIntegration VCSIntegration

// NewVCSIntegration instantiates a new VCSIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVCSIntegration(connectionStatus string, createdAt string, id string, integrationType string, integrationUrl string, provider string, targetType string, updatedAt string) *VCSIntegration {
	this := VCSIntegration{}
	this.ConnectionStatus = connectionStatus
	this.CreatedAt = createdAt
	this.Id = id
	this.IntegrationType = integrationType
	this.IntegrationUrl = integrationUrl
	this.Provider = provider
	this.TargetType = targetType
	this.UpdatedAt = updatedAt
	return &this
}

// NewVCSIntegrationWithDefaults instantiates a new VCSIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVCSIntegrationWithDefaults() *VCSIntegration {
	this := VCSIntegration{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *VCSIntegration) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *VCSIntegration) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *VCSIntegration) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountOwner returns the AccountOwner field value if set, zero value otherwise.
func (o *VCSIntegration) GetAccountOwner() string {
	if o == nil || IsNil(o.AccountOwner) {
		var ret string
		return ret
	}
	return *o.AccountOwner
}

// GetAccountOwnerOk returns a tuple with the AccountOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetAccountOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.AccountOwner) {
		return nil, false
	}
	return o.AccountOwner, true
}

// HasAccountOwner returns a boolean if a field has been set.
func (o *VCSIntegration) HasAccountOwner() bool {
	if o != nil && !IsNil(o.AccountOwner) {
		return true
	}

	return false
}

// SetAccountOwner gets a reference to the given string and assigns it to the AccountOwner field.
func (o *VCSIntegration) SetAccountOwner(v string) {
	o.AccountOwner = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *VCSIntegration) GetApplicationId() string {
	if o == nil || IsNil(o.ApplicationId) {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *VCSIntegration) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *VCSIntegration) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetConfigurationUrl returns the ConfigurationUrl field value if set, zero value otherwise.
func (o *VCSIntegration) GetConfigurationUrl() string {
	if o == nil || IsNil(o.ConfigurationUrl) {
		var ret string
		return ret
	}
	return *o.ConfigurationUrl
}

// GetConfigurationUrlOk returns a tuple with the ConfigurationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetConfigurationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigurationUrl) {
		return nil, false
	}
	return o.ConfigurationUrl, true
}

// HasConfigurationUrl returns a boolean if a field has been set.
func (o *VCSIntegration) HasConfigurationUrl() bool {
	if o != nil && !IsNil(o.ConfigurationUrl) {
		return true
	}

	return false
}

// SetConfigurationUrl gets a reference to the given string and assigns it to the ConfigurationUrl field.
func (o *VCSIntegration) SetConfigurationUrl(v string) {
	o.ConfigurationUrl = &v
}

// GetConnectionStatus returns the ConnectionStatus field value
func (o *VCSIntegration) GetConnectionStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionStatus
}

// GetConnectionStatusOk returns a tuple with the ConnectionStatus field value
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetConnectionStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionStatus, true
}

// SetConnectionStatus sets field value
func (o *VCSIntegration) SetConnectionStatus(v string) {
	o.ConnectionStatus = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *VCSIntegration) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *VCSIntegration) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetId returns the Id field value
func (o *VCSIntegration) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VCSIntegration) SetId(v string) {
	o.Id = v
}

// GetInstallationId returns the InstallationId field value if set, zero value otherwise.
func (o *VCSIntegration) GetInstallationId() string {
	if o == nil || IsNil(o.InstallationId) {
		var ret string
		return ret
	}
	return *o.InstallationId
}

// GetInstallationIdOk returns a tuple with the InstallationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetInstallationIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstallationId) {
		return nil, false
	}
	return o.InstallationId, true
}

// HasInstallationId returns a boolean if a field has been set.
func (o *VCSIntegration) HasInstallationId() bool {
	if o != nil && !IsNil(o.InstallationId) {
		return true
	}

	return false
}

// SetInstallationId gets a reference to the given string and assigns it to the InstallationId field.
func (o *VCSIntegration) SetInstallationId(v string) {
	o.InstallationId = &v
}

// GetIntegrationType returns the IntegrationType field value
func (o *VCSIntegration) GetIntegrationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationType
}

// GetIntegrationTypeOk returns a tuple with the IntegrationType field value
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetIntegrationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationType, true
}

// SetIntegrationType sets field value
func (o *VCSIntegration) SetIntegrationType(v string) {
	o.IntegrationType = v
}

// GetIntegrationUrl returns the IntegrationUrl field value
func (o *VCSIntegration) GetIntegrationUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationUrl
}

// GetIntegrationUrlOk returns a tuple with the IntegrationUrl field value
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetIntegrationUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationUrl, true
}

// SetIntegrationUrl sets field value
func (o *VCSIntegration) SetIntegrationUrl(v string) {
	o.IntegrationUrl = v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *VCSIntegration) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *VCSIntegration) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *VCSIntegration) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetProvider returns the Provider field value
func (o *VCSIntegration) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *VCSIntegration) SetProvider(v string) {
	o.Provider = v
}

// GetTargetType returns the TargetType field value
func (o *VCSIntegration) GetTargetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetTargetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetType, true
}

// SetTargetType sets field value
func (o *VCSIntegration) SetTargetType(v string) {
	o.TargetType = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *VCSIntegration) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *VCSIntegration) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetVcsUrl returns the VcsUrl field value if set, zero value otherwise.
func (o *VCSIntegration) GetVcsUrl() string {
	if o == nil || IsNil(o.VcsUrl) {
		var ret string
		return ret
	}
	return *o.VcsUrl
}

// GetVcsUrlOk returns a tuple with the VcsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSIntegration) GetVcsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VcsUrl) {
		return nil, false
	}
	return o.VcsUrl, true
}

// HasVcsUrl returns a boolean if a field has been set.
func (o *VCSIntegration) HasVcsUrl() bool {
	if o != nil && !IsNil(o.VcsUrl) {
		return true
	}

	return false
}

// SetVcsUrl gets a reference to the given string and assigns it to the VcsUrl field.
func (o *VCSIntegration) SetVcsUrl(v string) {
	o.VcsUrl = &v
}

func (o VCSIntegration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VCSIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AccountOwner) {
		toSerialize["account_owner"] = o.AccountOwner
	}
	if !IsNil(o.ApplicationId) {
		toSerialize["application_id"] = o.ApplicationId
	}
	if !IsNil(o.ConfigurationUrl) {
		toSerialize["configuration_url"] = o.ConfigurationUrl
	}
	toSerialize["connection_status"] = o.ConnectionStatus
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["id"] = o.Id
	if !IsNil(o.InstallationId) {
		toSerialize["installation_id"] = o.InstallationId
	}
	toSerialize["integration_type"] = o.IntegrationType
	toSerialize["integration_url"] = o.IntegrationUrl
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	toSerialize["provider"] = o.Provider
	toSerialize["target_type"] = o.TargetType
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.VcsUrl) {
		toSerialize["vcs_url"] = o.VcsUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VCSIntegration) UnmarshalJSON(bytes []byte) (err error) {
	varVCSIntegration := _VCSIntegration{}

	err = json.Unmarshal(bytes, &varVCSIntegration)

	if err != nil {
		return err
	}

	*o = VCSIntegration(varVCSIntegration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "account_owner")
		delete(additionalProperties, "application_id")
		delete(additionalProperties, "configuration_url")
		delete(additionalProperties, "connection_status")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "id")
		delete(additionalProperties, "installation_id")
		delete(additionalProperties, "integration_type")
		delete(additionalProperties, "integration_url")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "target_type")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "vcs_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVCSIntegration struct {
	value *VCSIntegration
	isSet bool
}

func (v NullableVCSIntegration) Get() *VCSIntegration {
	return v.value
}

func (v *NullableVCSIntegration) Set(val *VCSIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableVCSIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableVCSIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVCSIntegration(val *VCSIntegration) *NullableVCSIntegration {
	return &NullableVCSIntegration{value: val, isSet: true}
}

func (v NullableVCSIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVCSIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


