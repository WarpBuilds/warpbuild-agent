/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the ListWorkflowsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWorkflowsResponse{}

// ListWorkflowsResponse struct for ListWorkflowsResponse
type ListWorkflowsResponse struct {
	IsPulling *bool `json:"is_pulling,omitempty"`
	LastSyncedAt *string `json:"last_synced_at,omitempty"`
	Workflows []CommonsWorkflow `json:"workflows,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ListWorkflowsResponse ListWorkflowsResponse

// NewListWorkflowsResponse instantiates a new ListWorkflowsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWorkflowsResponse() *ListWorkflowsResponse {
	this := ListWorkflowsResponse{}
	return &this
}

// NewListWorkflowsResponseWithDefaults instantiates a new ListWorkflowsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWorkflowsResponseWithDefaults() *ListWorkflowsResponse {
	this := ListWorkflowsResponse{}
	return &this
}

// GetIsPulling returns the IsPulling field value if set, zero value otherwise.
func (o *ListWorkflowsResponse) GetIsPulling() bool {
	if o == nil || IsNil(o.IsPulling) {
		var ret bool
		return ret
	}
	return *o.IsPulling
}

// GetIsPullingOk returns a tuple with the IsPulling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorkflowsResponse) GetIsPullingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPulling) {
		return nil, false
	}
	return o.IsPulling, true
}

// HasIsPulling returns a boolean if a field has been set.
func (o *ListWorkflowsResponse) HasIsPulling() bool {
	if o != nil && !IsNil(o.IsPulling) {
		return true
	}

	return false
}

// SetIsPulling gets a reference to the given bool and assigns it to the IsPulling field.
func (o *ListWorkflowsResponse) SetIsPulling(v bool) {
	o.IsPulling = &v
}

// GetLastSyncedAt returns the LastSyncedAt field value if set, zero value otherwise.
func (o *ListWorkflowsResponse) GetLastSyncedAt() string {
	if o == nil || IsNil(o.LastSyncedAt) {
		var ret string
		return ret
	}
	return *o.LastSyncedAt
}

// GetLastSyncedAtOk returns a tuple with the LastSyncedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorkflowsResponse) GetLastSyncedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastSyncedAt) {
		return nil, false
	}
	return o.LastSyncedAt, true
}

// HasLastSyncedAt returns a boolean if a field has been set.
func (o *ListWorkflowsResponse) HasLastSyncedAt() bool {
	if o != nil && !IsNil(o.LastSyncedAt) {
		return true
	}

	return false
}

// SetLastSyncedAt gets a reference to the given string and assigns it to the LastSyncedAt field.
func (o *ListWorkflowsResponse) SetLastSyncedAt(v string) {
	o.LastSyncedAt = &v
}

// GetWorkflows returns the Workflows field value if set, zero value otherwise.
func (o *ListWorkflowsResponse) GetWorkflows() []CommonsWorkflow {
	if o == nil || IsNil(o.Workflows) {
		var ret []CommonsWorkflow
		return ret
	}
	return o.Workflows
}

// GetWorkflowsOk returns a tuple with the Workflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorkflowsResponse) GetWorkflowsOk() ([]CommonsWorkflow, bool) {
	if o == nil || IsNil(o.Workflows) {
		return nil, false
	}
	return o.Workflows, true
}

// HasWorkflows returns a boolean if a field has been set.
func (o *ListWorkflowsResponse) HasWorkflows() bool {
	if o != nil && !IsNil(o.Workflows) {
		return true
	}

	return false
}

// SetWorkflows gets a reference to the given []CommonsWorkflow and assigns it to the Workflows field.
func (o *ListWorkflowsResponse) SetWorkflows(v []CommonsWorkflow) {
	o.Workflows = v
}

func (o ListWorkflowsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWorkflowsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsPulling) {
		toSerialize["is_pulling"] = o.IsPulling
	}
	if !IsNil(o.LastSyncedAt) {
		toSerialize["last_synced_at"] = o.LastSyncedAt
	}
	if !IsNil(o.Workflows) {
		toSerialize["workflows"] = o.Workflows
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ListWorkflowsResponse) UnmarshalJSON(bytes []byte) (err error) {
	varListWorkflowsResponse := _ListWorkflowsResponse{}

	if err = json.Unmarshal(bytes, &varListWorkflowsResponse); err == nil {
		*o = ListWorkflowsResponse(varListWorkflowsResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "is_pulling")
		delete(additionalProperties, "last_synced_at")
		delete(additionalProperties, "workflows")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableListWorkflowsResponse struct {
	value *ListWorkflowsResponse
	isSet bool
}

func (v NullableListWorkflowsResponse) Get() *ListWorkflowsResponse {
	return v.value
}

func (v *NullableListWorkflowsResponse) Set(val *ListWorkflowsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListWorkflowsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListWorkflowsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWorkflowsResponse(val *ListWorkflowsResponse) *NullableListWorkflowsResponse {
	return &NullableListWorkflowsResponse{value: val, isSet: true}
}

func (v NullableListWorkflowsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWorkflowsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


