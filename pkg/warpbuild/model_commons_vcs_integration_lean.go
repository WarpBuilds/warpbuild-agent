/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsVCSIntegrationLean type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsVCSIntegrationLean{}

// CommonsVCSIntegrationLean struct for CommonsVCSIntegrationLean
type CommonsVCSIntegrationLean struct {
	AccountId *string `json:"account_id,omitempty"`
	AccountOwner *string `json:"account_owner,omitempty"`
	ConnectionStatus string `json:"connection_status"`
	Id string `json:"id"`
	InstallationId *string `json:"installation_id,omitempty"`
	TargetType string `json:"target_type"`
	AdditionalProperties map[string]interface{}
}

type _CommonsVCSIntegrationLean CommonsVCSIntegrationLean

// NewCommonsVCSIntegrationLean instantiates a new CommonsVCSIntegrationLean object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsVCSIntegrationLean(connectionStatus string, id string, targetType string) *CommonsVCSIntegrationLean {
	this := CommonsVCSIntegrationLean{}
	this.ConnectionStatus = connectionStatus
	this.Id = id
	this.TargetType = targetType
	return &this
}

// NewCommonsVCSIntegrationLeanWithDefaults instantiates a new CommonsVCSIntegrationLean object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsVCSIntegrationLeanWithDefaults() *CommonsVCSIntegrationLean {
	this := CommonsVCSIntegrationLean{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *CommonsVCSIntegrationLean) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsVCSIntegrationLean) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *CommonsVCSIntegrationLean) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *CommonsVCSIntegrationLean) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountOwner returns the AccountOwner field value if set, zero value otherwise.
func (o *CommonsVCSIntegrationLean) GetAccountOwner() string {
	if o == nil || IsNil(o.AccountOwner) {
		var ret string
		return ret
	}
	return *o.AccountOwner
}

// GetAccountOwnerOk returns a tuple with the AccountOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsVCSIntegrationLean) GetAccountOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.AccountOwner) {
		return nil, false
	}
	return o.AccountOwner, true
}

// HasAccountOwner returns a boolean if a field has been set.
func (o *CommonsVCSIntegrationLean) HasAccountOwner() bool {
	if o != nil && !IsNil(o.AccountOwner) {
		return true
	}

	return false
}

// SetAccountOwner gets a reference to the given string and assigns it to the AccountOwner field.
func (o *CommonsVCSIntegrationLean) SetAccountOwner(v string) {
	o.AccountOwner = &v
}

// GetConnectionStatus returns the ConnectionStatus field value
func (o *CommonsVCSIntegrationLean) GetConnectionStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionStatus
}

// GetConnectionStatusOk returns a tuple with the ConnectionStatus field value
// and a boolean to check if the value has been set.
func (o *CommonsVCSIntegrationLean) GetConnectionStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionStatus, true
}

// SetConnectionStatus sets field value
func (o *CommonsVCSIntegrationLean) SetConnectionStatus(v string) {
	o.ConnectionStatus = v
}

// GetId returns the Id field value
func (o *CommonsVCSIntegrationLean) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CommonsVCSIntegrationLean) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CommonsVCSIntegrationLean) SetId(v string) {
	o.Id = v
}

// GetInstallationId returns the InstallationId field value if set, zero value otherwise.
func (o *CommonsVCSIntegrationLean) GetInstallationId() string {
	if o == nil || IsNil(o.InstallationId) {
		var ret string
		return ret
	}
	return *o.InstallationId
}

// GetInstallationIdOk returns a tuple with the InstallationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsVCSIntegrationLean) GetInstallationIdOk() (*string, bool) {
	if o == nil || IsNil(o.InstallationId) {
		return nil, false
	}
	return o.InstallationId, true
}

// HasInstallationId returns a boolean if a field has been set.
func (o *CommonsVCSIntegrationLean) HasInstallationId() bool {
	if o != nil && !IsNil(o.InstallationId) {
		return true
	}

	return false
}

// SetInstallationId gets a reference to the given string and assigns it to the InstallationId field.
func (o *CommonsVCSIntegrationLean) SetInstallationId(v string) {
	o.InstallationId = &v
}

// GetTargetType returns the TargetType field value
func (o *CommonsVCSIntegrationLean) GetTargetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value
// and a boolean to check if the value has been set.
func (o *CommonsVCSIntegrationLean) GetTargetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetType, true
}

// SetTargetType sets field value
func (o *CommonsVCSIntegrationLean) SetTargetType(v string) {
	o.TargetType = v
}

func (o CommonsVCSIntegrationLean) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsVCSIntegrationLean) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.AccountOwner) {
		toSerialize["account_owner"] = o.AccountOwner
	}
	toSerialize["connection_status"] = o.ConnectionStatus
	toSerialize["id"] = o.Id
	if !IsNil(o.InstallationId) {
		toSerialize["installation_id"] = o.InstallationId
	}
	toSerialize["target_type"] = o.TargetType

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsVCSIntegrationLean) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsVCSIntegrationLean := _CommonsVCSIntegrationLean{}

	err = json.Unmarshal(bytes, &varCommonsVCSIntegrationLean)

	if err != nil {
		return err
	}

	*o = CommonsVCSIntegrationLean(varCommonsVCSIntegrationLean)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "account_owner")
		delete(additionalProperties, "connection_status")
		delete(additionalProperties, "id")
		delete(additionalProperties, "installation_id")
		delete(additionalProperties, "target_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsVCSIntegrationLean struct {
	value *CommonsVCSIntegrationLean
	isSet bool
}

func (v NullableCommonsVCSIntegrationLean) Get() *CommonsVCSIntegrationLean {
	return v.value
}

func (v *NullableCommonsVCSIntegrationLean) Set(val *CommonsVCSIntegrationLean) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsVCSIntegrationLean) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsVCSIntegrationLean) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsVCSIntegrationLean(val *CommonsVCSIntegrationLean) *NullableCommonsVCSIntegrationLean {
	return &NullableCommonsVCSIntegrationLean{value: val, isSet: true}
}

func (v NullableCommonsVCSIntegrationLean) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsVCSIntegrationLean) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


