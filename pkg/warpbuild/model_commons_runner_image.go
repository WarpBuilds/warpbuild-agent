/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsRunnerImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsRunnerImage{}

// CommonsRunnerImage struct for CommonsRunnerImage
type CommonsRunnerImage struct {
	Alias *string `json:"alias,omitempty"`
	Arch *string `json:"arch,omitempty"`
	ContainerRunnerImage *CommonsContainerRunnerImage `json:"container_runner_image,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Hooks []CommonsRunnerImageHook `json:"hooks,omitempty"`
	Id *string `json:"id,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	Os *string `json:"os,omitempty"`
	RunnerImagePullSecretId *string `json:"runner_image_pull_secret_id,omitempty"`
	Settings *CommonsRunnerImageSettings `json:"settings,omitempty"`
	Status *string `json:"status,omitempty"`
	Type *string `json:"type,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	WarpbuildImage *CommonsWarpbuildImage `json:"warpbuild_image,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsRunnerImage CommonsRunnerImage

// NewCommonsRunnerImage instantiates a new CommonsRunnerImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsRunnerImage() *CommonsRunnerImage {
	this := CommonsRunnerImage{}
	return &this
}

// NewCommonsRunnerImageWithDefaults instantiates a new CommonsRunnerImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsRunnerImageWithDefaults() *CommonsRunnerImage {
	this := CommonsRunnerImage{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *CommonsRunnerImage) SetAlias(v string) {
	o.Alias = &v
}

// GetArch returns the Arch field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetArch() string {
	if o == nil || IsNil(o.Arch) {
		var ret string
		return ret
	}
	return *o.Arch
}

// GetArchOk returns a tuple with the Arch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetArchOk() (*string, bool) {
	if o == nil || IsNil(o.Arch) {
		return nil, false
	}
	return o.Arch, true
}

// HasArch returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasArch() bool {
	if o != nil && !IsNil(o.Arch) {
		return true
	}

	return false
}

// SetArch gets a reference to the given string and assigns it to the Arch field.
func (o *CommonsRunnerImage) SetArch(v string) {
	o.Arch = &v
}

// GetContainerRunnerImage returns the ContainerRunnerImage field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetContainerRunnerImage() CommonsContainerRunnerImage {
	if o == nil || IsNil(o.ContainerRunnerImage) {
		var ret CommonsContainerRunnerImage
		return ret
	}
	return *o.ContainerRunnerImage
}

// GetContainerRunnerImageOk returns a tuple with the ContainerRunnerImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetContainerRunnerImageOk() (*CommonsContainerRunnerImage, bool) {
	if o == nil || IsNil(o.ContainerRunnerImage) {
		return nil, false
	}
	return o.ContainerRunnerImage, true
}

// HasContainerRunnerImage returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasContainerRunnerImage() bool {
	if o != nil && !IsNil(o.ContainerRunnerImage) {
		return true
	}

	return false
}

// SetContainerRunnerImage gets a reference to the given CommonsContainerRunnerImage and assigns it to the ContainerRunnerImage field.
func (o *CommonsRunnerImage) SetContainerRunnerImage(v CommonsContainerRunnerImage) {
	o.ContainerRunnerImage = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CommonsRunnerImage) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetHooks returns the Hooks field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetHooks() []CommonsRunnerImageHook {
	if o == nil || IsNil(o.Hooks) {
		var ret []CommonsRunnerImageHook
		return ret
	}
	return o.Hooks
}

// GetHooksOk returns a tuple with the Hooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetHooksOk() ([]CommonsRunnerImageHook, bool) {
	if o == nil || IsNil(o.Hooks) {
		return nil, false
	}
	return o.Hooks, true
}

// HasHooks returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasHooks() bool {
	if o != nil && !IsNil(o.Hooks) {
		return true
	}

	return false
}

// SetHooks gets a reference to the given []CommonsRunnerImageHook and assigns it to the Hooks field.
func (o *CommonsRunnerImage) SetHooks(v []CommonsRunnerImageHook) {
	o.Hooks = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonsRunnerImage) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CommonsRunnerImage) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetOs() string {
	if o == nil || IsNil(o.Os) {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetOsOk() (*string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *CommonsRunnerImage) SetOs(v string) {
	o.Os = &v
}

// GetRunnerImagePullSecretId returns the RunnerImagePullSecretId field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetRunnerImagePullSecretId() string {
	if o == nil || IsNil(o.RunnerImagePullSecretId) {
		var ret string
		return ret
	}
	return *o.RunnerImagePullSecretId
}

// GetRunnerImagePullSecretIdOk returns a tuple with the RunnerImagePullSecretId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetRunnerImagePullSecretIdOk() (*string, bool) {
	if o == nil || IsNil(o.RunnerImagePullSecretId) {
		return nil, false
	}
	return o.RunnerImagePullSecretId, true
}

// HasRunnerImagePullSecretId returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasRunnerImagePullSecretId() bool {
	if o != nil && !IsNil(o.RunnerImagePullSecretId) {
		return true
	}

	return false
}

// SetRunnerImagePullSecretId gets a reference to the given string and assigns it to the RunnerImagePullSecretId field.
func (o *CommonsRunnerImage) SetRunnerImagePullSecretId(v string) {
	o.RunnerImagePullSecretId = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetSettings() CommonsRunnerImageSettings {
	if o == nil || IsNil(o.Settings) {
		var ret CommonsRunnerImageSettings
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetSettingsOk() (*CommonsRunnerImageSettings, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given CommonsRunnerImageSettings and assigns it to the Settings field.
func (o *CommonsRunnerImage) SetSettings(v CommonsRunnerImageSettings) {
	o.Settings = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CommonsRunnerImage) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CommonsRunnerImage) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CommonsRunnerImage) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetWarpbuildImage returns the WarpbuildImage field value if set, zero value otherwise.
func (o *CommonsRunnerImage) GetWarpbuildImage() CommonsWarpbuildImage {
	if o == nil || IsNil(o.WarpbuildImage) {
		var ret CommonsWarpbuildImage
		return ret
	}
	return *o.WarpbuildImage
}

// GetWarpbuildImageOk returns a tuple with the WarpbuildImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunnerImage) GetWarpbuildImageOk() (*CommonsWarpbuildImage, bool) {
	if o == nil || IsNil(o.WarpbuildImage) {
		return nil, false
	}
	return o.WarpbuildImage, true
}

// HasWarpbuildImage returns a boolean if a field has been set.
func (o *CommonsRunnerImage) HasWarpbuildImage() bool {
	if o != nil && !IsNil(o.WarpbuildImage) {
		return true
	}

	return false
}

// SetWarpbuildImage gets a reference to the given CommonsWarpbuildImage and assigns it to the WarpbuildImage field.
func (o *CommonsRunnerImage) SetWarpbuildImage(v CommonsWarpbuildImage) {
	o.WarpbuildImage = &v
}

func (o CommonsRunnerImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsRunnerImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.Arch) {
		toSerialize["arch"] = o.Arch
	}
	if !IsNil(o.ContainerRunnerImage) {
		toSerialize["container_runner_image"] = o.ContainerRunnerImage
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Hooks) {
		toSerialize["hooks"] = o.Hooks
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.RunnerImagePullSecretId) {
		toSerialize["runner_image_pull_secret_id"] = o.RunnerImagePullSecretId
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.WarpbuildImage) {
		toSerialize["warpbuild_image"] = o.WarpbuildImage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsRunnerImage) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsRunnerImage := _CommonsRunnerImage{}

	err = json.Unmarshal(bytes, &varCommonsRunnerImage)

	if err != nil {
		return err
	}

	*o = CommonsRunnerImage(varCommonsRunnerImage)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "alias")
		delete(additionalProperties, "arch")
		delete(additionalProperties, "container_runner_image")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "hooks")
		delete(additionalProperties, "id")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "os")
		delete(additionalProperties, "runner_image_pull_secret_id")
		delete(additionalProperties, "settings")
		delete(additionalProperties, "status")
		delete(additionalProperties, "type")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "warpbuild_image")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsRunnerImage struct {
	value *CommonsRunnerImage
	isSet bool
}

func (v NullableCommonsRunnerImage) Get() *CommonsRunnerImage {
	return v.value
}

func (v *NullableCommonsRunnerImage) Set(val *CommonsRunnerImage) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsRunnerImage) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsRunnerImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsRunnerImage(val *CommonsRunnerImage) *NullableCommonsRunnerImage {
	return &NullableCommonsRunnerImage{value: val, isSet: true}
}

func (v NullableCommonsRunnerImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsRunnerImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


