/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsWorkflowStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsWorkflowStats{}

// CommonsWorkflowStats struct for CommonsWorkflowStats
type CommonsWorkflowStats struct {
	RunCount *int32 `json:"run_count,omitempty"`
	RunDuration *int32 `json:"run_duration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsWorkflowStats CommonsWorkflowStats

// NewCommonsWorkflowStats instantiates a new CommonsWorkflowStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsWorkflowStats() *CommonsWorkflowStats {
	this := CommonsWorkflowStats{}
	return &this
}

// NewCommonsWorkflowStatsWithDefaults instantiates a new CommonsWorkflowStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsWorkflowStatsWithDefaults() *CommonsWorkflowStats {
	this := CommonsWorkflowStats{}
	return &this
}

// GetRunCount returns the RunCount field value if set, zero value otherwise.
func (o *CommonsWorkflowStats) GetRunCount() int32 {
	if o == nil || IsNil(o.RunCount) {
		var ret int32
		return ret
	}
	return *o.RunCount
}

// GetRunCountOk returns a tuple with the RunCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflowStats) GetRunCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RunCount) {
		return nil, false
	}
	return o.RunCount, true
}

// HasRunCount returns a boolean if a field has been set.
func (o *CommonsWorkflowStats) HasRunCount() bool {
	if o != nil && !IsNil(o.RunCount) {
		return true
	}

	return false
}

// SetRunCount gets a reference to the given int32 and assigns it to the RunCount field.
func (o *CommonsWorkflowStats) SetRunCount(v int32) {
	o.RunCount = &v
}

// GetRunDuration returns the RunDuration field value if set, zero value otherwise.
func (o *CommonsWorkflowStats) GetRunDuration() int32 {
	if o == nil || IsNil(o.RunDuration) {
		var ret int32
		return ret
	}
	return *o.RunDuration
}

// GetRunDurationOk returns a tuple with the RunDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflowStats) GetRunDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.RunDuration) {
		return nil, false
	}
	return o.RunDuration, true
}

// HasRunDuration returns a boolean if a field has been set.
func (o *CommonsWorkflowStats) HasRunDuration() bool {
	if o != nil && !IsNil(o.RunDuration) {
		return true
	}

	return false
}

// SetRunDuration gets a reference to the given int32 and assigns it to the RunDuration field.
func (o *CommonsWorkflowStats) SetRunDuration(v int32) {
	o.RunDuration = &v
}

func (o CommonsWorkflowStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsWorkflowStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RunCount) {
		toSerialize["run_count"] = o.RunCount
	}
	if !IsNil(o.RunDuration) {
		toSerialize["run_duration"] = o.RunDuration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsWorkflowStats) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsWorkflowStats := _CommonsWorkflowStats{}

	err = json.Unmarshal(bytes, &varCommonsWorkflowStats)

	if err != nil {
		return err
	}

	*o = CommonsWorkflowStats(varCommonsWorkflowStats)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "run_count")
		delete(additionalProperties, "run_duration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsWorkflowStats struct {
	value *CommonsWorkflowStats
	isSet bool
}

func (v NullableCommonsWorkflowStats) Get() *CommonsWorkflowStats {
	return v.value
}

func (v *NullableCommonsWorkflowStats) Set(val *CommonsWorkflowStats) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsWorkflowStats) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsWorkflowStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsWorkflowStats(val *CommonsWorkflowStats) *NullableCommonsWorkflowStats {
	return &NullableCommonsWorkflowStats{value: val, isSet: true}
}

func (v NullableCommonsWorkflowStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsWorkflowStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


