/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsPaymentMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsPaymentMethod{}

// CommonsPaymentMethod struct for CommonsPaymentMethod
type CommonsPaymentMethod struct {
	CountryCode *string `json:"country_code,omitempty"`
	ExpMonth *int32 `json:"exp_month,omitempty"`
	ExpYear *int32 `json:"exp_year,omitempty"`
	ExternalId *string `json:"external_id,omitempty"`
	Iin *string `json:"iin,omitempty"`
	IsDefault *bool `json:"is_default,omitempty"`
	Issuer *string `json:"issuer,omitempty"`
	Last4 *string `json:"last4,omitempty"`
	Name *string `json:"name,omitempty"`
	Network *string `json:"network,omitempty"`
	Type *string `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsPaymentMethod CommonsPaymentMethod

// NewCommonsPaymentMethod instantiates a new CommonsPaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsPaymentMethod() *CommonsPaymentMethod {
	this := CommonsPaymentMethod{}
	return &this
}

// NewCommonsPaymentMethodWithDefaults instantiates a new CommonsPaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsPaymentMethodWithDefaults() *CommonsPaymentMethod {
	this := CommonsPaymentMethod{}
	return &this
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *CommonsPaymentMethod) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetExpMonth returns the ExpMonth field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetExpMonth() int32 {
	if o == nil || IsNil(o.ExpMonth) {
		var ret int32
		return ret
	}
	return *o.ExpMonth
}

// GetExpMonthOk returns a tuple with the ExpMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetExpMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpMonth) {
		return nil, false
	}
	return o.ExpMonth, true
}

// HasExpMonth returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasExpMonth() bool {
	if o != nil && !IsNil(o.ExpMonth) {
		return true
	}

	return false
}

// SetExpMonth gets a reference to the given int32 and assigns it to the ExpMonth field.
func (o *CommonsPaymentMethod) SetExpMonth(v int32) {
	o.ExpMonth = &v
}

// GetExpYear returns the ExpYear field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetExpYear() int32 {
	if o == nil || IsNil(o.ExpYear) {
		var ret int32
		return ret
	}
	return *o.ExpYear
}

// GetExpYearOk returns a tuple with the ExpYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetExpYearOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpYear) {
		return nil, false
	}
	return o.ExpYear, true
}

// HasExpYear returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasExpYear() bool {
	if o != nil && !IsNil(o.ExpYear) {
		return true
	}

	return false
}

// SetExpYear gets a reference to the given int32 and assigns it to the ExpYear field.
func (o *CommonsPaymentMethod) SetExpYear(v int32) {
	o.ExpYear = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *CommonsPaymentMethod) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetIin returns the Iin field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetIin() string {
	if o == nil || IsNil(o.Iin) {
		var ret string
		return ret
	}
	return *o.Iin
}

// GetIinOk returns a tuple with the Iin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetIinOk() (*string, bool) {
	if o == nil || IsNil(o.Iin) {
		return nil, false
	}
	return o.Iin, true
}

// HasIin returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasIin() bool {
	if o != nil && !IsNil(o.Iin) {
		return true
	}

	return false
}

// SetIin gets a reference to the given string and assigns it to the Iin field.
func (o *CommonsPaymentMethod) SetIin(v string) {
	o.Iin = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *CommonsPaymentMethod) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *CommonsPaymentMethod) SetIssuer(v string) {
	o.Issuer = &v
}

// GetLast4 returns the Last4 field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetLast4() string {
	if o == nil || IsNil(o.Last4) {
		var ret string
		return ret
	}
	return *o.Last4
}

// GetLast4Ok returns a tuple with the Last4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetLast4Ok() (*string, bool) {
	if o == nil || IsNil(o.Last4) {
		return nil, false
	}
	return o.Last4, true
}

// HasLast4 returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasLast4() bool {
	if o != nil && !IsNil(o.Last4) {
		return true
	}

	return false
}

// SetLast4 gets a reference to the given string and assigns it to the Last4 field.
func (o *CommonsPaymentMethod) SetLast4(v string) {
	o.Last4 = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CommonsPaymentMethod) SetName(v string) {
	o.Name = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *CommonsPaymentMethod) SetNetwork(v string) {
	o.Network = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CommonsPaymentMethod) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsPaymentMethod) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CommonsPaymentMethod) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CommonsPaymentMethod) SetType(v string) {
	o.Type = &v
}

func (o CommonsPaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsPaymentMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.ExpMonth) {
		toSerialize["exp_month"] = o.ExpMonth
	}
	if !IsNil(o.ExpYear) {
		toSerialize["exp_year"] = o.ExpYear
	}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.Iin) {
		toSerialize["iin"] = o.Iin
	}
	if !IsNil(o.IsDefault) {
		toSerialize["is_default"] = o.IsDefault
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.Last4) {
		toSerialize["last4"] = o.Last4
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsPaymentMethod) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsPaymentMethod := _CommonsPaymentMethod{}

	err = json.Unmarshal(bytes, &varCommonsPaymentMethod)

	if err != nil {
		return err
	}

	*o = CommonsPaymentMethod(varCommonsPaymentMethod)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "country_code")
		delete(additionalProperties, "exp_month")
		delete(additionalProperties, "exp_year")
		delete(additionalProperties, "external_id")
		delete(additionalProperties, "iin")
		delete(additionalProperties, "is_default")
		delete(additionalProperties, "issuer")
		delete(additionalProperties, "last4")
		delete(additionalProperties, "name")
		delete(additionalProperties, "network")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsPaymentMethod struct {
	value *CommonsPaymentMethod
	isSet bool
}

func (v NullableCommonsPaymentMethod) Get() *CommonsPaymentMethod {
	return v.value
}

func (v *NullableCommonsPaymentMethod) Set(val *CommonsPaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsPaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsPaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsPaymentMethod(val *CommonsPaymentMethod) *NullableCommonsPaymentMethod {
	return &NullableCommonsPaymentMethod{value: val, isSet: true}
}

func (v NullableCommonsPaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsPaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


