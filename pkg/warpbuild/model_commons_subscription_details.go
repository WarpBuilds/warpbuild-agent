/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsSubscriptionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsSubscriptionDetails{}

// CommonsSubscriptionDetails struct for CommonsSubscriptionDetails
type CommonsSubscriptionDetails struct {
	BalanceDetails *CommonsBalanceDetails `json:"balance_details,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Id *string `json:"id,omitempty"`
	LastPaymentAt *string `json:"last_payment_at,omitempty"`
	LastPaymentDetails *CommonsPaymentDetails `json:"last_payment_details,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	PaymentMethods []CommonsPaymentMethod `json:"payment_methods,omitempty"`
	PgCustomerId *string `json:"pg_customer_id,omitempty"`
	PgSubscriptionId *string `json:"pg_subscription_id,omitempty"`
	Status *string `json:"status,omitempty"`
	SubscribedAt *string `json:"subscribed_at,omitempty"`
	UpcomingBill *CommonsUpcomingBill `json:"upcoming_bill,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsSubscriptionDetails CommonsSubscriptionDetails

// NewCommonsSubscriptionDetails instantiates a new CommonsSubscriptionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsSubscriptionDetails() *CommonsSubscriptionDetails {
	this := CommonsSubscriptionDetails{}
	return &this
}

// NewCommonsSubscriptionDetailsWithDefaults instantiates a new CommonsSubscriptionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsSubscriptionDetailsWithDefaults() *CommonsSubscriptionDetails {
	this := CommonsSubscriptionDetails{}
	return &this
}

// GetBalanceDetails returns the BalanceDetails field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetBalanceDetails() CommonsBalanceDetails {
	if o == nil || IsNil(o.BalanceDetails) {
		var ret CommonsBalanceDetails
		return ret
	}
	return *o.BalanceDetails
}

// GetBalanceDetailsOk returns a tuple with the BalanceDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetBalanceDetailsOk() (*CommonsBalanceDetails, bool) {
	if o == nil || IsNil(o.BalanceDetails) {
		return nil, false
	}
	return o.BalanceDetails, true
}

// HasBalanceDetails returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasBalanceDetails() bool {
	if o != nil && !IsNil(o.BalanceDetails) {
		return true
	}

	return false
}

// SetBalanceDetails gets a reference to the given CommonsBalanceDetails and assigns it to the BalanceDetails field.
func (o *CommonsSubscriptionDetails) SetBalanceDetails(v CommonsBalanceDetails) {
	o.BalanceDetails = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CommonsSubscriptionDetails) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonsSubscriptionDetails) SetId(v string) {
	o.Id = &v
}

// GetLastPaymentAt returns the LastPaymentAt field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetLastPaymentAt() string {
	if o == nil || IsNil(o.LastPaymentAt) {
		var ret string
		return ret
	}
	return *o.LastPaymentAt
}

// GetLastPaymentAtOk returns a tuple with the LastPaymentAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetLastPaymentAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastPaymentAt) {
		return nil, false
	}
	return o.LastPaymentAt, true
}

// HasLastPaymentAt returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasLastPaymentAt() bool {
	if o != nil && !IsNil(o.LastPaymentAt) {
		return true
	}

	return false
}

// SetLastPaymentAt gets a reference to the given string and assigns it to the LastPaymentAt field.
func (o *CommonsSubscriptionDetails) SetLastPaymentAt(v string) {
	o.LastPaymentAt = &v
}

// GetLastPaymentDetails returns the LastPaymentDetails field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetLastPaymentDetails() CommonsPaymentDetails {
	if o == nil || IsNil(o.LastPaymentDetails) {
		var ret CommonsPaymentDetails
		return ret
	}
	return *o.LastPaymentDetails
}

// GetLastPaymentDetailsOk returns a tuple with the LastPaymentDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetLastPaymentDetailsOk() (*CommonsPaymentDetails, bool) {
	if o == nil || IsNil(o.LastPaymentDetails) {
		return nil, false
	}
	return o.LastPaymentDetails, true
}

// HasLastPaymentDetails returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasLastPaymentDetails() bool {
	if o != nil && !IsNil(o.LastPaymentDetails) {
		return true
	}

	return false
}

// SetLastPaymentDetails gets a reference to the given CommonsPaymentDetails and assigns it to the LastPaymentDetails field.
func (o *CommonsSubscriptionDetails) SetLastPaymentDetails(v CommonsPaymentDetails) {
	o.LastPaymentDetails = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CommonsSubscriptionDetails) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPaymentMethods returns the PaymentMethods field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetPaymentMethods() []CommonsPaymentMethod {
	if o == nil || IsNil(o.PaymentMethods) {
		var ret []CommonsPaymentMethod
		return ret
	}
	return o.PaymentMethods
}

// GetPaymentMethodsOk returns a tuple with the PaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetPaymentMethodsOk() ([]CommonsPaymentMethod, bool) {
	if o == nil || IsNil(o.PaymentMethods) {
		return nil, false
	}
	return o.PaymentMethods, true
}

// HasPaymentMethods returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasPaymentMethods() bool {
	if o != nil && !IsNil(o.PaymentMethods) {
		return true
	}

	return false
}

// SetPaymentMethods gets a reference to the given []CommonsPaymentMethod and assigns it to the PaymentMethods field.
func (o *CommonsSubscriptionDetails) SetPaymentMethods(v []CommonsPaymentMethod) {
	o.PaymentMethods = v
}

// GetPgCustomerId returns the PgCustomerId field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetPgCustomerId() string {
	if o == nil || IsNil(o.PgCustomerId) {
		var ret string
		return ret
	}
	return *o.PgCustomerId
}

// GetPgCustomerIdOk returns a tuple with the PgCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetPgCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PgCustomerId) {
		return nil, false
	}
	return o.PgCustomerId, true
}

// HasPgCustomerId returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasPgCustomerId() bool {
	if o != nil && !IsNil(o.PgCustomerId) {
		return true
	}

	return false
}

// SetPgCustomerId gets a reference to the given string and assigns it to the PgCustomerId field.
func (o *CommonsSubscriptionDetails) SetPgCustomerId(v string) {
	o.PgCustomerId = &v
}

// GetPgSubscriptionId returns the PgSubscriptionId field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetPgSubscriptionId() string {
	if o == nil || IsNil(o.PgSubscriptionId) {
		var ret string
		return ret
	}
	return *o.PgSubscriptionId
}

// GetPgSubscriptionIdOk returns a tuple with the PgSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetPgSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.PgSubscriptionId) {
		return nil, false
	}
	return o.PgSubscriptionId, true
}

// HasPgSubscriptionId returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasPgSubscriptionId() bool {
	if o != nil && !IsNil(o.PgSubscriptionId) {
		return true
	}

	return false
}

// SetPgSubscriptionId gets a reference to the given string and assigns it to the PgSubscriptionId field.
func (o *CommonsSubscriptionDetails) SetPgSubscriptionId(v string) {
	o.PgSubscriptionId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CommonsSubscriptionDetails) SetStatus(v string) {
	o.Status = &v
}

// GetSubscribedAt returns the SubscribedAt field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetSubscribedAt() string {
	if o == nil || IsNil(o.SubscribedAt) {
		var ret string
		return ret
	}
	return *o.SubscribedAt
}

// GetSubscribedAtOk returns a tuple with the SubscribedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetSubscribedAtOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribedAt) {
		return nil, false
	}
	return o.SubscribedAt, true
}

// HasSubscribedAt returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasSubscribedAt() bool {
	if o != nil && !IsNil(o.SubscribedAt) {
		return true
	}

	return false
}

// SetSubscribedAt gets a reference to the given string and assigns it to the SubscribedAt field.
func (o *CommonsSubscriptionDetails) SetSubscribedAt(v string) {
	o.SubscribedAt = &v
}

// GetUpcomingBill returns the UpcomingBill field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetUpcomingBill() CommonsUpcomingBill {
	if o == nil || IsNil(o.UpcomingBill) {
		var ret CommonsUpcomingBill
		return ret
	}
	return *o.UpcomingBill
}

// GetUpcomingBillOk returns a tuple with the UpcomingBill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetUpcomingBillOk() (*CommonsUpcomingBill, bool) {
	if o == nil || IsNil(o.UpcomingBill) {
		return nil, false
	}
	return o.UpcomingBill, true
}

// HasUpcomingBill returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasUpcomingBill() bool {
	if o != nil && !IsNil(o.UpcomingBill) {
		return true
	}

	return false
}

// SetUpcomingBill gets a reference to the given CommonsUpcomingBill and assigns it to the UpcomingBill field.
func (o *CommonsSubscriptionDetails) SetUpcomingBill(v CommonsUpcomingBill) {
	o.UpcomingBill = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CommonsSubscriptionDetails) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsSubscriptionDetails) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CommonsSubscriptionDetails) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CommonsSubscriptionDetails) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o CommonsSubscriptionDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsSubscriptionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BalanceDetails) {
		toSerialize["balance_details"] = o.BalanceDetails
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastPaymentAt) {
		toSerialize["last_payment_at"] = o.LastPaymentAt
	}
	if !IsNil(o.LastPaymentDetails) {
		toSerialize["last_payment_details"] = o.LastPaymentDetails
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.PaymentMethods) {
		toSerialize["payment_methods"] = o.PaymentMethods
	}
	if !IsNil(o.PgCustomerId) {
		toSerialize["pg_customer_id"] = o.PgCustomerId
	}
	if !IsNil(o.PgSubscriptionId) {
		toSerialize["pg_subscription_id"] = o.PgSubscriptionId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubscribedAt) {
		toSerialize["subscribed_at"] = o.SubscribedAt
	}
	if !IsNil(o.UpcomingBill) {
		toSerialize["upcoming_bill"] = o.UpcomingBill
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsSubscriptionDetails) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsSubscriptionDetails := _CommonsSubscriptionDetails{}

<<<<<<< HEAD
	err = json.Unmarshal(bytes, &varCommonsSubscriptionDetails)

	if err != nil {
		return err
	}

	*o = CommonsSubscriptionDetails(varCommonsSubscriptionDetails)

=======
	if err = json.Unmarshal(bytes, &varCommonsSubscriptionDetails); err == nil {
		*o = CommonsSubscriptionDetails(varCommonsSubscriptionDetails)
	}

>>>>>>> prajjwal-warp-323
	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "balance_details")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "id")
		delete(additionalProperties, "last_payment_at")
		delete(additionalProperties, "last_payment_details")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "payment_methods")
		delete(additionalProperties, "pg_customer_id")
		delete(additionalProperties, "pg_subscription_id")
		delete(additionalProperties, "status")
		delete(additionalProperties, "subscribed_at")
		delete(additionalProperties, "upcoming_bill")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsSubscriptionDetails struct {
	value *CommonsSubscriptionDetails
	isSet bool
}

func (v NullableCommonsSubscriptionDetails) Get() *CommonsSubscriptionDetails {
	return v.value
}

func (v *NullableCommonsSubscriptionDetails) Set(val *CommonsSubscriptionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsSubscriptionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsSubscriptionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsSubscriptionDetails(val *CommonsSubscriptionDetails) *NullableCommonsSubscriptionDetails {
	return &NullableCommonsSubscriptionDetails{value: val, isSet: true}
}

func (v NullableCommonsSubscriptionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsSubscriptionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


