/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsListUsersOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsListUsersOptions{}

// CommonsListUsersOptions struct for CommonsListUsersOptions
type CommonsListUsersOptions struct {
	Page *int32 `json:"page,omitempty"`
	PerPage *int32 `json:"per_page,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsListUsersOptions CommonsListUsersOptions

// NewCommonsListUsersOptions instantiates a new CommonsListUsersOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsListUsersOptions() *CommonsListUsersOptions {
	this := CommonsListUsersOptions{}
	return &this
}

// NewCommonsListUsersOptionsWithDefaults instantiates a new CommonsListUsersOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsListUsersOptionsWithDefaults() *CommonsListUsersOptions {
	this := CommonsListUsersOptions{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *CommonsListUsersOptions) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListUsersOptions) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *CommonsListUsersOptions) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *CommonsListUsersOptions) SetPage(v int32) {
	o.Page = &v
}

// GetPerPage returns the PerPage field value if set, zero value otherwise.
func (o *CommonsListUsersOptions) GetPerPage() int32 {
	if o == nil || IsNil(o.PerPage) {
		var ret int32
		return ret
	}
	return *o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListUsersOptions) GetPerPageOk() (*int32, bool) {
	if o == nil || IsNil(o.PerPage) {
		return nil, false
	}
	return o.PerPage, true
}

// HasPerPage returns a boolean if a field has been set.
func (o *CommonsListUsersOptions) HasPerPage() bool {
	if o != nil && !IsNil(o.PerPage) {
		return true
	}

	return false
}

// SetPerPage gets a reference to the given int32 and assigns it to the PerPage field.
func (o *CommonsListUsersOptions) SetPerPage(v int32) {
	o.PerPage = &v
}

func (o CommonsListUsersOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsListUsersOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PerPage) {
		toSerialize["per_page"] = o.PerPage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsListUsersOptions) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsListUsersOptions := _CommonsListUsersOptions{}

	if err = json.Unmarshal(bytes, &varCommonsListUsersOptions); err == nil {
		*o = CommonsListUsersOptions(varCommonsListUsersOptions)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "page")
		delete(additionalProperties, "per_page")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsListUsersOptions struct {
	value *CommonsListUsersOptions
	isSet bool
}

func (v NullableCommonsListUsersOptions) Get() *CommonsListUsersOptions {
	return v.value
}

func (v *NullableCommonsListUsersOptions) Set(val *CommonsListUsersOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsListUsersOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsListUsersOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsListUsersOptions(val *CommonsListUsersOptions) *NullableCommonsListUsersOptions {
	return &NullableCommonsListUsersOptions{value: val, isSet: true}
}

func (v NullableCommonsListUsersOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsListUsersOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


