/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CreateVCSIntegrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVCSIntegrationRequest{}

// CreateVCSIntegrationRequest struct for CreateVCSIntegrationRequest
type CreateVCSIntegrationRequest struct {
	AdditionalState map[string]interface{} `json:"additional_state,omitempty"`
	ApplicationCallbackUrl *string `json:"application_callback_url,omitempty"`
	ApplicationId *string `json:"application_id,omitempty"`
	ApplicationSecret *string `json:"application_secret,omitempty"`
	Provider string `json:"provider"`
	VcsUrl *string `json:"vcs_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateVCSIntegrationRequest CreateVCSIntegrationRequest

// NewCreateVCSIntegrationRequest instantiates a new CreateVCSIntegrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVCSIntegrationRequest(provider string) *CreateVCSIntegrationRequest {
	this := CreateVCSIntegrationRequest{}
	this.Provider = provider
	return &this
}

// NewCreateVCSIntegrationRequestWithDefaults instantiates a new CreateVCSIntegrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVCSIntegrationRequestWithDefaults() *CreateVCSIntegrationRequest {
	this := CreateVCSIntegrationRequest{}
	return &this
}

// GetAdditionalState returns the AdditionalState field value if set, zero value otherwise.
func (o *CreateVCSIntegrationRequest) GetAdditionalState() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalState) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalState
}

// GetAdditionalStateOk returns a tuple with the AdditionalState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVCSIntegrationRequest) GetAdditionalStateOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalState) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalState, true
}

// HasAdditionalState returns a boolean if a field has been set.
func (o *CreateVCSIntegrationRequest) HasAdditionalState() bool {
	if o != nil && !IsNil(o.AdditionalState) {
		return true
	}

	return false
}

// SetAdditionalState gets a reference to the given map[string]interface{} and assigns it to the AdditionalState field.
func (o *CreateVCSIntegrationRequest) SetAdditionalState(v map[string]interface{}) {
	o.AdditionalState = v
}

// GetApplicationCallbackUrl returns the ApplicationCallbackUrl field value if set, zero value otherwise.
func (o *CreateVCSIntegrationRequest) GetApplicationCallbackUrl() string {
	if o == nil || IsNil(o.ApplicationCallbackUrl) {
		var ret string
		return ret
	}
	return *o.ApplicationCallbackUrl
}

// GetApplicationCallbackUrlOk returns a tuple with the ApplicationCallbackUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVCSIntegrationRequest) GetApplicationCallbackUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationCallbackUrl) {
		return nil, false
	}
	return o.ApplicationCallbackUrl, true
}

// HasApplicationCallbackUrl returns a boolean if a field has been set.
func (o *CreateVCSIntegrationRequest) HasApplicationCallbackUrl() bool {
	if o != nil && !IsNil(o.ApplicationCallbackUrl) {
		return true
	}

	return false
}

// SetApplicationCallbackUrl gets a reference to the given string and assigns it to the ApplicationCallbackUrl field.
func (o *CreateVCSIntegrationRequest) SetApplicationCallbackUrl(v string) {
	o.ApplicationCallbackUrl = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *CreateVCSIntegrationRequest) GetApplicationId() string {
	if o == nil || IsNil(o.ApplicationId) {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVCSIntegrationRequest) GetApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *CreateVCSIntegrationRequest) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *CreateVCSIntegrationRequest) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetApplicationSecret returns the ApplicationSecret field value if set, zero value otherwise.
func (o *CreateVCSIntegrationRequest) GetApplicationSecret() string {
	if o == nil || IsNil(o.ApplicationSecret) {
		var ret string
		return ret
	}
	return *o.ApplicationSecret
}

// GetApplicationSecretOk returns a tuple with the ApplicationSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVCSIntegrationRequest) GetApplicationSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationSecret) {
		return nil, false
	}
	return o.ApplicationSecret, true
}

// HasApplicationSecret returns a boolean if a field has been set.
func (o *CreateVCSIntegrationRequest) HasApplicationSecret() bool {
	if o != nil && !IsNil(o.ApplicationSecret) {
		return true
	}

	return false
}

// SetApplicationSecret gets a reference to the given string and assigns it to the ApplicationSecret field.
func (o *CreateVCSIntegrationRequest) SetApplicationSecret(v string) {
	o.ApplicationSecret = &v
}

// GetProvider returns the Provider field value
func (o *CreateVCSIntegrationRequest) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *CreateVCSIntegrationRequest) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *CreateVCSIntegrationRequest) SetProvider(v string) {
	o.Provider = v
}

// GetVcsUrl returns the VcsUrl field value if set, zero value otherwise.
func (o *CreateVCSIntegrationRequest) GetVcsUrl() string {
	if o == nil || IsNil(o.VcsUrl) {
		var ret string
		return ret
	}
	return *o.VcsUrl
}

// GetVcsUrlOk returns a tuple with the VcsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVCSIntegrationRequest) GetVcsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VcsUrl) {
		return nil, false
	}
	return o.VcsUrl, true
}

// HasVcsUrl returns a boolean if a field has been set.
func (o *CreateVCSIntegrationRequest) HasVcsUrl() bool {
	if o != nil && !IsNil(o.VcsUrl) {
		return true
	}

	return false
}

// SetVcsUrl gets a reference to the given string and assigns it to the VcsUrl field.
func (o *CreateVCSIntegrationRequest) SetVcsUrl(v string) {
	o.VcsUrl = &v
}

func (o CreateVCSIntegrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVCSIntegrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalState) {
		toSerialize["additional_state"] = o.AdditionalState
	}
	if !IsNil(o.ApplicationCallbackUrl) {
		toSerialize["application_callback_url"] = o.ApplicationCallbackUrl
	}
	if !IsNil(o.ApplicationId) {
		toSerialize["application_id"] = o.ApplicationId
	}
	if !IsNil(o.ApplicationSecret) {
		toSerialize["application_secret"] = o.ApplicationSecret
	}
	toSerialize["provider"] = o.Provider
	if !IsNil(o.VcsUrl) {
		toSerialize["vcs_url"] = o.VcsUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateVCSIntegrationRequest) UnmarshalJSON(bytes []byte) (err error) {
	varCreateVCSIntegrationRequest := _CreateVCSIntegrationRequest{}

	err = json.Unmarshal(bytes, &varCreateVCSIntegrationRequest)

	if err != nil {
		return err
	}

	*o = CreateVCSIntegrationRequest(varCreateVCSIntegrationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "additional_state")
		delete(additionalProperties, "application_callback_url")
		delete(additionalProperties, "application_id")
		delete(additionalProperties, "application_secret")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "vcs_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateVCSIntegrationRequest struct {
	value *CreateVCSIntegrationRequest
	isSet bool
}

func (v NullableCreateVCSIntegrationRequest) Get() *CreateVCSIntegrationRequest {
	return v.value
}

func (v *NullableCreateVCSIntegrationRequest) Set(val *CreateVCSIntegrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVCSIntegrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVCSIntegrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVCSIntegrationRequest(val *CreateVCSIntegrationRequest) *NullableCreateVCSIntegrationRequest {
	return &NullableCreateVCSIntegrationRequest{value: val, isSet: true}
}

func (v NullableCreateVCSIntegrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVCSIntegrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


