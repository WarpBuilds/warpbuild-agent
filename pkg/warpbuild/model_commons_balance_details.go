/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsBalanceDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsBalanceDetails{}

// CommonsBalanceDetails struct for CommonsBalanceDetails
type CommonsBalanceDetails struct {
	FreeBalance *CommonsBalance `json:"free_balance,omitempty"`
	PaidBalance *CommonsBalance `json:"paid_balance,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsBalanceDetails CommonsBalanceDetails

// NewCommonsBalanceDetails instantiates a new CommonsBalanceDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsBalanceDetails() *CommonsBalanceDetails {
	this := CommonsBalanceDetails{}
	return &this
}

// NewCommonsBalanceDetailsWithDefaults instantiates a new CommonsBalanceDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsBalanceDetailsWithDefaults() *CommonsBalanceDetails {
	this := CommonsBalanceDetails{}
	return &this
}

// GetFreeBalance returns the FreeBalance field value if set, zero value otherwise.
func (o *CommonsBalanceDetails) GetFreeBalance() CommonsBalance {
	if o == nil || IsNil(o.FreeBalance) {
		var ret CommonsBalance
		return ret
	}
	return *o.FreeBalance
}

// GetFreeBalanceOk returns a tuple with the FreeBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsBalanceDetails) GetFreeBalanceOk() (*CommonsBalance, bool) {
	if o == nil || IsNil(o.FreeBalance) {
		return nil, false
	}
	return o.FreeBalance, true
}

// HasFreeBalance returns a boolean if a field has been set.
func (o *CommonsBalanceDetails) HasFreeBalance() bool {
	if o != nil && !IsNil(o.FreeBalance) {
		return true
	}

	return false
}

// SetFreeBalance gets a reference to the given CommonsBalance and assigns it to the FreeBalance field.
func (o *CommonsBalanceDetails) SetFreeBalance(v CommonsBalance) {
	o.FreeBalance = &v
}

// GetPaidBalance returns the PaidBalance field value if set, zero value otherwise.
func (o *CommonsBalanceDetails) GetPaidBalance() CommonsBalance {
	if o == nil || IsNil(o.PaidBalance) {
		var ret CommonsBalance
		return ret
	}
	return *o.PaidBalance
}

// GetPaidBalanceOk returns a tuple with the PaidBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsBalanceDetails) GetPaidBalanceOk() (*CommonsBalance, bool) {
	if o == nil || IsNil(o.PaidBalance) {
		return nil, false
	}
	return o.PaidBalance, true
}

// HasPaidBalance returns a boolean if a field has been set.
func (o *CommonsBalanceDetails) HasPaidBalance() bool {
	if o != nil && !IsNil(o.PaidBalance) {
		return true
	}

	return false
}

// SetPaidBalance gets a reference to the given CommonsBalance and assigns it to the PaidBalance field.
func (o *CommonsBalanceDetails) SetPaidBalance(v CommonsBalance) {
	o.PaidBalance = &v
}

func (o CommonsBalanceDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsBalanceDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FreeBalance) {
		toSerialize["free_balance"] = o.FreeBalance
	}
	if !IsNil(o.PaidBalance) {
		toSerialize["paid_balance"] = o.PaidBalance
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsBalanceDetails) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsBalanceDetails := _CommonsBalanceDetails{}

	if err = json.Unmarshal(bytes, &varCommonsBalanceDetails); err == nil {
		*o = CommonsBalanceDetails(varCommonsBalanceDetails)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "free_balance")
		delete(additionalProperties, "paid_balance")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsBalanceDetails struct {
	value *CommonsBalanceDetails
	isSet bool
}

func (v NullableCommonsBalanceDetails) Get() *CommonsBalanceDetails {
	return v.value
}

func (v *NullableCommonsBalanceDetails) Set(val *CommonsBalanceDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsBalanceDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsBalanceDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsBalanceDetails(val *CommonsBalanceDetails) *NullableCommonsBalanceDetails {
	return &NullableCommonsBalanceDetails{value: val, isSet: true}
}

func (v NullableCommonsBalanceDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsBalanceDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


