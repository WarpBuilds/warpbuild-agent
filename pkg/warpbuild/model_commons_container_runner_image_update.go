/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsContainerRunnerImageUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsContainerRunnerImageUpdate{}

// CommonsContainerRunnerImageUpdate struct for CommonsContainerRunnerImageUpdate
type CommonsContainerRunnerImageUpdate struct {
	ImageTag *string `json:"image_tag,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsContainerRunnerImageUpdate CommonsContainerRunnerImageUpdate

// NewCommonsContainerRunnerImageUpdate instantiates a new CommonsContainerRunnerImageUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsContainerRunnerImageUpdate() *CommonsContainerRunnerImageUpdate {
	this := CommonsContainerRunnerImageUpdate{}
	return &this
}

// NewCommonsContainerRunnerImageUpdateWithDefaults instantiates a new CommonsContainerRunnerImageUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsContainerRunnerImageUpdateWithDefaults() *CommonsContainerRunnerImageUpdate {
	this := CommonsContainerRunnerImageUpdate{}
	return &this
}

// GetImageTag returns the ImageTag field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageUpdate) GetImageTag() string {
	if o == nil || IsNil(o.ImageTag) {
		var ret string
		return ret
	}
	return *o.ImageTag
}

// GetImageTagOk returns a tuple with the ImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageUpdate) GetImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ImageTag) {
		return nil, false
	}
	return o.ImageTag, true
}

// HasImageTag returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageUpdate) HasImageTag() bool {
	if o != nil && !IsNil(o.ImageTag) {
		return true
	}

	return false
}

// SetImageTag gets a reference to the given string and assigns it to the ImageTag field.
func (o *CommonsContainerRunnerImageUpdate) SetImageTag(v string) {
	o.ImageTag = &v
}

func (o CommonsContainerRunnerImageUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsContainerRunnerImageUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageTag) {
		toSerialize["image_tag"] = o.ImageTag
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsContainerRunnerImageUpdate) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsContainerRunnerImageUpdate := _CommonsContainerRunnerImageUpdate{}

	err = json.Unmarshal(bytes, &varCommonsContainerRunnerImageUpdate)

	if err != nil {
		return err
	}

	*o = CommonsContainerRunnerImageUpdate(varCommonsContainerRunnerImageUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "image_tag")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsContainerRunnerImageUpdate struct {
	value *CommonsContainerRunnerImageUpdate
	isSet bool
}

func (v NullableCommonsContainerRunnerImageUpdate) Get() *CommonsContainerRunnerImageUpdate {
	return v.value
}

func (v *NullableCommonsContainerRunnerImageUpdate) Set(val *CommonsContainerRunnerImageUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsContainerRunnerImageUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsContainerRunnerImageUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsContainerRunnerImageUpdate(val *CommonsContainerRunnerImageUpdate) *NullableCommonsContainerRunnerImageUpdate {
	return &NullableCommonsContainerRunnerImageUpdate{value: val, isSet: true}
}

func (v NullableCommonsContainerRunnerImageUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsContainerRunnerImageUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


