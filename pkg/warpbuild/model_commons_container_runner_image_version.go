/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsContainerRunnerImageVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsContainerRunnerImageVersion{}

// CommonsContainerRunnerImageVersion struct for CommonsContainerRunnerImageVersion
type CommonsContainerRunnerImageVersion struct {
	DataDirSize *string `json:"data_dir_size,omitempty"`
	ImageDigest *string `json:"image_digest,omitempty"`
	ImageRepository *string `json:"image_repository,omitempty"`
	ImageSize *string `json:"image_size,omitempty"`
	ImageTag *string `json:"image_tag,omitempty"`
	// ImageURI is the full uri of the image. This can be used to download the image  +OutputOnly
	ImageUri *string `json:"image_uri,omitempty"`
	SnapshotId *string `json:"snapshot_id,omitempty"`
	SnapshotSize *string `json:"snapshot_size,omitempty"`
	VolumeId *string `json:"volume_id,omitempty"`
	// VolumeSizeGB is the size of the volume in GB. This is used when creating a snapshot out of the volume.  This is rounded up to the nearest GiB.
	VolumeSizeGb *int32 `json:"volume_size_gb,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsContainerRunnerImageVersion CommonsContainerRunnerImageVersion

// NewCommonsContainerRunnerImageVersion instantiates a new CommonsContainerRunnerImageVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsContainerRunnerImageVersion() *CommonsContainerRunnerImageVersion {
	this := CommonsContainerRunnerImageVersion{}
	return &this
}

// NewCommonsContainerRunnerImageVersionWithDefaults instantiates a new CommonsContainerRunnerImageVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsContainerRunnerImageVersionWithDefaults() *CommonsContainerRunnerImageVersion {
	this := CommonsContainerRunnerImageVersion{}
	return &this
}

// GetDataDirSize returns the DataDirSize field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetDataDirSize() string {
	if o == nil || IsNil(o.DataDirSize) {
		var ret string
		return ret
	}
	return *o.DataDirSize
}

// GetDataDirSizeOk returns a tuple with the DataDirSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetDataDirSizeOk() (*string, bool) {
	if o == nil || IsNil(o.DataDirSize) {
		return nil, false
	}
	return o.DataDirSize, true
}

// HasDataDirSize returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasDataDirSize() bool {
	if o != nil && !IsNil(o.DataDirSize) {
		return true
	}

	return false
}

// SetDataDirSize gets a reference to the given string and assigns it to the DataDirSize field.
func (o *CommonsContainerRunnerImageVersion) SetDataDirSize(v string) {
	o.DataDirSize = &v
}

// GetImageDigest returns the ImageDigest field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetImageDigest() string {
	if o == nil || IsNil(o.ImageDigest) {
		var ret string
		return ret
	}
	return *o.ImageDigest
}

// GetImageDigestOk returns a tuple with the ImageDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetImageDigestOk() (*string, bool) {
	if o == nil || IsNil(o.ImageDigest) {
		return nil, false
	}
	return o.ImageDigest, true
}

// HasImageDigest returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasImageDigest() bool {
	if o != nil && !IsNil(o.ImageDigest) {
		return true
	}

	return false
}

// SetImageDigest gets a reference to the given string and assigns it to the ImageDigest field.
func (o *CommonsContainerRunnerImageVersion) SetImageDigest(v string) {
	o.ImageDigest = &v
}

// GetImageRepository returns the ImageRepository field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetImageRepository() string {
	if o == nil || IsNil(o.ImageRepository) {
		var ret string
		return ret
	}
	return *o.ImageRepository
}

// GetImageRepositoryOk returns a tuple with the ImageRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetImageRepositoryOk() (*string, bool) {
	if o == nil || IsNil(o.ImageRepository) {
		return nil, false
	}
	return o.ImageRepository, true
}

// HasImageRepository returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasImageRepository() bool {
	if o != nil && !IsNil(o.ImageRepository) {
		return true
	}

	return false
}

// SetImageRepository gets a reference to the given string and assigns it to the ImageRepository field.
func (o *CommonsContainerRunnerImageVersion) SetImageRepository(v string) {
	o.ImageRepository = &v
}

// GetImageSize returns the ImageSize field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetImageSize() string {
	if o == nil || IsNil(o.ImageSize) {
		var ret string
		return ret
	}
	return *o.ImageSize
}

// GetImageSizeOk returns a tuple with the ImageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetImageSizeOk() (*string, bool) {
	if o == nil || IsNil(o.ImageSize) {
		return nil, false
	}
	return o.ImageSize, true
}

// HasImageSize returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasImageSize() bool {
	if o != nil && !IsNil(o.ImageSize) {
		return true
	}

	return false
}

// SetImageSize gets a reference to the given string and assigns it to the ImageSize field.
func (o *CommonsContainerRunnerImageVersion) SetImageSize(v string) {
	o.ImageSize = &v
}

// GetImageTag returns the ImageTag field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetImageTag() string {
	if o == nil || IsNil(o.ImageTag) {
		var ret string
		return ret
	}
	return *o.ImageTag
}

// GetImageTagOk returns a tuple with the ImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ImageTag) {
		return nil, false
	}
	return o.ImageTag, true
}

// HasImageTag returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasImageTag() bool {
	if o != nil && !IsNil(o.ImageTag) {
		return true
	}

	return false
}

// SetImageTag gets a reference to the given string and assigns it to the ImageTag field.
func (o *CommonsContainerRunnerImageVersion) SetImageTag(v string) {
	o.ImageTag = &v
}

// GetImageUri returns the ImageUri field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetImageUri() string {
	if o == nil || IsNil(o.ImageUri) {
		var ret string
		return ret
	}
	return *o.ImageUri
}

// GetImageUriOk returns a tuple with the ImageUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetImageUriOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUri) {
		return nil, false
	}
	return o.ImageUri, true
}

// HasImageUri returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasImageUri() bool {
	if o != nil && !IsNil(o.ImageUri) {
		return true
	}

	return false
}

// SetImageUri gets a reference to the given string and assigns it to the ImageUri field.
func (o *CommonsContainerRunnerImageVersion) SetImageUri(v string) {
	o.ImageUri = &v
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetSnapshotId() string {
	if o == nil || IsNil(o.SnapshotId) {
		var ret string
		return ret
	}
	return *o.SnapshotId
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetSnapshotIdOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotId) {
		return nil, false
	}
	return o.SnapshotId, true
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasSnapshotId() bool {
	if o != nil && !IsNil(o.SnapshotId) {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given string and assigns it to the SnapshotId field.
func (o *CommonsContainerRunnerImageVersion) SetSnapshotId(v string) {
	o.SnapshotId = &v
}

// GetSnapshotSize returns the SnapshotSize field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetSnapshotSize() string {
	if o == nil || IsNil(o.SnapshotSize) {
		var ret string
		return ret
	}
	return *o.SnapshotSize
}

// GetSnapshotSizeOk returns a tuple with the SnapshotSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetSnapshotSizeOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotSize) {
		return nil, false
	}
	return o.SnapshotSize, true
}

// HasSnapshotSize returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasSnapshotSize() bool {
	if o != nil && !IsNil(o.SnapshotSize) {
		return true
	}

	return false
}

// SetSnapshotSize gets a reference to the given string and assigns it to the SnapshotSize field.
func (o *CommonsContainerRunnerImageVersion) SetSnapshotSize(v string) {
	o.SnapshotSize = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetVolumeId() string {
	if o == nil || IsNil(o.VolumeId) {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetVolumeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeId) {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasVolumeId() bool {
	if o != nil && !IsNil(o.VolumeId) {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *CommonsContainerRunnerImageVersion) SetVolumeId(v string) {
	o.VolumeId = &v
}

// GetVolumeSizeGb returns the VolumeSizeGb field value if set, zero value otherwise.
func (o *CommonsContainerRunnerImageVersion) GetVolumeSizeGb() int32 {
	if o == nil || IsNil(o.VolumeSizeGb) {
		var ret int32
		return ret
	}
	return *o.VolumeSizeGb
}

// GetVolumeSizeGbOk returns a tuple with the VolumeSizeGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsContainerRunnerImageVersion) GetVolumeSizeGbOk() (*int32, bool) {
	if o == nil || IsNil(o.VolumeSizeGb) {
		return nil, false
	}
	return o.VolumeSizeGb, true
}

// HasVolumeSizeGb returns a boolean if a field has been set.
func (o *CommonsContainerRunnerImageVersion) HasVolumeSizeGb() bool {
	if o != nil && !IsNil(o.VolumeSizeGb) {
		return true
	}

	return false
}

// SetVolumeSizeGb gets a reference to the given int32 and assigns it to the VolumeSizeGb field.
func (o *CommonsContainerRunnerImageVersion) SetVolumeSizeGb(v int32) {
	o.VolumeSizeGb = &v
}

func (o CommonsContainerRunnerImageVersion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsContainerRunnerImageVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataDirSize) {
		toSerialize["data_dir_size"] = o.DataDirSize
	}
	if !IsNil(o.ImageDigest) {
		toSerialize["image_digest"] = o.ImageDigest
	}
	if !IsNil(o.ImageRepository) {
		toSerialize["image_repository"] = o.ImageRepository
	}
	if !IsNil(o.ImageSize) {
		toSerialize["image_size"] = o.ImageSize
	}
	if !IsNil(o.ImageTag) {
		toSerialize["image_tag"] = o.ImageTag
	}
	if !IsNil(o.ImageUri) {
		toSerialize["image_uri"] = o.ImageUri
	}
	if !IsNil(o.SnapshotId) {
		toSerialize["snapshot_id"] = o.SnapshotId
	}
	if !IsNil(o.SnapshotSize) {
		toSerialize["snapshot_size"] = o.SnapshotSize
	}
	if !IsNil(o.VolumeId) {
		toSerialize["volume_id"] = o.VolumeId
	}
	if !IsNil(o.VolumeSizeGb) {
		toSerialize["volume_size_gb"] = o.VolumeSizeGb
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsContainerRunnerImageVersion) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsContainerRunnerImageVersion := _CommonsContainerRunnerImageVersion{}

	err = json.Unmarshal(bytes, &varCommonsContainerRunnerImageVersion)

	if err != nil {
		return err
	}

	*o = CommonsContainerRunnerImageVersion(varCommonsContainerRunnerImageVersion)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "data_dir_size")
		delete(additionalProperties, "image_digest")
		delete(additionalProperties, "image_repository")
		delete(additionalProperties, "image_size")
		delete(additionalProperties, "image_tag")
		delete(additionalProperties, "image_uri")
		delete(additionalProperties, "snapshot_id")
		delete(additionalProperties, "snapshot_size")
		delete(additionalProperties, "volume_id")
		delete(additionalProperties, "volume_size_gb")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsContainerRunnerImageVersion struct {
	value *CommonsContainerRunnerImageVersion
	isSet bool
}

func (v NullableCommonsContainerRunnerImageVersion) Get() *CommonsContainerRunnerImageVersion {
	return v.value
}

func (v *NullableCommonsContainerRunnerImageVersion) Set(val *CommonsContainerRunnerImageVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsContainerRunnerImageVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsContainerRunnerImageVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsContainerRunnerImageVersion(val *CommonsContainerRunnerImageVersion) *NullableCommonsContainerRunnerImageVersion {
	return &NullableCommonsContainerRunnerImageVersion{value: val, isSet: true}
}

func (v NullableCommonsContainerRunnerImageVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsContainerRunnerImageVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


