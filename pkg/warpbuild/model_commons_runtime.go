/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsRuntime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsRuntime{}

// CommonsRuntime struct for CommonsRuntime
type CommonsRuntime struct {
	DurationSeconds *int32 `json:"duration_seconds,omitempty"`
	RunnerId *string `json:"runner_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsRuntime CommonsRuntime

// NewCommonsRuntime instantiates a new CommonsRuntime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsRuntime() *CommonsRuntime {
	this := CommonsRuntime{}
	return &this
}

// NewCommonsRuntimeWithDefaults instantiates a new CommonsRuntime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsRuntimeWithDefaults() *CommonsRuntime {
	this := CommonsRuntime{}
	return &this
}

// GetDurationSeconds returns the DurationSeconds field value if set, zero value otherwise.
func (o *CommonsRuntime) GetDurationSeconds() int32 {
	if o == nil || IsNil(o.DurationSeconds) {
		var ret int32
		return ret
	}
	return *o.DurationSeconds
}

// GetDurationSecondsOk returns a tuple with the DurationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRuntime) GetDurationSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.DurationSeconds) {
		return nil, false
	}
	return o.DurationSeconds, true
}

// HasDurationSeconds returns a boolean if a field has been set.
func (o *CommonsRuntime) HasDurationSeconds() bool {
	if o != nil && !IsNil(o.DurationSeconds) {
		return true
	}

	return false
}

// SetDurationSeconds gets a reference to the given int32 and assigns it to the DurationSeconds field.
func (o *CommonsRuntime) SetDurationSeconds(v int32) {
	o.DurationSeconds = &v
}

// GetRunnerId returns the RunnerId field value if set, zero value otherwise.
func (o *CommonsRuntime) GetRunnerId() string {
	if o == nil || IsNil(o.RunnerId) {
		var ret string
		return ret
	}
	return *o.RunnerId
}

// GetRunnerIdOk returns a tuple with the RunnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRuntime) GetRunnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.RunnerId) {
		return nil, false
	}
	return o.RunnerId, true
}

// HasRunnerId returns a boolean if a field has been set.
func (o *CommonsRuntime) HasRunnerId() bool {
	if o != nil && !IsNil(o.RunnerId) {
		return true
	}

	return false
}

// SetRunnerId gets a reference to the given string and assigns it to the RunnerId field.
func (o *CommonsRuntime) SetRunnerId(v string) {
	o.RunnerId = &v
}

func (o CommonsRuntime) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsRuntime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DurationSeconds) {
		toSerialize["duration_seconds"] = o.DurationSeconds
	}
	if !IsNil(o.RunnerId) {
		toSerialize["runner_id"] = o.RunnerId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsRuntime) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsRuntime := _CommonsRuntime{}

	err = json.Unmarshal(bytes, &varCommonsRuntime)

	if err != nil {
		return err
	}

	*o = CommonsRuntime(varCommonsRuntime)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "duration_seconds")
		delete(additionalProperties, "runner_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsRuntime struct {
	value *CommonsRuntime
	isSet bool
}

func (v NullableCommonsRuntime) Get() *CommonsRuntime {
	return v.value
}

func (v *NullableCommonsRuntime) Set(val *CommonsRuntime) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsRuntime) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsRuntime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsRuntime(val *CommonsRuntime) *NullableCommonsRuntime {
	return &NullableCommonsRuntime{value: val, isSet: true}
}

func (v NullableCommonsRuntime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsRuntime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


