/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsRunner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsRunner{}

// CommonsRunner struct for CommonsRunner
type CommonsRunner struct {
	Active *bool `json:"active,omitempty"`
<<<<<<< HEAD
	ClusterId *string `json:"cluster_id,omitempty"`
	Configuration *CommonsRunnerConfiguration `json:"configuration,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	ExternalReferenceId *string `json:"external_reference_id,omitempty"`
	Id *string `json:"id,omitempty"`
	Labels map[string]interface{} `json:"labels,omitempty"`
	Name *string `json:"name,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
=======
	Configuration *CommonsRunnerSetConfiguration `json:"configuration,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Id *string `json:"id,omitempty"`
	Labels []string `json:"labels,omitempty"`
	Name *string `json:"name,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	ProviderId *string `json:"provider_id,omitempty"`
	StockRunnerId *string `json:"stock_runner_id,omitempty"`
>>>>>>> prajjwal-warp-323
	UpdatedAt *string `json:"updated_at,omitempty"`
	VcsIntegrationId *string `json:"vcs_integration_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsRunner CommonsRunner

// NewCommonsRunner instantiates a new CommonsRunner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsRunner() *CommonsRunner {
	this := CommonsRunner{}
	return &this
}

// NewCommonsRunnerWithDefaults instantiates a new CommonsRunner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsRunnerWithDefaults() *CommonsRunner {
	this := CommonsRunner{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CommonsRunner) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CommonsRunner) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CommonsRunner) SetActive(v bool) {
	o.Active = &v
}

<<<<<<< HEAD
// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *CommonsRunner) GetClusterId() string {
	if o == nil || IsNil(o.ClusterId) {
		var ret string
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *CommonsRunner) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given string and assigns it to the ClusterId field.
func (o *CommonsRunner) SetClusterId(v string) {
	o.ClusterId = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *CommonsRunner) GetConfiguration() CommonsRunnerConfiguration {
	if o == nil || IsNil(o.Configuration) {
		var ret CommonsRunnerConfiguration
=======
// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *CommonsRunner) GetConfiguration() CommonsRunnerSetConfiguration {
	if o == nil || IsNil(o.Configuration) {
		var ret CommonsRunnerSetConfiguration
>>>>>>> prajjwal-warp-323
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *CommonsRunner) GetConfigurationOk() (*CommonsRunnerConfiguration, bool) {
=======
func (o *CommonsRunner) GetConfigurationOk() (*CommonsRunnerSetConfiguration, bool) {
>>>>>>> prajjwal-warp-323
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *CommonsRunner) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetConfiguration gets a reference to the given CommonsRunnerConfiguration and assigns it to the Configuration field.
func (o *CommonsRunner) SetConfiguration(v CommonsRunnerConfiguration) {
=======
// SetConfiguration gets a reference to the given CommonsRunnerSetConfiguration and assigns it to the Configuration field.
func (o *CommonsRunner) SetConfiguration(v CommonsRunnerSetConfiguration) {
>>>>>>> prajjwal-warp-323
	o.Configuration = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CommonsRunner) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CommonsRunner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CommonsRunner) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

<<<<<<< HEAD
// GetExternalReferenceId returns the ExternalReferenceId field value if set, zero value otherwise.
func (o *CommonsRunner) GetExternalReferenceId() string {
	if o == nil || IsNil(o.ExternalReferenceId) {
		var ret string
		return ret
	}
	return *o.ExternalReferenceId
}

// GetExternalReferenceIdOk returns a tuple with the ExternalReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetExternalReferenceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalReferenceId) {
		return nil, false
	}
	return o.ExternalReferenceId, true
}

// HasExternalReferenceId returns a boolean if a field has been set.
func (o *CommonsRunner) HasExternalReferenceId() bool {
	if o != nil && !IsNil(o.ExternalReferenceId) {
		return true
	}

	return false
}

// SetExternalReferenceId gets a reference to the given string and assigns it to the ExternalReferenceId field.
func (o *CommonsRunner) SetExternalReferenceId(v string) {
	o.ExternalReferenceId = &v
}

=======
>>>>>>> prajjwal-warp-323
// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonsRunner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonsRunner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonsRunner) SetId(v string) {
	o.Id = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
<<<<<<< HEAD
func (o *CommonsRunner) GetLabels() map[string]interface{} {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]interface{}
=======
func (o *CommonsRunner) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
>>>>>>> prajjwal-warp-323
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
<<<<<<< HEAD
func (o *CommonsRunner) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return map[string]interface{}{}, false
=======
func (o *CommonsRunner) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
>>>>>>> prajjwal-warp-323
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CommonsRunner) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

<<<<<<< HEAD
// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *CommonsRunner) SetLabels(v map[string]interface{}) {
=======
// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *CommonsRunner) SetLabels(v []string) {
>>>>>>> prajjwal-warp-323
	o.Labels = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CommonsRunner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CommonsRunner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CommonsRunner) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CommonsRunner) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CommonsRunner) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CommonsRunner) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

<<<<<<< HEAD
=======
// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *CommonsRunner) GetProviderId() string {
	if o == nil || IsNil(o.ProviderId) {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderId) {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *CommonsRunner) HasProviderId() bool {
	if o != nil && !IsNil(o.ProviderId) {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *CommonsRunner) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetStockRunnerId returns the StockRunnerId field value if set, zero value otherwise.
func (o *CommonsRunner) GetStockRunnerId() string {
	if o == nil || IsNil(o.StockRunnerId) {
		var ret string
		return ret
	}
	return *o.StockRunnerId
}

// GetStockRunnerIdOk returns a tuple with the StockRunnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetStockRunnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.StockRunnerId) {
		return nil, false
	}
	return o.StockRunnerId, true
}

// HasStockRunnerId returns a boolean if a field has been set.
func (o *CommonsRunner) HasStockRunnerId() bool {
	if o != nil && !IsNil(o.StockRunnerId) {
		return true
	}

	return false
}

// SetStockRunnerId gets a reference to the given string and assigns it to the StockRunnerId field.
func (o *CommonsRunner) SetStockRunnerId(v string) {
	o.StockRunnerId = &v
}

>>>>>>> prajjwal-warp-323
// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CommonsRunner) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CommonsRunner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CommonsRunner) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetVcsIntegrationId returns the VcsIntegrationId field value if set, zero value otherwise.
func (o *CommonsRunner) GetVcsIntegrationId() string {
	if o == nil || IsNil(o.VcsIntegrationId) {
		var ret string
		return ret
	}
	return *o.VcsIntegrationId
}

// GetVcsIntegrationIdOk returns a tuple with the VcsIntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRunner) GetVcsIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.VcsIntegrationId) {
		return nil, false
	}
	return o.VcsIntegrationId, true
}

// HasVcsIntegrationId returns a boolean if a field has been set.
func (o *CommonsRunner) HasVcsIntegrationId() bool {
	if o != nil && !IsNil(o.VcsIntegrationId) {
		return true
	}

	return false
}

// SetVcsIntegrationId gets a reference to the given string and assigns it to the VcsIntegrationId field.
func (o *CommonsRunner) SetVcsIntegrationId(v string) {
	o.VcsIntegrationId = &v
}

func (o CommonsRunner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsRunner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
<<<<<<< HEAD
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
=======
>>>>>>> prajjwal-warp-323
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
<<<<<<< HEAD
	if !IsNil(o.ExternalReferenceId) {
		toSerialize["external_reference_id"] = o.ExternalReferenceId
	}
=======
>>>>>>> prajjwal-warp-323
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
<<<<<<< HEAD
=======
	if !IsNil(o.ProviderId) {
		toSerialize["provider_id"] = o.ProviderId
	}
	if !IsNil(o.StockRunnerId) {
		toSerialize["stock_runner_id"] = o.StockRunnerId
	}
>>>>>>> prajjwal-warp-323
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.VcsIntegrationId) {
		toSerialize["vcs_integration_id"] = o.VcsIntegrationId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsRunner) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsRunner := _CommonsRunner{}

<<<<<<< HEAD
	err = json.Unmarshal(bytes, &varCommonsRunner)

	if err != nil {
		return err
	}

	*o = CommonsRunner(varCommonsRunner)

=======
	if err = json.Unmarshal(bytes, &varCommonsRunner); err == nil {
		*o = CommonsRunner(varCommonsRunner)
	}

>>>>>>> prajjwal-warp-323
	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "active")
<<<<<<< HEAD
		delete(additionalProperties, "cluster_id")
		delete(additionalProperties, "configuration")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "external_reference_id")
=======
		delete(additionalProperties, "configuration")
		delete(additionalProperties, "created_at")
>>>>>>> prajjwal-warp-323
		delete(additionalProperties, "id")
		delete(additionalProperties, "labels")
		delete(additionalProperties, "name")
		delete(additionalProperties, "organization_id")
<<<<<<< HEAD
=======
		delete(additionalProperties, "provider_id")
		delete(additionalProperties, "stock_runner_id")
>>>>>>> prajjwal-warp-323
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "vcs_integration_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsRunner struct {
	value *CommonsRunner
	isSet bool
}

func (v NullableCommonsRunner) Get() *CommonsRunner {
	return v.value
}

func (v *NullableCommonsRunner) Set(val *CommonsRunner) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsRunner) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsRunner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsRunner(val *CommonsRunner) *NullableCommonsRunner {
	return &NullableCommonsRunner{value: val, isSet: true}
}

func (v NullableCommonsRunner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsRunner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


