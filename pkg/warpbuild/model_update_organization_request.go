/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the UpdateOrganizationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationRequest{}

// UpdateOrganizationRequest struct for UpdateOrganizationRequest
type UpdateOrganizationRequest struct {
	AvatarUrl *string `json:"avatar_url,omitempty"`
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateOrganizationRequest UpdateOrganizationRequest

// NewUpdateOrganizationRequest instantiates a new UpdateOrganizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationRequest() *UpdateOrganizationRequest {
	this := UpdateOrganizationRequest{}
	return &this
}

// NewUpdateOrganizationRequestWithDefaults instantiates a new UpdateOrganizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationRequestWithDefaults() *UpdateOrganizationRequest {
	this := UpdateOrganizationRequest{}
	return &this
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetAvatarUrl() string {
	if o == nil || IsNil(o.AvatarUrl) {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetAvatarUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarUrl) {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasAvatarUrl() bool {
	if o != nil && !IsNil(o.AvatarUrl) {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *UpdateOrganizationRequest) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateOrganizationRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateOrganizationRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateOrganizationRequest) SetName(v string) {
	o.Name = &v
}

func (o UpdateOrganizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvatarUrl) {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateOrganizationRequest) UnmarshalJSON(bytes []byte) (err error) {
	varUpdateOrganizationRequest := _UpdateOrganizationRequest{}

	if err = json.Unmarshal(bytes, &varUpdateOrganizationRequest); err == nil {
		*o = UpdateOrganizationRequest(varUpdateOrganizationRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "avatar_url")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateOrganizationRequest struct {
	value *UpdateOrganizationRequest
	isSet bool
}

func (v NullableUpdateOrganizationRequest) Get() *UpdateOrganizationRequest {
	return v.value
}

func (v *NullableUpdateOrganizationRequest) Set(val *UpdateOrganizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationRequest(val *UpdateOrganizationRequest) *NullableUpdateOrganizationRequest {
	return &NullableUpdateOrganizationRequest{value: val, isSet: true}
}

func (v NullableUpdateOrganizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


