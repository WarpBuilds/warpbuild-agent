/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsJobRunnerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsJobRunnerInfo{}

// CommonsJobRunnerInfo struct for CommonsJobRunnerInfo
type CommonsJobRunnerInfo struct {
	JobId *string `json:"job_id,omitempty"`
	RunnerArch *string `json:"runner_arch,omitempty"`
	RunnerHost *string `json:"runner_host,omitempty"`
	RunnerId *string `json:"runner_id,omitempty"`
	RunnerName *string `json:"runner_name,omitempty"`
	RunnerOs *string `json:"runner_os,omitempty"`
	WarpAddedAt *string `json:"warp_added_at,omitempty"`
	WarpRemovedAt *string `json:"warp_removed_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsJobRunnerInfo CommonsJobRunnerInfo

// NewCommonsJobRunnerInfo instantiates a new CommonsJobRunnerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsJobRunnerInfo() *CommonsJobRunnerInfo {
	this := CommonsJobRunnerInfo{}
	return &this
}

// NewCommonsJobRunnerInfoWithDefaults instantiates a new CommonsJobRunnerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsJobRunnerInfoWithDefaults() *CommonsJobRunnerInfo {
	this := CommonsJobRunnerInfo{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *CommonsJobRunnerInfo) GetJobId() string {
	if o == nil || IsNil(o.JobId) {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsJobRunnerInfo) GetJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *CommonsJobRunnerInfo) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *CommonsJobRunnerInfo) SetJobId(v string) {
	o.JobId = &v
}

// GetRunnerArch returns the RunnerArch field value if set, zero value otherwise.
func (o *CommonsJobRunnerInfo) GetRunnerArch() string {
	if o == nil || IsNil(o.RunnerArch) {
		var ret string
		return ret
	}
	return *o.RunnerArch
}

// GetRunnerArchOk returns a tuple with the RunnerArch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsJobRunnerInfo) GetRunnerArchOk() (*string, bool) {
	if o == nil || IsNil(o.RunnerArch) {
		return nil, false
	}
	return o.RunnerArch, true
}

// HasRunnerArch returns a boolean if a field has been set.
func (o *CommonsJobRunnerInfo) HasRunnerArch() bool {
	if o != nil && !IsNil(o.RunnerArch) {
		return true
	}

	return false
}

// SetRunnerArch gets a reference to the given string and assigns it to the RunnerArch field.
func (o *CommonsJobRunnerInfo) SetRunnerArch(v string) {
	o.RunnerArch = &v
}

// GetRunnerHost returns the RunnerHost field value if set, zero value otherwise.
func (o *CommonsJobRunnerInfo) GetRunnerHost() string {
	if o == nil || IsNil(o.RunnerHost) {
		var ret string
		return ret
	}
	return *o.RunnerHost
}

// GetRunnerHostOk returns a tuple with the RunnerHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsJobRunnerInfo) GetRunnerHostOk() (*string, bool) {
	if o == nil || IsNil(o.RunnerHost) {
		return nil, false
	}
	return o.RunnerHost, true
}

// HasRunnerHost returns a boolean if a field has been set.
func (o *CommonsJobRunnerInfo) HasRunnerHost() bool {
	if o != nil && !IsNil(o.RunnerHost) {
		return true
	}

	return false
}

// SetRunnerHost gets a reference to the given string and assigns it to the RunnerHost field.
func (o *CommonsJobRunnerInfo) SetRunnerHost(v string) {
	o.RunnerHost = &v
}

// GetRunnerId returns the RunnerId field value if set, zero value otherwise.
func (o *CommonsJobRunnerInfo) GetRunnerId() string {
	if o == nil || IsNil(o.RunnerId) {
		var ret string
		return ret
	}
	return *o.RunnerId
}

// GetRunnerIdOk returns a tuple with the RunnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsJobRunnerInfo) GetRunnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.RunnerId) {
		return nil, false
	}
	return o.RunnerId, true
}

// HasRunnerId returns a boolean if a field has been set.
func (o *CommonsJobRunnerInfo) HasRunnerId() bool {
	if o != nil && !IsNil(o.RunnerId) {
		return true
	}

	return false
}

// SetRunnerId gets a reference to the given string and assigns it to the RunnerId field.
func (o *CommonsJobRunnerInfo) SetRunnerId(v string) {
	o.RunnerId = &v
}

// GetRunnerName returns the RunnerName field value if set, zero value otherwise.
func (o *CommonsJobRunnerInfo) GetRunnerName() string {
	if o == nil || IsNil(o.RunnerName) {
		var ret string
		return ret
	}
	return *o.RunnerName
}

// GetRunnerNameOk returns a tuple with the RunnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsJobRunnerInfo) GetRunnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.RunnerName) {
		return nil, false
	}
	return o.RunnerName, true
}

// HasRunnerName returns a boolean if a field has been set.
func (o *CommonsJobRunnerInfo) HasRunnerName() bool {
	if o != nil && !IsNil(o.RunnerName) {
		return true
	}

	return false
}

// SetRunnerName gets a reference to the given string and assigns it to the RunnerName field.
func (o *CommonsJobRunnerInfo) SetRunnerName(v string) {
	o.RunnerName = &v
}

// GetRunnerOs returns the RunnerOs field value if set, zero value otherwise.
func (o *CommonsJobRunnerInfo) GetRunnerOs() string {
	if o == nil || IsNil(o.RunnerOs) {
		var ret string
		return ret
	}
	return *o.RunnerOs
}

// GetRunnerOsOk returns a tuple with the RunnerOs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsJobRunnerInfo) GetRunnerOsOk() (*string, bool) {
	if o == nil || IsNil(o.RunnerOs) {
		return nil, false
	}
	return o.RunnerOs, true
}

// HasRunnerOs returns a boolean if a field has been set.
func (o *CommonsJobRunnerInfo) HasRunnerOs() bool {
	if o != nil && !IsNil(o.RunnerOs) {
		return true
	}

	return false
}

// SetRunnerOs gets a reference to the given string and assigns it to the RunnerOs field.
func (o *CommonsJobRunnerInfo) SetRunnerOs(v string) {
	o.RunnerOs = &v
}

// GetWarpAddedAt returns the WarpAddedAt field value if set, zero value otherwise.
func (o *CommonsJobRunnerInfo) GetWarpAddedAt() string {
	if o == nil || IsNil(o.WarpAddedAt) {
		var ret string
		return ret
	}
	return *o.WarpAddedAt
}

// GetWarpAddedAtOk returns a tuple with the WarpAddedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsJobRunnerInfo) GetWarpAddedAtOk() (*string, bool) {
	if o == nil || IsNil(o.WarpAddedAt) {
		return nil, false
	}
	return o.WarpAddedAt, true
}

// HasWarpAddedAt returns a boolean if a field has been set.
func (o *CommonsJobRunnerInfo) HasWarpAddedAt() bool {
	if o != nil && !IsNil(o.WarpAddedAt) {
		return true
	}

	return false
}

// SetWarpAddedAt gets a reference to the given string and assigns it to the WarpAddedAt field.
func (o *CommonsJobRunnerInfo) SetWarpAddedAt(v string) {
	o.WarpAddedAt = &v
}

// GetWarpRemovedAt returns the WarpRemovedAt field value if set, zero value otherwise.
func (o *CommonsJobRunnerInfo) GetWarpRemovedAt() string {
	if o == nil || IsNil(o.WarpRemovedAt) {
		var ret string
		return ret
	}
	return *o.WarpRemovedAt
}

// GetWarpRemovedAtOk returns a tuple with the WarpRemovedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsJobRunnerInfo) GetWarpRemovedAtOk() (*string, bool) {
	if o == nil || IsNil(o.WarpRemovedAt) {
		return nil, false
	}
	return o.WarpRemovedAt, true
}

// HasWarpRemovedAt returns a boolean if a field has been set.
func (o *CommonsJobRunnerInfo) HasWarpRemovedAt() bool {
	if o != nil && !IsNil(o.WarpRemovedAt) {
		return true
	}

	return false
}

// SetWarpRemovedAt gets a reference to the given string and assigns it to the WarpRemovedAt field.
func (o *CommonsJobRunnerInfo) SetWarpRemovedAt(v string) {
	o.WarpRemovedAt = &v
}

func (o CommonsJobRunnerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsJobRunnerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobId) {
		toSerialize["job_id"] = o.JobId
	}
	if !IsNil(o.RunnerArch) {
		toSerialize["runner_arch"] = o.RunnerArch
	}
	if !IsNil(o.RunnerHost) {
		toSerialize["runner_host"] = o.RunnerHost
	}
	if !IsNil(o.RunnerId) {
		toSerialize["runner_id"] = o.RunnerId
	}
	if !IsNil(o.RunnerName) {
		toSerialize["runner_name"] = o.RunnerName
	}
	if !IsNil(o.RunnerOs) {
		toSerialize["runner_os"] = o.RunnerOs
	}
	if !IsNil(o.WarpAddedAt) {
		toSerialize["warp_added_at"] = o.WarpAddedAt
	}
	if !IsNil(o.WarpRemovedAt) {
		toSerialize["warp_removed_at"] = o.WarpRemovedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsJobRunnerInfo) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsJobRunnerInfo := _CommonsJobRunnerInfo{}

	err = json.Unmarshal(bytes, &varCommonsJobRunnerInfo)

	if err != nil {
		return err
	}

	*o = CommonsJobRunnerInfo(varCommonsJobRunnerInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "job_id")
		delete(additionalProperties, "runner_arch")
		delete(additionalProperties, "runner_host")
		delete(additionalProperties, "runner_id")
		delete(additionalProperties, "runner_name")
		delete(additionalProperties, "runner_os")
		delete(additionalProperties, "warp_added_at")
		delete(additionalProperties, "warp_removed_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsJobRunnerInfo struct {
	value *CommonsJobRunnerInfo
	isSet bool
}

func (v NullableCommonsJobRunnerInfo) Get() *CommonsJobRunnerInfo {
	return v.value
}

func (v *NullableCommonsJobRunnerInfo) Set(val *CommonsJobRunnerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsJobRunnerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsJobRunnerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsJobRunnerInfo(val *CommonsJobRunnerInfo) *NullableCommonsJobRunnerInfo {
	return &NullableCommonsJobRunnerInfo{value: val, isSet: true}
}

func (v NullableCommonsJobRunnerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsJobRunnerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


