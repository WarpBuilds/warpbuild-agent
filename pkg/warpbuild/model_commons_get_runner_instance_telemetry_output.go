/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsGetRunnerInstanceTelemetryOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsGetRunnerInstanceTelemetryOutput{}

// CommonsGetRunnerInstanceTelemetryOutput struct for CommonsGetRunnerInstanceTelemetryOutput
type CommonsGetRunnerInstanceTelemetryOutput struct {
	TelemetryFiles []CommonsTelemetryLogFile `json:"telemetry_files,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsGetRunnerInstanceTelemetryOutput CommonsGetRunnerInstanceTelemetryOutput

// NewCommonsGetRunnerInstanceTelemetryOutput instantiates a new CommonsGetRunnerInstanceTelemetryOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsGetRunnerInstanceTelemetryOutput() *CommonsGetRunnerInstanceTelemetryOutput {
	this := CommonsGetRunnerInstanceTelemetryOutput{}
	return &this
}

// NewCommonsGetRunnerInstanceTelemetryOutputWithDefaults instantiates a new CommonsGetRunnerInstanceTelemetryOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsGetRunnerInstanceTelemetryOutputWithDefaults() *CommonsGetRunnerInstanceTelemetryOutput {
	this := CommonsGetRunnerInstanceTelemetryOutput{}
	return &this
}

// GetTelemetryFiles returns the TelemetryFiles field value if set, zero value otherwise.
func (o *CommonsGetRunnerInstanceTelemetryOutput) GetTelemetryFiles() []CommonsTelemetryLogFile {
	if o == nil || IsNil(o.TelemetryFiles) {
		var ret []CommonsTelemetryLogFile
		return ret
	}
	return o.TelemetryFiles
}

// GetTelemetryFilesOk returns a tuple with the TelemetryFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsGetRunnerInstanceTelemetryOutput) GetTelemetryFilesOk() ([]CommonsTelemetryLogFile, bool) {
	if o == nil || IsNil(o.TelemetryFiles) {
		return nil, false
	}
	return o.TelemetryFiles, true
}

// HasTelemetryFiles returns a boolean if a field has been set.
func (o *CommonsGetRunnerInstanceTelemetryOutput) HasTelemetryFiles() bool {
	if o != nil && !IsNil(o.TelemetryFiles) {
		return true
	}

	return false
}

// SetTelemetryFiles gets a reference to the given []CommonsTelemetryLogFile and assigns it to the TelemetryFiles field.
func (o *CommonsGetRunnerInstanceTelemetryOutput) SetTelemetryFiles(v []CommonsTelemetryLogFile) {
	o.TelemetryFiles = v
}

func (o CommonsGetRunnerInstanceTelemetryOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsGetRunnerInstanceTelemetryOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TelemetryFiles) {
		toSerialize["telemetry_files"] = o.TelemetryFiles
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsGetRunnerInstanceTelemetryOutput) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsGetRunnerInstanceTelemetryOutput := _CommonsGetRunnerInstanceTelemetryOutput{}

	err = json.Unmarshal(bytes, &varCommonsGetRunnerInstanceTelemetryOutput)

	if err != nil {
		return err
	}

	*o = CommonsGetRunnerInstanceTelemetryOutput(varCommonsGetRunnerInstanceTelemetryOutput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "telemetry_files")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsGetRunnerInstanceTelemetryOutput struct {
	value *CommonsGetRunnerInstanceTelemetryOutput
	isSet bool
}

func (v NullableCommonsGetRunnerInstanceTelemetryOutput) Get() *CommonsGetRunnerInstanceTelemetryOutput {
	return v.value
}

func (v *NullableCommonsGetRunnerInstanceTelemetryOutput) Set(val *CommonsGetRunnerInstanceTelemetryOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsGetRunnerInstanceTelemetryOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsGetRunnerInstanceTelemetryOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsGetRunnerInstanceTelemetryOutput(val *CommonsGetRunnerInstanceTelemetryOutput) *NullableCommonsGetRunnerInstanceTelemetryOutput {
	return &NullableCommonsGetRunnerInstanceTelemetryOutput{value: val, isSet: true}
}

func (v NullableCommonsGetRunnerInstanceTelemetryOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsGetRunnerInstanceTelemetryOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


