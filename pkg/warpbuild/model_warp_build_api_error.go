/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the WarpBuildAPIError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WarpBuildAPIError{}

// WarpBuildAPIError struct for WarpBuildAPIError
type WarpBuildAPIError struct {
	Code *string `json:"code,omitempty"`
	Description *string `json:"description,omitempty"`
	Message *string `json:"message,omitempty"`
	SubCode *string `json:"sub_code,omitempty"`
	SubMessage *string `json:"sub_message,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WarpBuildAPIError WarpBuildAPIError

// NewWarpBuildAPIError instantiates a new WarpBuildAPIError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWarpBuildAPIError() *WarpBuildAPIError {
	this := WarpBuildAPIError{}
	return &this
}

// NewWarpBuildAPIErrorWithDefaults instantiates a new WarpBuildAPIError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWarpBuildAPIErrorWithDefaults() *WarpBuildAPIError {
	this := WarpBuildAPIError{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *WarpBuildAPIError) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarpBuildAPIError) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *WarpBuildAPIError) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *WarpBuildAPIError) SetCode(v string) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WarpBuildAPIError) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarpBuildAPIError) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WarpBuildAPIError) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WarpBuildAPIError) SetDescription(v string) {
	o.Description = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *WarpBuildAPIError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarpBuildAPIError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *WarpBuildAPIError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *WarpBuildAPIError) SetMessage(v string) {
	o.Message = &v
}

// GetSubCode returns the SubCode field value if set, zero value otherwise.
func (o *WarpBuildAPIError) GetSubCode() string {
	if o == nil || IsNil(o.SubCode) {
		var ret string
		return ret
	}
	return *o.SubCode
}

// GetSubCodeOk returns a tuple with the SubCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarpBuildAPIError) GetSubCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SubCode) {
		return nil, false
	}
	return o.SubCode, true
}

// HasSubCode returns a boolean if a field has been set.
func (o *WarpBuildAPIError) HasSubCode() bool {
	if o != nil && !IsNil(o.SubCode) {
		return true
	}

	return false
}

// SetSubCode gets a reference to the given string and assigns it to the SubCode field.
func (o *WarpBuildAPIError) SetSubCode(v string) {
	o.SubCode = &v
}

// GetSubMessage returns the SubMessage field value if set, zero value otherwise.
func (o *WarpBuildAPIError) GetSubMessage() string {
	if o == nil || IsNil(o.SubMessage) {
		var ret string
		return ret
	}
	return *o.SubMessage
}

// GetSubMessageOk returns a tuple with the SubMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WarpBuildAPIError) GetSubMessageOk() (*string, bool) {
	if o == nil || IsNil(o.SubMessage) {
		return nil, false
	}
	return o.SubMessage, true
}

// HasSubMessage returns a boolean if a field has been set.
func (o *WarpBuildAPIError) HasSubMessage() bool {
	if o != nil && !IsNil(o.SubMessage) {
		return true
	}

	return false
}

// SetSubMessage gets a reference to the given string and assigns it to the SubMessage field.
func (o *WarpBuildAPIError) SetSubMessage(v string) {
	o.SubMessage = &v
}

func (o WarpBuildAPIError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WarpBuildAPIError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.SubCode) {
		toSerialize["sub_code"] = o.SubCode
	}
	if !IsNil(o.SubMessage) {
		toSerialize["sub_message"] = o.SubMessage
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WarpBuildAPIError) UnmarshalJSON(bytes []byte) (err error) {
	varWarpBuildAPIError := _WarpBuildAPIError{}

<<<<<<< HEAD
	err = json.Unmarshal(bytes, &varWarpBuildAPIError)

	if err != nil {
		return err
	}

	*o = WarpBuildAPIError(varWarpBuildAPIError)

=======
	if err = json.Unmarshal(bytes, &varWarpBuildAPIError); err == nil {
		*o = WarpBuildAPIError(varWarpBuildAPIError)
	}

>>>>>>> prajjwal-warp-323
	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "description")
		delete(additionalProperties, "message")
		delete(additionalProperties, "sub_code")
		delete(additionalProperties, "sub_message")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWarpBuildAPIError struct {
	value *WarpBuildAPIError
	isSet bool
}

func (v NullableWarpBuildAPIError) Get() *WarpBuildAPIError {
	return v.value
}

func (v *NullableWarpBuildAPIError) Set(val *WarpBuildAPIError) {
	v.value = val
	v.isSet = true
}

func (v NullableWarpBuildAPIError) IsSet() bool {
	return v.isSet
}

func (v *NullableWarpBuildAPIError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWarpBuildAPIError(val *WarpBuildAPIError) *NullableWarpBuildAPIError {
	return &NullableWarpBuildAPIError{value: val, isSet: true}
}

func (v NullableWarpBuildAPIError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWarpBuildAPIError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


