/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsListUsersResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsListUsersResponse{}

// CommonsListUsersResponse struct for CommonsListUsersResponse
type CommonsListUsersResponse struct {
	Next *int32 `json:"next,omitempty"`
	Page *int32 `json:"page,omitempty"`
	PerPage *int32 `json:"per_page,omitempty"`
	TotalPages *int32 `json:"total_pages,omitempty"`
	TotalRows *int32 `json:"total_rows,omitempty"`
	Users []V1User `json:"users,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsListUsersResponse CommonsListUsersResponse

// NewCommonsListUsersResponse instantiates a new CommonsListUsersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsListUsersResponse() *CommonsListUsersResponse {
	this := CommonsListUsersResponse{}
	return &this
}

// NewCommonsListUsersResponseWithDefaults instantiates a new CommonsListUsersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsListUsersResponseWithDefaults() *CommonsListUsersResponse {
	this := CommonsListUsersResponse{}
	return &this
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *CommonsListUsersResponse) GetNext() int32 {
	if o == nil || IsNil(o.Next) {
		var ret int32
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListUsersResponse) GetNextOk() (*int32, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *CommonsListUsersResponse) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given int32 and assigns it to the Next field.
func (o *CommonsListUsersResponse) SetNext(v int32) {
	o.Next = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *CommonsListUsersResponse) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListUsersResponse) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *CommonsListUsersResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *CommonsListUsersResponse) SetPage(v int32) {
	o.Page = &v
}

// GetPerPage returns the PerPage field value if set, zero value otherwise.
func (o *CommonsListUsersResponse) GetPerPage() int32 {
	if o == nil || IsNil(o.PerPage) {
		var ret int32
		return ret
	}
	return *o.PerPage
}

// GetPerPageOk returns a tuple with the PerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListUsersResponse) GetPerPageOk() (*int32, bool) {
	if o == nil || IsNil(o.PerPage) {
		return nil, false
	}
	return o.PerPage, true
}

// HasPerPage returns a boolean if a field has been set.
func (o *CommonsListUsersResponse) HasPerPage() bool {
	if o != nil && !IsNil(o.PerPage) {
		return true
	}

	return false
}

// SetPerPage gets a reference to the given int32 and assigns it to the PerPage field.
func (o *CommonsListUsersResponse) SetPerPage(v int32) {
	o.PerPage = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *CommonsListUsersResponse) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListUsersResponse) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *CommonsListUsersResponse) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *CommonsListUsersResponse) SetTotalPages(v int32) {
	o.TotalPages = &v
}

// GetTotalRows returns the TotalRows field value if set, zero value otherwise.
func (o *CommonsListUsersResponse) GetTotalRows() int32 {
	if o == nil || IsNil(o.TotalRows) {
		var ret int32
		return ret
	}
	return *o.TotalRows
}

// GetTotalRowsOk returns a tuple with the TotalRows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListUsersResponse) GetTotalRowsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRows) {
		return nil, false
	}
	return o.TotalRows, true
}

// HasTotalRows returns a boolean if a field has been set.
func (o *CommonsListUsersResponse) HasTotalRows() bool {
	if o != nil && !IsNil(o.TotalRows) {
		return true
	}

	return false
}

// SetTotalRows gets a reference to the given int32 and assigns it to the TotalRows field.
func (o *CommonsListUsersResponse) SetTotalRows(v int32) {
	o.TotalRows = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *CommonsListUsersResponse) GetUsers() []V1User {
	if o == nil || IsNil(o.Users) {
		var ret []V1User
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsListUsersResponse) GetUsersOk() ([]V1User, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *CommonsListUsersResponse) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []V1User and assigns it to the Users field.
func (o *CommonsListUsersResponse) SetUsers(v []V1User) {
	o.Users = v
}

func (o CommonsListUsersResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsListUsersResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PerPage) {
		toSerialize["per_page"] = o.PerPage
	}
	if !IsNil(o.TotalPages) {
		toSerialize["total_pages"] = o.TotalPages
	}
	if !IsNil(o.TotalRows) {
		toSerialize["total_rows"] = o.TotalRows
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsListUsersResponse) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsListUsersResponse := _CommonsListUsersResponse{}

	err = json.Unmarshal(bytes, &varCommonsListUsersResponse)

	if err != nil {
		return err
	}

	*o = CommonsListUsersResponse(varCommonsListUsersResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "next")
		delete(additionalProperties, "page")
		delete(additionalProperties, "per_page")
		delete(additionalProperties, "total_pages")
		delete(additionalProperties, "total_rows")
		delete(additionalProperties, "users")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsListUsersResponse struct {
	value *CommonsListUsersResponse
	isSet bool
}

func (v NullableCommonsListUsersResponse) Get() *CommonsListUsersResponse {
	return v.value
}

func (v *NullableCommonsListUsersResponse) Set(val *CommonsListUsersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsListUsersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsListUsersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsListUsersResponse(val *CommonsListUsersResponse) *NullableCommonsListUsersResponse {
	return &NullableCommonsListUsersResponse{value: val, isSet: true}
}

func (v NullableCommonsListUsersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsListUsersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


