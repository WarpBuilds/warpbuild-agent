/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsWorkflow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsWorkflow{}

// CommonsWorkflow struct for CommonsWorkflow
type CommonsWorkflow struct {
	ExternalId *string `json:"external_id,omitempty"`
	ExternalRepoEntity *string `json:"external_repo_entity,omitempty"`
	ExternalRepoId *string `json:"external_repo_id,omitempty"`
	Id *string `json:"id,omitempty"`
	IsRepoPublic *bool `json:"is_repo_public,omitempty"`
	JobsRunnerInfo []CommonsJobRunnerInfo `json:"jobs_runner_info,omitempty"`
	Name *string `json:"name,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	Provider *string `json:"provider,omitempty"`
	ProviderIntegrationId *string `json:"provider_integration_id,omitempty"`
	RunnerInfo *CommonsRunnerInfo `json:"runner_info,omitempty"`
	Stats *CommonsWorkflowStats `json:"stats,omitempty"`
	Url *string `json:"url,omitempty"`
	WarpPrId *string `json:"warp_pr_id,omitempty"`
	WarpPrLink *string `json:"warp_pr_link,omitempty"`
	WarpPrRunner *string `json:"warp_pr_runner,omitempty"`
	WarpStatus *string `json:"warp_status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsWorkflow CommonsWorkflow

// NewCommonsWorkflow instantiates a new CommonsWorkflow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsWorkflow() *CommonsWorkflow {
	this := CommonsWorkflow{}
	return &this
}

// NewCommonsWorkflowWithDefaults instantiates a new CommonsWorkflow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsWorkflowWithDefaults() *CommonsWorkflow {
	this := CommonsWorkflow{}
	return &this
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *CommonsWorkflow) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetExternalRepoEntity returns the ExternalRepoEntity field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetExternalRepoEntity() string {
	if o == nil || IsNil(o.ExternalRepoEntity) {
		var ret string
		return ret
	}
	return *o.ExternalRepoEntity
}

// GetExternalRepoEntityOk returns a tuple with the ExternalRepoEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetExternalRepoEntityOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalRepoEntity) {
		return nil, false
	}
	return o.ExternalRepoEntity, true
}

// HasExternalRepoEntity returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasExternalRepoEntity() bool {
	if o != nil && !IsNil(o.ExternalRepoEntity) {
		return true
	}

	return false
}

// SetExternalRepoEntity gets a reference to the given string and assigns it to the ExternalRepoEntity field.
func (o *CommonsWorkflow) SetExternalRepoEntity(v string) {
	o.ExternalRepoEntity = &v
}

// GetExternalRepoId returns the ExternalRepoId field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetExternalRepoId() string {
	if o == nil || IsNil(o.ExternalRepoId) {
		var ret string
		return ret
	}
	return *o.ExternalRepoId
}

// GetExternalRepoIdOk returns a tuple with the ExternalRepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetExternalRepoIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalRepoId) {
		return nil, false
	}
	return o.ExternalRepoId, true
}

// HasExternalRepoId returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasExternalRepoId() bool {
	if o != nil && !IsNil(o.ExternalRepoId) {
		return true
	}

	return false
}

// SetExternalRepoId gets a reference to the given string and assigns it to the ExternalRepoId field.
func (o *CommonsWorkflow) SetExternalRepoId(v string) {
	o.ExternalRepoId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonsWorkflow) SetId(v string) {
	o.Id = &v
}

// GetIsRepoPublic returns the IsRepoPublic field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetIsRepoPublic() bool {
	if o == nil || IsNil(o.IsRepoPublic) {
		var ret bool
		return ret
	}
	return *o.IsRepoPublic
}

// GetIsRepoPublicOk returns a tuple with the IsRepoPublic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetIsRepoPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRepoPublic) {
		return nil, false
	}
	return o.IsRepoPublic, true
}

// HasIsRepoPublic returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasIsRepoPublic() bool {
	if o != nil && !IsNil(o.IsRepoPublic) {
		return true
	}

	return false
}

// SetIsRepoPublic gets a reference to the given bool and assigns it to the IsRepoPublic field.
func (o *CommonsWorkflow) SetIsRepoPublic(v bool) {
	o.IsRepoPublic = &v
}

// GetJobsRunnerInfo returns the JobsRunnerInfo field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetJobsRunnerInfo() []CommonsJobRunnerInfo {
	if o == nil || IsNil(o.JobsRunnerInfo) {
		var ret []CommonsJobRunnerInfo
		return ret
	}
	return o.JobsRunnerInfo
}

// GetJobsRunnerInfoOk returns a tuple with the JobsRunnerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetJobsRunnerInfoOk() ([]CommonsJobRunnerInfo, bool) {
	if o == nil || IsNil(o.JobsRunnerInfo) {
		return nil, false
	}
	return o.JobsRunnerInfo, true
}

// HasJobsRunnerInfo returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasJobsRunnerInfo() bool {
	if o != nil && !IsNil(o.JobsRunnerInfo) {
		return true
	}

	return false
}

// SetJobsRunnerInfo gets a reference to the given []CommonsJobRunnerInfo and assigns it to the JobsRunnerInfo field.
func (o *CommonsWorkflow) SetJobsRunnerInfo(v []CommonsJobRunnerInfo) {
	o.JobsRunnerInfo = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CommonsWorkflow) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CommonsWorkflow) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *CommonsWorkflow) SetProvider(v string) {
	o.Provider = &v
}

// GetProviderIntegrationId returns the ProviderIntegrationId field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetProviderIntegrationId() string {
	if o == nil || IsNil(o.ProviderIntegrationId) {
		var ret string
		return ret
	}
	return *o.ProviderIntegrationId
}

// GetProviderIntegrationIdOk returns a tuple with the ProviderIntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetProviderIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderIntegrationId) {
		return nil, false
	}
	return o.ProviderIntegrationId, true
}

// HasProviderIntegrationId returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasProviderIntegrationId() bool {
	if o != nil && !IsNil(o.ProviderIntegrationId) {
		return true
	}

	return false
}

// SetProviderIntegrationId gets a reference to the given string and assigns it to the ProviderIntegrationId field.
func (o *CommonsWorkflow) SetProviderIntegrationId(v string) {
	o.ProviderIntegrationId = &v
}

// GetRunnerInfo returns the RunnerInfo field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetRunnerInfo() CommonsRunnerInfo {
	if o == nil || IsNil(o.RunnerInfo) {
		var ret CommonsRunnerInfo
		return ret
	}
	return *o.RunnerInfo
}

// GetRunnerInfoOk returns a tuple with the RunnerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetRunnerInfoOk() (*CommonsRunnerInfo, bool) {
	if o == nil || IsNil(o.RunnerInfo) {
		return nil, false
	}
	return o.RunnerInfo, true
}

// HasRunnerInfo returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasRunnerInfo() bool {
	if o != nil && !IsNil(o.RunnerInfo) {
		return true
	}

	return false
}

// SetRunnerInfo gets a reference to the given CommonsRunnerInfo and assigns it to the RunnerInfo field.
func (o *CommonsWorkflow) SetRunnerInfo(v CommonsRunnerInfo) {
	o.RunnerInfo = &v
}

// GetStats returns the Stats field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetStats() CommonsWorkflowStats {
	if o == nil || IsNil(o.Stats) {
		var ret CommonsWorkflowStats
		return ret
	}
	return *o.Stats
}

// GetStatsOk returns a tuple with the Stats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetStatsOk() (*CommonsWorkflowStats, bool) {
	if o == nil || IsNil(o.Stats) {
		return nil, false
	}
	return o.Stats, true
}

// HasStats returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasStats() bool {
	if o != nil && !IsNil(o.Stats) {
		return true
	}

	return false
}

// SetStats gets a reference to the given CommonsWorkflowStats and assigns it to the Stats field.
func (o *CommonsWorkflow) SetStats(v CommonsWorkflowStats) {
	o.Stats = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CommonsWorkflow) SetUrl(v string) {
	o.Url = &v
}

// GetWarpPrId returns the WarpPrId field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetWarpPrId() string {
	if o == nil || IsNil(o.WarpPrId) {
		var ret string
		return ret
	}
	return *o.WarpPrId
}

// GetWarpPrIdOk returns a tuple with the WarpPrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetWarpPrIdOk() (*string, bool) {
	if o == nil || IsNil(o.WarpPrId) {
		return nil, false
	}
	return o.WarpPrId, true
}

// HasWarpPrId returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasWarpPrId() bool {
	if o != nil && !IsNil(o.WarpPrId) {
		return true
	}

	return false
}

// SetWarpPrId gets a reference to the given string and assigns it to the WarpPrId field.
func (o *CommonsWorkflow) SetWarpPrId(v string) {
	o.WarpPrId = &v
}

// GetWarpPrLink returns the WarpPrLink field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetWarpPrLink() string {
	if o == nil || IsNil(o.WarpPrLink) {
		var ret string
		return ret
	}
	return *o.WarpPrLink
}

// GetWarpPrLinkOk returns a tuple with the WarpPrLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetWarpPrLinkOk() (*string, bool) {
	if o == nil || IsNil(o.WarpPrLink) {
		return nil, false
	}
	return o.WarpPrLink, true
}

// HasWarpPrLink returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasWarpPrLink() bool {
	if o != nil && !IsNil(o.WarpPrLink) {
		return true
	}

	return false
}

// SetWarpPrLink gets a reference to the given string and assigns it to the WarpPrLink field.
func (o *CommonsWorkflow) SetWarpPrLink(v string) {
	o.WarpPrLink = &v
}

// GetWarpPrRunner returns the WarpPrRunner field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetWarpPrRunner() string {
	if o == nil || IsNil(o.WarpPrRunner) {
		var ret string
		return ret
	}
	return *o.WarpPrRunner
}

// GetWarpPrRunnerOk returns a tuple with the WarpPrRunner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetWarpPrRunnerOk() (*string, bool) {
	if o == nil || IsNil(o.WarpPrRunner) {
		return nil, false
	}
	return o.WarpPrRunner, true
}

// HasWarpPrRunner returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasWarpPrRunner() bool {
	if o != nil && !IsNil(o.WarpPrRunner) {
		return true
	}

	return false
}

// SetWarpPrRunner gets a reference to the given string and assigns it to the WarpPrRunner field.
func (o *CommonsWorkflow) SetWarpPrRunner(v string) {
	o.WarpPrRunner = &v
}

// GetWarpStatus returns the WarpStatus field value if set, zero value otherwise.
func (o *CommonsWorkflow) GetWarpStatus() string {
	if o == nil || IsNil(o.WarpStatus) {
		var ret string
		return ret
	}
	return *o.WarpStatus
}

// GetWarpStatusOk returns a tuple with the WarpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWorkflow) GetWarpStatusOk() (*string, bool) {
	if o == nil || IsNil(o.WarpStatus) {
		return nil, false
	}
	return o.WarpStatus, true
}

// HasWarpStatus returns a boolean if a field has been set.
func (o *CommonsWorkflow) HasWarpStatus() bool {
	if o != nil && !IsNil(o.WarpStatus) {
		return true
	}

	return false
}

// SetWarpStatus gets a reference to the given string and assigns it to the WarpStatus field.
func (o *CommonsWorkflow) SetWarpStatus(v string) {
	o.WarpStatus = &v
}

func (o CommonsWorkflow) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsWorkflow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalId) {
		toSerialize["external_id"] = o.ExternalId
	}
	if !IsNil(o.ExternalRepoEntity) {
		toSerialize["external_repo_entity"] = o.ExternalRepoEntity
	}
	if !IsNil(o.ExternalRepoId) {
		toSerialize["external_repo_id"] = o.ExternalRepoId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsRepoPublic) {
		toSerialize["is_repo_public"] = o.IsRepoPublic
	}
	if !IsNil(o.JobsRunnerInfo) {
		toSerialize["jobs_runner_info"] = o.JobsRunnerInfo
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.ProviderIntegrationId) {
		toSerialize["provider_integration_id"] = o.ProviderIntegrationId
	}
	if !IsNil(o.RunnerInfo) {
		toSerialize["runner_info"] = o.RunnerInfo
	}
	if !IsNil(o.Stats) {
		toSerialize["stats"] = o.Stats
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.WarpPrId) {
		toSerialize["warp_pr_id"] = o.WarpPrId
	}
	if !IsNil(o.WarpPrLink) {
		toSerialize["warp_pr_link"] = o.WarpPrLink
	}
	if !IsNil(o.WarpPrRunner) {
		toSerialize["warp_pr_runner"] = o.WarpPrRunner
	}
	if !IsNil(o.WarpStatus) {
		toSerialize["warp_status"] = o.WarpStatus
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsWorkflow) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsWorkflow := _CommonsWorkflow{}

	if err = json.Unmarshal(bytes, &varCommonsWorkflow); err == nil {
		*o = CommonsWorkflow(varCommonsWorkflow)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "external_id")
		delete(additionalProperties, "external_repo_entity")
		delete(additionalProperties, "external_repo_id")
		delete(additionalProperties, "id")
		delete(additionalProperties, "is_repo_public")
		delete(additionalProperties, "jobs_runner_info")
		delete(additionalProperties, "name")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "provider_integration_id")
		delete(additionalProperties, "runner_info")
		delete(additionalProperties, "stats")
		delete(additionalProperties, "url")
		delete(additionalProperties, "warp_pr_id")
		delete(additionalProperties, "warp_pr_link")
		delete(additionalProperties, "warp_pr_runner")
		delete(additionalProperties, "warp_status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsWorkflow struct {
	value *CommonsWorkflow
	isSet bool
}

func (v NullableCommonsWorkflow) Get() *CommonsWorkflow {
	return v.value
}

func (v *NullableCommonsWorkflow) Set(val *CommonsWorkflow) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsWorkflow) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsWorkflow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsWorkflow(val *CommonsWorkflow) *NullableCommonsWorkflow {
	return &NullableCommonsWorkflow{value: val, isSet: true}
}

func (v NullableCommonsWorkflow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsWorkflow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


