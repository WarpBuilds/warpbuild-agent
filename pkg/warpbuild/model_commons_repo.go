/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsRepo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsRepo{}

// CommonsRepo struct for CommonsRepo
type CommonsRepo struct {
	AccountID *string `json:"AccountID,omitempty"`
	CreatedAt *string `json:"CreatedAt,omitempty"`
	DefaultBranch *string `json:"DefaultBranch,omitempty"`
	DisplayName *string `json:"DisplayName,omitempty"`
	IntegrationID *string `json:"IntegrationID,omitempty"`
	SSHURL *string `json:"SSHURL,omitempty"`
	UpdatedAt *string `json:"UpdatedAt,omitempty"`
	WebURL *string `json:"WebURL,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Owner *string `json:"owner,omitempty"`
	Provider *string `json:"provider,omitempty"`
	VcsId *string `json:"vcs_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsRepo CommonsRepo

// NewCommonsRepo instantiates a new CommonsRepo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsRepo() *CommonsRepo {
	this := CommonsRepo{}
	return &this
}

// NewCommonsRepoWithDefaults instantiates a new CommonsRepo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsRepoWithDefaults() *CommonsRepo {
	this := CommonsRepo{}
	return &this
}

// GetAccountID returns the AccountID field value if set, zero value otherwise.
func (o *CommonsRepo) GetAccountID() string {
	if o == nil || IsNil(o.AccountID) {
		var ret string
		return ret
	}
	return *o.AccountID
}

// GetAccountIDOk returns a tuple with the AccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetAccountIDOk() (*string, bool) {
	if o == nil || IsNil(o.AccountID) {
		return nil, false
	}
	return o.AccountID, true
}

// HasAccountID returns a boolean if a field has been set.
func (o *CommonsRepo) HasAccountID() bool {
	if o != nil && !IsNil(o.AccountID) {
		return true
	}

	return false
}

// SetAccountID gets a reference to the given string and assigns it to the AccountID field.
func (o *CommonsRepo) SetAccountID(v string) {
	o.AccountID = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *CommonsRepo) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *CommonsRepo) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *CommonsRepo) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDefaultBranch returns the DefaultBranch field value if set, zero value otherwise.
func (o *CommonsRepo) GetDefaultBranch() string {
	if o == nil || IsNil(o.DefaultBranch) {
		var ret string
		return ret
	}
	return *o.DefaultBranch
}

// GetDefaultBranchOk returns a tuple with the DefaultBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetDefaultBranchOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultBranch) {
		return nil, false
	}
	return o.DefaultBranch, true
}

// HasDefaultBranch returns a boolean if a field has been set.
func (o *CommonsRepo) HasDefaultBranch() bool {
	if o != nil && !IsNil(o.DefaultBranch) {
		return true
	}

	return false
}

// SetDefaultBranch gets a reference to the given string and assigns it to the DefaultBranch field.
func (o *CommonsRepo) SetDefaultBranch(v string) {
	o.DefaultBranch = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CommonsRepo) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CommonsRepo) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CommonsRepo) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetIntegrationID returns the IntegrationID field value if set, zero value otherwise.
func (o *CommonsRepo) GetIntegrationID() string {
	if o == nil || IsNil(o.IntegrationID) {
		var ret string
		return ret
	}
	return *o.IntegrationID
}

// GetIntegrationIDOk returns a tuple with the IntegrationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetIntegrationIDOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrationID) {
		return nil, false
	}
	return o.IntegrationID, true
}

// HasIntegrationID returns a boolean if a field has been set.
func (o *CommonsRepo) HasIntegrationID() bool {
	if o != nil && !IsNil(o.IntegrationID) {
		return true
	}

	return false
}

// SetIntegrationID gets a reference to the given string and assigns it to the IntegrationID field.
func (o *CommonsRepo) SetIntegrationID(v string) {
	o.IntegrationID = &v
}

// GetSSHURL returns the SSHURL field value if set, zero value otherwise.
func (o *CommonsRepo) GetSSHURL() string {
	if o == nil || IsNil(o.SSHURL) {
		var ret string
		return ret
	}
	return *o.SSHURL
}

// GetSSHURLOk returns a tuple with the SSHURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetSSHURLOk() (*string, bool) {
	if o == nil || IsNil(o.SSHURL) {
		return nil, false
	}
	return o.SSHURL, true
}

// HasSSHURL returns a boolean if a field has been set.
func (o *CommonsRepo) HasSSHURL() bool {
	if o != nil && !IsNil(o.SSHURL) {
		return true
	}

	return false
}

// SetSSHURL gets a reference to the given string and assigns it to the SSHURL field.
func (o *CommonsRepo) SetSSHURL(v string) {
	o.SSHURL = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CommonsRepo) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CommonsRepo) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *CommonsRepo) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetWebURL returns the WebURL field value if set, zero value otherwise.
func (o *CommonsRepo) GetWebURL() string {
	if o == nil || IsNil(o.WebURL) {
		var ret string
		return ret
	}
	return *o.WebURL
}

// GetWebURLOk returns a tuple with the WebURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetWebURLOk() (*string, bool) {
	if o == nil || IsNil(o.WebURL) {
		return nil, false
	}
	return o.WebURL, true
}

// HasWebURL returns a boolean if a field has been set.
func (o *CommonsRepo) HasWebURL() bool {
	if o != nil && !IsNil(o.WebURL) {
		return true
	}

	return false
}

// SetWebURL gets a reference to the given string and assigns it to the WebURL field.
func (o *CommonsRepo) SetWebURL(v string) {
	o.WebURL = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonsRepo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonsRepo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonsRepo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CommonsRepo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CommonsRepo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CommonsRepo) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *CommonsRepo) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *CommonsRepo) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *CommonsRepo) SetOwner(v string) {
	o.Owner = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *CommonsRepo) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *CommonsRepo) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *CommonsRepo) SetProvider(v string) {
	o.Provider = &v
}

// GetVcsId returns the VcsId field value if set, zero value otherwise.
func (o *CommonsRepo) GetVcsId() string {
	if o == nil || IsNil(o.VcsId) {
		var ret string
		return ret
	}
	return *o.VcsId
}

// GetVcsIdOk returns a tuple with the VcsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRepo) GetVcsIdOk() (*string, bool) {
	if o == nil || IsNil(o.VcsId) {
		return nil, false
	}
	return o.VcsId, true
}

// HasVcsId returns a boolean if a field has been set.
func (o *CommonsRepo) HasVcsId() bool {
	if o != nil && !IsNil(o.VcsId) {
		return true
	}

	return false
}

// SetVcsId gets a reference to the given string and assigns it to the VcsId field.
func (o *CommonsRepo) SetVcsId(v string) {
	o.VcsId = &v
}

func (o CommonsRepo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsRepo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountID) {
		toSerialize["AccountID"] = o.AccountID
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["CreatedAt"] = o.CreatedAt
	}
	if !IsNil(o.DefaultBranch) {
		toSerialize["DefaultBranch"] = o.DefaultBranch
	}
	if !IsNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !IsNil(o.IntegrationID) {
		toSerialize["IntegrationID"] = o.IntegrationID
	}
	if !IsNil(o.SSHURL) {
		toSerialize["SSHURL"] = o.SSHURL
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.WebURL) {
		toSerialize["WebURL"] = o.WebURL
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.VcsId) {
		toSerialize["vcs_id"] = o.VcsId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsRepo) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsRepo := _CommonsRepo{}

	err = json.Unmarshal(bytes, &varCommonsRepo)

	if err != nil {
		return err
	}

	*o = CommonsRepo(varCommonsRepo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "AccountID")
		delete(additionalProperties, "CreatedAt")
		delete(additionalProperties, "DefaultBranch")
		delete(additionalProperties, "DisplayName")
		delete(additionalProperties, "IntegrationID")
		delete(additionalProperties, "SSHURL")
		delete(additionalProperties, "UpdatedAt")
		delete(additionalProperties, "WebURL")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "owner")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "vcs_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsRepo struct {
	value *CommonsRepo
	isSet bool
}

func (v NullableCommonsRepo) Get() *CommonsRepo {
	return v.value
}

func (v *NullableCommonsRepo) Set(val *CommonsRepo) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsRepo) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsRepo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsRepo(val *CommonsRepo) *NullableCommonsRepo {
	return &NullableCommonsRepo{value: val, isSet: true}
}

func (v NullableCommonsRepo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsRepo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


