/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsInternalPostUsageInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsInternalPostUsageInput{}

// CommonsInternalPostUsageInput struct for CommonsInternalPostUsageInput
type CommonsInternalPostUsageInput struct {
	PricingId *string `json:"pricing_id,omitempty"`
	ProductCategory *string `json:"product_category,omitempty"`
	ProductId *string `json:"product_id,omitempty"`
	ProductName *string `json:"product_name,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
	TransactionId *string `json:"transaction_id,omitempty"`
	UsageCount *int32 `json:"usage_count,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsInternalPostUsageInput CommonsInternalPostUsageInput

// NewCommonsInternalPostUsageInput instantiates a new CommonsInternalPostUsageInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsInternalPostUsageInput() *CommonsInternalPostUsageInput {
	this := CommonsInternalPostUsageInput{}
	return &this
}

// NewCommonsInternalPostUsageInputWithDefaults instantiates a new CommonsInternalPostUsageInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsInternalPostUsageInputWithDefaults() *CommonsInternalPostUsageInput {
	this := CommonsInternalPostUsageInput{}
	return &this
}

// GetPricingId returns the PricingId field value if set, zero value otherwise.
func (o *CommonsInternalPostUsageInput) GetPricingId() string {
	if o == nil || IsNil(o.PricingId) {
		var ret string
		return ret
	}
	return *o.PricingId
}

// GetPricingIdOk returns a tuple with the PricingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInternalPostUsageInput) GetPricingIdOk() (*string, bool) {
	if o == nil || IsNil(o.PricingId) {
		return nil, false
	}
	return o.PricingId, true
}

// HasPricingId returns a boolean if a field has been set.
func (o *CommonsInternalPostUsageInput) HasPricingId() bool {
	if o != nil && !IsNil(o.PricingId) {
		return true
	}

	return false
}

// SetPricingId gets a reference to the given string and assigns it to the PricingId field.
func (o *CommonsInternalPostUsageInput) SetPricingId(v string) {
	o.PricingId = &v
}

// GetProductCategory returns the ProductCategory field value if set, zero value otherwise.
func (o *CommonsInternalPostUsageInput) GetProductCategory() string {
	if o == nil || IsNil(o.ProductCategory) {
		var ret string
		return ret
	}
	return *o.ProductCategory
}

// GetProductCategoryOk returns a tuple with the ProductCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInternalPostUsageInput) GetProductCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCategory) {
		return nil, false
	}
	return o.ProductCategory, true
}

// HasProductCategory returns a boolean if a field has been set.
func (o *CommonsInternalPostUsageInput) HasProductCategory() bool {
	if o != nil && !IsNil(o.ProductCategory) {
		return true
	}

	return false
}

// SetProductCategory gets a reference to the given string and assigns it to the ProductCategory field.
func (o *CommonsInternalPostUsageInput) SetProductCategory(v string) {
	o.ProductCategory = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *CommonsInternalPostUsageInput) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInternalPostUsageInput) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *CommonsInternalPostUsageInput) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *CommonsInternalPostUsageInput) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *CommonsInternalPostUsageInput) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInternalPostUsageInput) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *CommonsInternalPostUsageInput) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *CommonsInternalPostUsageInput) SetProductName(v string) {
	o.ProductName = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *CommonsInternalPostUsageInput) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInternalPostUsageInput) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CommonsInternalPostUsageInput) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *CommonsInternalPostUsageInput) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *CommonsInternalPostUsageInput) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInternalPostUsageInput) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *CommonsInternalPostUsageInput) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *CommonsInternalPostUsageInput) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetUsageCount returns the UsageCount field value if set, zero value otherwise.
func (o *CommonsInternalPostUsageInput) GetUsageCount() int32 {
	if o == nil || IsNil(o.UsageCount) {
		var ret int32
		return ret
	}
	return *o.UsageCount
}

// GetUsageCountOk returns a tuple with the UsageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsInternalPostUsageInput) GetUsageCountOk() (*int32, bool) {
	if o == nil || IsNil(o.UsageCount) {
		return nil, false
	}
	return o.UsageCount, true
}

// HasUsageCount returns a boolean if a field has been set.
func (o *CommonsInternalPostUsageInput) HasUsageCount() bool {
	if o != nil && !IsNil(o.UsageCount) {
		return true
	}

	return false
}

// SetUsageCount gets a reference to the given int32 and assigns it to the UsageCount field.
func (o *CommonsInternalPostUsageInput) SetUsageCount(v int32) {
	o.UsageCount = &v
}

func (o CommonsInternalPostUsageInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsInternalPostUsageInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PricingId) {
		toSerialize["pricing_id"] = o.PricingId
	}
	if !IsNil(o.ProductCategory) {
		toSerialize["product_category"] = o.ProductCategory
	}
	if !IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !IsNil(o.ProductName) {
		toSerialize["product_name"] = o.ProductName
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transaction_id"] = o.TransactionId
	}
	if !IsNil(o.UsageCount) {
		toSerialize["usage_count"] = o.UsageCount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsInternalPostUsageInput) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsInternalPostUsageInput := _CommonsInternalPostUsageInput{}

	if err = json.Unmarshal(bytes, &varCommonsInternalPostUsageInput); err == nil {
		*o = CommonsInternalPostUsageInput(varCommonsInternalPostUsageInput)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "pricing_id")
		delete(additionalProperties, "product_category")
		delete(additionalProperties, "product_id")
		delete(additionalProperties, "product_name")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "transaction_id")
		delete(additionalProperties, "usage_count")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsInternalPostUsageInput struct {
	value *CommonsInternalPostUsageInput
	isSet bool
}

func (v NullableCommonsInternalPostUsageInput) Get() *CommonsInternalPostUsageInput {
	return v.value
}

func (v *NullableCommonsInternalPostUsageInput) Set(val *CommonsInternalPostUsageInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsInternalPostUsageInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsInternalPostUsageInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsInternalPostUsageInput(val *CommonsInternalPostUsageInput) *NullableCommonsInternalPostUsageInput {
	return &NullableCommonsInternalPostUsageInput{value: val, isSet: true}
}

func (v NullableCommonsInternalPostUsageInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsInternalPostUsageInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


