/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsUpdateRunnerImageVersionInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsUpdateRunnerImageVersionInput{}

// CommonsUpdateRunnerImageVersionInput struct for CommonsUpdateRunnerImageVersionInput
type CommonsUpdateRunnerImageVersionInput struct {
	ContainerRunnerImageVersion *CommonsUpdateContainerRunnerImageVersion `json:"container_runner_image_version,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsUpdateRunnerImageVersionInput CommonsUpdateRunnerImageVersionInput

// NewCommonsUpdateRunnerImageVersionInput instantiates a new CommonsUpdateRunnerImageVersionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsUpdateRunnerImageVersionInput() *CommonsUpdateRunnerImageVersionInput {
	this := CommonsUpdateRunnerImageVersionInput{}
	return &this
}

// NewCommonsUpdateRunnerImageVersionInputWithDefaults instantiates a new CommonsUpdateRunnerImageVersionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsUpdateRunnerImageVersionInputWithDefaults() *CommonsUpdateRunnerImageVersionInput {
	this := CommonsUpdateRunnerImageVersionInput{}
	return &this
}

// GetContainerRunnerImageVersion returns the ContainerRunnerImageVersion field value if set, zero value otherwise.
func (o *CommonsUpdateRunnerImageVersionInput) GetContainerRunnerImageVersion() CommonsUpdateContainerRunnerImageVersion {
	if o == nil || IsNil(o.ContainerRunnerImageVersion) {
		var ret CommonsUpdateContainerRunnerImageVersion
		return ret
	}
	return *o.ContainerRunnerImageVersion
}

// GetContainerRunnerImageVersionOk returns a tuple with the ContainerRunnerImageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsUpdateRunnerImageVersionInput) GetContainerRunnerImageVersionOk() (*CommonsUpdateContainerRunnerImageVersion, bool) {
	if o == nil || IsNil(o.ContainerRunnerImageVersion) {
		return nil, false
	}
	return o.ContainerRunnerImageVersion, true
}

// HasContainerRunnerImageVersion returns a boolean if a field has been set.
func (o *CommonsUpdateRunnerImageVersionInput) HasContainerRunnerImageVersion() bool {
	if o != nil && !IsNil(o.ContainerRunnerImageVersion) {
		return true
	}

	return false
}

// SetContainerRunnerImageVersion gets a reference to the given CommonsUpdateContainerRunnerImageVersion and assigns it to the ContainerRunnerImageVersion field.
func (o *CommonsUpdateRunnerImageVersionInput) SetContainerRunnerImageVersion(v CommonsUpdateContainerRunnerImageVersion) {
	o.ContainerRunnerImageVersion = &v
}

func (o CommonsUpdateRunnerImageVersionInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsUpdateRunnerImageVersionInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContainerRunnerImageVersion) {
		toSerialize["container_runner_image_version"] = o.ContainerRunnerImageVersion
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsUpdateRunnerImageVersionInput) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsUpdateRunnerImageVersionInput := _CommonsUpdateRunnerImageVersionInput{}

	err = json.Unmarshal(bytes, &varCommonsUpdateRunnerImageVersionInput)

	if err != nil {
		return err
	}

	*o = CommonsUpdateRunnerImageVersionInput(varCommonsUpdateRunnerImageVersionInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "container_runner_image_version")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsUpdateRunnerImageVersionInput struct {
	value *CommonsUpdateRunnerImageVersionInput
	isSet bool
}

func (v NullableCommonsUpdateRunnerImageVersionInput) Get() *CommonsUpdateRunnerImageVersionInput {
	return v.value
}

func (v *NullableCommonsUpdateRunnerImageVersionInput) Set(val *CommonsUpdateRunnerImageVersionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsUpdateRunnerImageVersionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsUpdateRunnerImageVersionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsUpdateRunnerImageVersionInput(val *CommonsUpdateRunnerImageVersionInput) *NullableCommonsUpdateRunnerImageVersionInput {
	return &NullableCommonsUpdateRunnerImageVersionInput{value: val, isSet: true}
}

func (v NullableCommonsUpdateRunnerImageVersionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsUpdateRunnerImageVersionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


