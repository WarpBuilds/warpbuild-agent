/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsCreateRunnerImagePullSecretInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsCreateRunnerImagePullSecretInput{}

// CommonsCreateRunnerImagePullSecretInput struct for CommonsCreateRunnerImagePullSecretInput
type CommonsCreateRunnerImagePullSecretInput struct {
	Alias string `json:"alias"`
	Aws *CommonsRunnerImagePullSecretAWS `json:"aws,omitempty"`
	DockerCredentials *CommonsRunnerImagePullSecretDockerCredentials `json:"docker_credentials,omitempty"`
	Type string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _CommonsCreateRunnerImagePullSecretInput CommonsCreateRunnerImagePullSecretInput

// NewCommonsCreateRunnerImagePullSecretInput instantiates a new CommonsCreateRunnerImagePullSecretInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsCreateRunnerImagePullSecretInput(alias string, type_ string) *CommonsCreateRunnerImagePullSecretInput {
	this := CommonsCreateRunnerImagePullSecretInput{}
	this.Alias = alias
	this.Type = type_
	return &this
}

// NewCommonsCreateRunnerImagePullSecretInputWithDefaults instantiates a new CommonsCreateRunnerImagePullSecretInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsCreateRunnerImagePullSecretInputWithDefaults() *CommonsCreateRunnerImagePullSecretInput {
	this := CommonsCreateRunnerImagePullSecretInput{}
	return &this
}

// GetAlias returns the Alias field value
func (o *CommonsCreateRunnerImagePullSecretInput) GetAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Alias
}

// GetAliasOk returns a tuple with the Alias field value
// and a boolean to check if the value has been set.
func (o *CommonsCreateRunnerImagePullSecretInput) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Alias, true
}

// SetAlias sets field value
func (o *CommonsCreateRunnerImagePullSecretInput) SetAlias(v string) {
	o.Alias = v
}

// GetAws returns the Aws field value if set, zero value otherwise.
func (o *CommonsCreateRunnerImagePullSecretInput) GetAws() CommonsRunnerImagePullSecretAWS {
	if o == nil || IsNil(o.Aws) {
		var ret CommonsRunnerImagePullSecretAWS
		return ret
	}
	return *o.Aws
}

// GetAwsOk returns a tuple with the Aws field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCreateRunnerImagePullSecretInput) GetAwsOk() (*CommonsRunnerImagePullSecretAWS, bool) {
	if o == nil || IsNil(o.Aws) {
		return nil, false
	}
	return o.Aws, true
}

// HasAws returns a boolean if a field has been set.
func (o *CommonsCreateRunnerImagePullSecretInput) HasAws() bool {
	if o != nil && !IsNil(o.Aws) {
		return true
	}

	return false
}

// SetAws gets a reference to the given CommonsRunnerImagePullSecretAWS and assigns it to the Aws field.
func (o *CommonsCreateRunnerImagePullSecretInput) SetAws(v CommonsRunnerImagePullSecretAWS) {
	o.Aws = &v
}

// GetDockerCredentials returns the DockerCredentials field value if set, zero value otherwise.
func (o *CommonsCreateRunnerImagePullSecretInput) GetDockerCredentials() CommonsRunnerImagePullSecretDockerCredentials {
	if o == nil || IsNil(o.DockerCredentials) {
		var ret CommonsRunnerImagePullSecretDockerCredentials
		return ret
	}
	return *o.DockerCredentials
}

// GetDockerCredentialsOk returns a tuple with the DockerCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCreateRunnerImagePullSecretInput) GetDockerCredentialsOk() (*CommonsRunnerImagePullSecretDockerCredentials, bool) {
	if o == nil || IsNil(o.DockerCredentials) {
		return nil, false
	}
	return o.DockerCredentials, true
}

// HasDockerCredentials returns a boolean if a field has been set.
func (o *CommonsCreateRunnerImagePullSecretInput) HasDockerCredentials() bool {
	if o != nil && !IsNil(o.DockerCredentials) {
		return true
	}

	return false
}

// SetDockerCredentials gets a reference to the given CommonsRunnerImagePullSecretDockerCredentials and assigns it to the DockerCredentials field.
func (o *CommonsCreateRunnerImagePullSecretInput) SetDockerCredentials(v CommonsRunnerImagePullSecretDockerCredentials) {
	o.DockerCredentials = &v
}

// GetType returns the Type field value
func (o *CommonsCreateRunnerImagePullSecretInput) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CommonsCreateRunnerImagePullSecretInput) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CommonsCreateRunnerImagePullSecretInput) SetType(v string) {
	o.Type = v
}

func (o CommonsCreateRunnerImagePullSecretInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsCreateRunnerImagePullSecretInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alias"] = o.Alias
	if !IsNil(o.Aws) {
		toSerialize["aws"] = o.Aws
	}
	if !IsNil(o.DockerCredentials) {
		toSerialize["docker_credentials"] = o.DockerCredentials
	}
	toSerialize["type"] = o.Type

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsCreateRunnerImagePullSecretInput) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsCreateRunnerImagePullSecretInput := _CommonsCreateRunnerImagePullSecretInput{}

	err = json.Unmarshal(bytes, &varCommonsCreateRunnerImagePullSecretInput)

	if err != nil {
		return err
	}

	*o = CommonsCreateRunnerImagePullSecretInput(varCommonsCreateRunnerImagePullSecretInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "alias")
		delete(additionalProperties, "aws")
		delete(additionalProperties, "docker_credentials")
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsCreateRunnerImagePullSecretInput struct {
	value *CommonsCreateRunnerImagePullSecretInput
	isSet bool
}

func (v NullableCommonsCreateRunnerImagePullSecretInput) Get() *CommonsCreateRunnerImagePullSecretInput {
	return v.value
}

func (v *NullableCommonsCreateRunnerImagePullSecretInput) Set(val *CommonsCreateRunnerImagePullSecretInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsCreateRunnerImagePullSecretInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsCreateRunnerImagePullSecretInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsCreateRunnerImagePullSecretInput(val *CommonsCreateRunnerImagePullSecretInput) *NullableCommonsCreateRunnerImagePullSecretInput {
	return &NullableCommonsCreateRunnerImagePullSecretInput{value: val, isSet: true}
}

func (v NullableCommonsCreateRunnerImagePullSecretInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsCreateRunnerImagePullSecretInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


