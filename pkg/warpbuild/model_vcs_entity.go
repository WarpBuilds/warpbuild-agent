/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the VCSEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VCSEntity{}

// VCSEntity struct for VCSEntity
type VCSEntity struct {
	// AccountID is the github account  TODO: AccountID should be group id in case of gitlab
	AccountId *string `json:"account_id,omitempty"`
	CommitId *string `json:"commit_id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	DisplayName string `json:"display_name"`
	EntityType string `json:"entity_type"`
	ExternalId string `json:"external_id"`
	IntegrationId *string `json:"integration_id,omitempty"`
	InternalId *string `json:"internal_id,omitempty"`
	Name string `json:"name"`
	Provider string `json:"provider"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	WebUrl *string `json:"web_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VCSEntity VCSEntity

// NewVCSEntity instantiates a new VCSEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVCSEntity(displayName string, entityType string, externalId string, name string, provider string) *VCSEntity {
	this := VCSEntity{}
	this.DisplayName = displayName
	this.EntityType = entityType
	this.ExternalId = externalId
	this.Name = name
	this.Provider = provider
	return &this
}

// NewVCSEntityWithDefaults instantiates a new VCSEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVCSEntityWithDefaults() *VCSEntity {
	this := VCSEntity{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *VCSEntity) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *VCSEntity) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *VCSEntity) SetAccountId(v string) {
	o.AccountId = &v
}

// GetCommitId returns the CommitId field value if set, zero value otherwise.
func (o *VCSEntity) GetCommitId() string {
	if o == nil || IsNil(o.CommitId) {
		var ret string
		return ret
	}
	return *o.CommitId
}

// GetCommitIdOk returns a tuple with the CommitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetCommitIdOk() (*string, bool) {
	if o == nil || IsNil(o.CommitId) {
		return nil, false
	}
	return o.CommitId, true
}

// HasCommitId returns a boolean if a field has been set.
func (o *VCSEntity) HasCommitId() bool {
	if o != nil && !IsNil(o.CommitId) {
		return true
	}

	return false
}

// SetCommitId gets a reference to the given string and assigns it to the CommitId field.
func (o *VCSEntity) SetCommitId(v string) {
	o.CommitId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VCSEntity) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VCSEntity) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *VCSEntity) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDisplayName returns the DisplayName field value
func (o *VCSEntity) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *VCSEntity) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetEntityType returns the EntityType field value
func (o *VCSEntity) GetEntityType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetEntityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntityType, true
}

// SetEntityType sets field value
func (o *VCSEntity) SetEntityType(v string) {
	o.EntityType = v
}

// GetExternalId returns the ExternalId field value
func (o *VCSEntity) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *VCSEntity) SetExternalId(v string) {
	o.ExternalId = v
}

// GetIntegrationId returns the IntegrationId field value if set, zero value otherwise.
func (o *VCSEntity) GetIntegrationId() string {
	if o == nil || IsNil(o.IntegrationId) {
		var ret string
		return ret
	}
	return *o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetIntegrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.IntegrationId) {
		return nil, false
	}
	return o.IntegrationId, true
}

// HasIntegrationId returns a boolean if a field has been set.
func (o *VCSEntity) HasIntegrationId() bool {
	if o != nil && !IsNil(o.IntegrationId) {
		return true
	}

	return false
}

// SetIntegrationId gets a reference to the given string and assigns it to the IntegrationId field.
func (o *VCSEntity) SetIntegrationId(v string) {
	o.IntegrationId = &v
}

// GetInternalId returns the InternalId field value if set, zero value otherwise.
func (o *VCSEntity) GetInternalId() string {
	if o == nil || IsNil(o.InternalId) {
		var ret string
		return ret
	}
	return *o.InternalId
}

// GetInternalIdOk returns a tuple with the InternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetInternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.InternalId) {
		return nil, false
	}
	return o.InternalId, true
}

// HasInternalId returns a boolean if a field has been set.
func (o *VCSEntity) HasInternalId() bool {
	if o != nil && !IsNil(o.InternalId) {
		return true
	}

	return false
}

// SetInternalId gets a reference to the given string and assigns it to the InternalId field.
func (o *VCSEntity) SetInternalId(v string) {
	o.InternalId = &v
}

// GetName returns the Name field value
func (o *VCSEntity) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VCSEntity) SetName(v string) {
	o.Name = v
}

// GetProvider returns the Provider field value
func (o *VCSEntity) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *VCSEntity) SetProvider(v string) {
	o.Provider = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VCSEntity) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VCSEntity) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *VCSEntity) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetWebUrl returns the WebUrl field value if set, zero value otherwise.
func (o *VCSEntity) GetWebUrl() string {
	if o == nil || IsNil(o.WebUrl) {
		var ret string
		return ret
	}
	return *o.WebUrl
}

// GetWebUrlOk returns a tuple with the WebUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCSEntity) GetWebUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebUrl) {
		return nil, false
	}
	return o.WebUrl, true
}

// HasWebUrl returns a boolean if a field has been set.
func (o *VCSEntity) HasWebUrl() bool {
	if o != nil && !IsNil(o.WebUrl) {
		return true
	}

	return false
}

// SetWebUrl gets a reference to the given string and assigns it to the WebUrl field.
func (o *VCSEntity) SetWebUrl(v string) {
	o.WebUrl = &v
}

func (o VCSEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VCSEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !IsNil(o.CommitId) {
		toSerialize["commit_id"] = o.CommitId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	toSerialize["display_name"] = o.DisplayName
	toSerialize["entity_type"] = o.EntityType
	toSerialize["external_id"] = o.ExternalId
	if !IsNil(o.IntegrationId) {
		toSerialize["integration_id"] = o.IntegrationId
	}
	if !IsNil(o.InternalId) {
		toSerialize["internal_id"] = o.InternalId
	}
	toSerialize["name"] = o.Name
	toSerialize["provider"] = o.Provider
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.WebUrl) {
		toSerialize["web_url"] = o.WebUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VCSEntity) UnmarshalJSON(bytes []byte) (err error) {
	varVCSEntity := _VCSEntity{}

	err = json.Unmarshal(bytes, &varVCSEntity)

	if err != nil {
		return err
	}

	*o = VCSEntity(varVCSEntity)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "commit_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "display_name")
		delete(additionalProperties, "entity_type")
		delete(additionalProperties, "external_id")
		delete(additionalProperties, "integration_id")
		delete(additionalProperties, "internal_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "provider")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "web_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVCSEntity struct {
	value *VCSEntity
	isSet bool
}

func (v NullableVCSEntity) Get() *VCSEntity {
	return v.value
}

func (v *NullableVCSEntity) Set(val *VCSEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableVCSEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableVCSEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVCSEntity(val *VCSEntity) *NullableVCSEntity {
	return &NullableVCSEntity{value: val, isSet: true}
}

func (v NullableVCSEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVCSEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


