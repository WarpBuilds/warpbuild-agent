/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsWarpbuildImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsWarpbuildImage{}

// CommonsWarpbuildImage struct for CommonsWarpbuildImage
type CommonsWarpbuildImage struct {
	CloudInitTemplate *string `json:"cloud_init_template,omitempty"`
	ImageUri *string `json:"image_uri,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsWarpbuildImage CommonsWarpbuildImage

// NewCommonsWarpbuildImage instantiates a new CommonsWarpbuildImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsWarpbuildImage() *CommonsWarpbuildImage {
	this := CommonsWarpbuildImage{}
	return &this
}

// NewCommonsWarpbuildImageWithDefaults instantiates a new CommonsWarpbuildImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsWarpbuildImageWithDefaults() *CommonsWarpbuildImage {
	this := CommonsWarpbuildImage{}
	return &this
}

// GetCloudInitTemplate returns the CloudInitTemplate field value if set, zero value otherwise.
func (o *CommonsWarpbuildImage) GetCloudInitTemplate() string {
	if o == nil || IsNil(o.CloudInitTemplate) {
		var ret string
		return ret
	}
	return *o.CloudInitTemplate
}

// GetCloudInitTemplateOk returns a tuple with the CloudInitTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWarpbuildImage) GetCloudInitTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.CloudInitTemplate) {
		return nil, false
	}
	return o.CloudInitTemplate, true
}

// HasCloudInitTemplate returns a boolean if a field has been set.
func (o *CommonsWarpbuildImage) HasCloudInitTemplate() bool {
	if o != nil && !IsNil(o.CloudInitTemplate) {
		return true
	}

	return false
}

// SetCloudInitTemplate gets a reference to the given string and assigns it to the CloudInitTemplate field.
func (o *CommonsWarpbuildImage) SetCloudInitTemplate(v string) {
	o.CloudInitTemplate = &v
}

// GetImageUri returns the ImageUri field value if set, zero value otherwise.
func (o *CommonsWarpbuildImage) GetImageUri() string {
	if o == nil || IsNil(o.ImageUri) {
		var ret string
		return ret
	}
	return *o.ImageUri
}

// GetImageUriOk returns a tuple with the ImageUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsWarpbuildImage) GetImageUriOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUri) {
		return nil, false
	}
	return o.ImageUri, true
}

// HasImageUri returns a boolean if a field has been set.
func (o *CommonsWarpbuildImage) HasImageUri() bool {
	if o != nil && !IsNil(o.ImageUri) {
		return true
	}

	return false
}

// SetImageUri gets a reference to the given string and assigns it to the ImageUri field.
func (o *CommonsWarpbuildImage) SetImageUri(v string) {
	o.ImageUri = &v
}

func (o CommonsWarpbuildImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsWarpbuildImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudInitTemplate) {
		toSerialize["cloud_init_template"] = o.CloudInitTemplate
	}
	if !IsNil(o.ImageUri) {
		toSerialize["image_uri"] = o.ImageUri
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsWarpbuildImage) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsWarpbuildImage := _CommonsWarpbuildImage{}

	err = json.Unmarshal(bytes, &varCommonsWarpbuildImage)

	if err != nil {
		return err
	}

	*o = CommonsWarpbuildImage(varCommonsWarpbuildImage)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "cloud_init_template")
		delete(additionalProperties, "image_uri")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsWarpbuildImage struct {
	value *CommonsWarpbuildImage
	isSet bool
}

func (v NullableCommonsWarpbuildImage) Get() *CommonsWarpbuildImage {
	return v.value
}

func (v *NullableCommonsWarpbuildImage) Set(val *CommonsWarpbuildImage) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsWarpbuildImage) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsWarpbuildImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsWarpbuildImage(val *CommonsWarpbuildImage) *NullableCommonsWarpbuildImage {
	return &NullableCommonsWarpbuildImage{value: val, isSet: true}
}

func (v NullableCommonsWarpbuildImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsWarpbuildImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


