/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsCoupon type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsCoupon{}

// CommonsCoupon struct for CommonsCoupon
type CommonsCoupon struct {
	AmountOff *int32 `json:"amount_off,omitempty"`
	Currency *string `json:"currency,omitempty"`
	DurationMonths *int32 `json:"duration_months,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	PercentOff *float32 `json:"percent_off,omitempty"`
	RedeemedAt *string `json:"redeemed_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsCoupon CommonsCoupon

// NewCommonsCoupon instantiates a new CommonsCoupon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsCoupon() *CommonsCoupon {
	this := CommonsCoupon{}
	return &this
}

// NewCommonsCouponWithDefaults instantiates a new CommonsCoupon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsCouponWithDefaults() *CommonsCoupon {
	this := CommonsCoupon{}
	return &this
}

// GetAmountOff returns the AmountOff field value if set, zero value otherwise.
func (o *CommonsCoupon) GetAmountOff() int32 {
	if o == nil || IsNil(o.AmountOff) {
		var ret int32
		return ret
	}
	return *o.AmountOff
}

// GetAmountOffOk returns a tuple with the AmountOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCoupon) GetAmountOffOk() (*int32, bool) {
	if o == nil || IsNil(o.AmountOff) {
		return nil, false
	}
	return o.AmountOff, true
}

// HasAmountOff returns a boolean if a field has been set.
func (o *CommonsCoupon) HasAmountOff() bool {
	if o != nil && !IsNil(o.AmountOff) {
		return true
	}

	return false
}

// SetAmountOff gets a reference to the given int32 and assigns it to the AmountOff field.
func (o *CommonsCoupon) SetAmountOff(v int32) {
	o.AmountOff = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *CommonsCoupon) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCoupon) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *CommonsCoupon) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *CommonsCoupon) SetCurrency(v string) {
	o.Currency = &v
}

// GetDurationMonths returns the DurationMonths field value if set, zero value otherwise.
func (o *CommonsCoupon) GetDurationMonths() int32 {
	if o == nil || IsNil(o.DurationMonths) {
		var ret int32
		return ret
	}
	return *o.DurationMonths
}

// GetDurationMonthsOk returns a tuple with the DurationMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCoupon) GetDurationMonthsOk() (*int32, bool) {
	if o == nil || IsNil(o.DurationMonths) {
		return nil, false
	}
	return o.DurationMonths, true
}

// HasDurationMonths returns a boolean if a field has been set.
func (o *CommonsCoupon) HasDurationMonths() bool {
	if o != nil && !IsNil(o.DurationMonths) {
		return true
	}

	return false
}

// SetDurationMonths gets a reference to the given int32 and assigns it to the DurationMonths field.
func (o *CommonsCoupon) SetDurationMonths(v int32) {
	o.DurationMonths = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CommonsCoupon) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCoupon) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CommonsCoupon) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CommonsCoupon) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CommonsCoupon) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCoupon) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CommonsCoupon) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CommonsCoupon) SetName(v string) {
	o.Name = &v
}

// GetPercentOff returns the PercentOff field value if set, zero value otherwise.
func (o *CommonsCoupon) GetPercentOff() float32 {
	if o == nil || IsNil(o.PercentOff) {
		var ret float32
		return ret
	}
	return *o.PercentOff
}

// GetPercentOffOk returns a tuple with the PercentOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCoupon) GetPercentOffOk() (*float32, bool) {
	if o == nil || IsNil(o.PercentOff) {
		return nil, false
	}
	return o.PercentOff, true
}

// HasPercentOff returns a boolean if a field has been set.
func (o *CommonsCoupon) HasPercentOff() bool {
	if o != nil && !IsNil(o.PercentOff) {
		return true
	}

	return false
}

// SetPercentOff gets a reference to the given float32 and assigns it to the PercentOff field.
func (o *CommonsCoupon) SetPercentOff(v float32) {
	o.PercentOff = &v
}

// GetRedeemedAt returns the RedeemedAt field value if set, zero value otherwise.
func (o *CommonsCoupon) GetRedeemedAt() string {
	if o == nil || IsNil(o.RedeemedAt) {
		var ret string
		return ret
	}
	return *o.RedeemedAt
}

// GetRedeemedAtOk returns a tuple with the RedeemedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsCoupon) GetRedeemedAtOk() (*string, bool) {
	if o == nil || IsNil(o.RedeemedAt) {
		return nil, false
	}
	return o.RedeemedAt, true
}

// HasRedeemedAt returns a boolean if a field has been set.
func (o *CommonsCoupon) HasRedeemedAt() bool {
	if o != nil && !IsNil(o.RedeemedAt) {
		return true
	}

	return false
}

// SetRedeemedAt gets a reference to the given string and assigns it to the RedeemedAt field.
func (o *CommonsCoupon) SetRedeemedAt(v string) {
	o.RedeemedAt = &v
}

func (o CommonsCoupon) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsCoupon) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmountOff) {
		toSerialize["amount_off"] = o.AmountOff
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.DurationMonths) {
		toSerialize["duration_months"] = o.DurationMonths
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PercentOff) {
		toSerialize["percent_off"] = o.PercentOff
	}
	if !IsNil(o.RedeemedAt) {
		toSerialize["redeemed_at"] = o.RedeemedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsCoupon) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsCoupon := _CommonsCoupon{}

	err = json.Unmarshal(bytes, &varCommonsCoupon)

	if err != nil {
		return err
	}

	*o = CommonsCoupon(varCommonsCoupon)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "amount_off")
		delete(additionalProperties, "currency")
		delete(additionalProperties, "duration_months")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "percent_off")
		delete(additionalProperties, "redeemed_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsCoupon struct {
	value *CommonsCoupon
	isSet bool
}

func (v NullableCommonsCoupon) Get() *CommonsCoupon {
	return v.value
}

func (v *NullableCommonsCoupon) Set(val *CommonsCoupon) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsCoupon) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsCoupon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsCoupon(val *CommonsCoupon) *NullableCommonsCoupon {
	return &NullableCommonsCoupon{value: val, isSet: true}
}

func (v NullableCommonsCoupon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsCoupon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


