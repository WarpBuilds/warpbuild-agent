/*
Warp Builds API Docs

This is the docs for warp builds api for argonaut

API version: 0.4.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package warpbuild

import (
	"encoding/json"
)

// checks if the CommonsRateCalculationInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonsRateCalculationInput{}

// CommonsRateCalculationInput struct for CommonsRateCalculationInput
type CommonsRateCalculationInput struct {
	Configuration *CommonsRunnerSetConfiguration `json:"configuration,omitempty"`
	ProductType *string `json:"product_type,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CommonsRateCalculationInput CommonsRateCalculationInput

// NewCommonsRateCalculationInput instantiates a new CommonsRateCalculationInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonsRateCalculationInput() *CommonsRateCalculationInput {
	this := CommonsRateCalculationInput{}
	return &this
}

// NewCommonsRateCalculationInputWithDefaults instantiates a new CommonsRateCalculationInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonsRateCalculationInputWithDefaults() *CommonsRateCalculationInput {
	this := CommonsRateCalculationInput{}
	return &this
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *CommonsRateCalculationInput) GetConfiguration() CommonsRunnerSetConfiguration {
	if o == nil || IsNil(o.Configuration) {
		var ret CommonsRunnerSetConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRateCalculationInput) GetConfigurationOk() (*CommonsRunnerSetConfiguration, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *CommonsRateCalculationInput) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given CommonsRunnerSetConfiguration and assigns it to the Configuration field.
func (o *CommonsRateCalculationInput) SetConfiguration(v CommonsRunnerSetConfiguration) {
	o.Configuration = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *CommonsRateCalculationInput) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonsRateCalculationInput) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *CommonsRateCalculationInput) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *CommonsRateCalculationInput) SetProductType(v string) {
	o.ProductType = &v
}

func (o CommonsRateCalculationInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonsRateCalculationInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.ProductType) {
		toSerialize["product_type"] = o.ProductType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CommonsRateCalculationInput) UnmarshalJSON(bytes []byte) (err error) {
	varCommonsRateCalculationInput := _CommonsRateCalculationInput{}

	if err = json.Unmarshal(bytes, &varCommonsRateCalculationInput); err == nil {
		*o = CommonsRateCalculationInput(varCommonsRateCalculationInput)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "configuration")
		delete(additionalProperties, "product_type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCommonsRateCalculationInput struct {
	value *CommonsRateCalculationInput
	isSet bool
}

func (v NullableCommonsRateCalculationInput) Get() *CommonsRateCalculationInput {
	return v.value
}

func (v *NullableCommonsRateCalculationInput) Set(val *CommonsRateCalculationInput) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonsRateCalculationInput) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonsRateCalculationInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonsRateCalculationInput(val *CommonsRateCalculationInput) *NullableCommonsRateCalculationInput {
	return &NullableCommonsRateCalculationInput{value: val, isSet: true}
}

func (v NullableCommonsRateCalculationInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonsRateCalculationInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


