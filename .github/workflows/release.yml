name: Release

on:
  push:
    branches:
      - prashant-warp-313
    tags:
      - "*"

jobs:
  goreleaser:
    runs-on: warp-ubuntu-latest-x64-8x
    # Only run if a tag is pushed
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21" # Replace with your Go version

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "latest"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  goreleaser-prerelease:
    runs-on: warp-ubuntu-latest-x64-16x
    # Only run if push to branch
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/')
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21" # Replace with your Go version

      - name: Get short commit hash
        id: get_short_commit
        run: echo "::set-output name=short_commit::$(git rev-parse --short HEAD)"

      # - name: Create GitHub release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref_name }}-${{ steps.get_short_commit.outputs.short_commit }}-warpbuild-agent
      #     release_name: ${{ github.ref_name }}-${{ steps.get_short_commit.outputs.short_commit }}-warpbuild-agent
      #     prerelease: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "latest"
          args: release --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List all dist files
        run: ls -l dist

      - name: Upload artifacts
        # uses: actions/upload-release-asset@v1
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # with:
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          name: ${{ github.ref_name }}-${{ steps.get_short_commit.outputs.short_commit }}-warpbuild-agent
          tag_name: ${{ github.ref_name }}-${{ steps.get_short_commit.outputs.short_commit }}-warpbuild-agent
          prerelease: true
          # upload_url: ${{ steps.create_release.outputs.upload_url }}
          # asset_path: ./dist/*
          # asset_name: ${{ github.ref_name }}-${{ steps.get_short_commit.outputs.short_commit }}-warpbuild-agent
          # asset_content_type: application/octet-stream
