basePath: /api/v1
definitions:
  ApproveVCSIntegrationRequest:
    properties:
      code:
        type: string
      installation_id:
        type: string
    type: object
  AuthUserRequest:
    properties:
      code:
        type: string
      state:
        type: string
    required:
    - code
    - state
    type: object
  AuthUserResponse:
    properties:
      access_token:
        type: string
      is_different_org:
        type: boolean
      organization:
        $ref: '#/definitions/V1Organization'
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/V1User'
    required:
    - access_token
    - is_different_org
    - organization
    - refresh_token
    - user
    type: object
  CreateVCSIntegrationRequest:
    properties:
      additional_state:
        additionalProperties: true
        type: object
      application_callback_url:
        type: string
      application_id:
        type: string
      application_secret:
        type: string
      provider:
        type: string
      vcs_url:
        type: string
    required:
    - provider
    type: object
  ListWorkflowsResponse:
    properties:
      is_pulling:
        type: boolean
      last_synced_at:
        type: string
      workflows:
        items:
          $ref: '#/definitions/commons.Workflow'
        type: array
    type: object
  MeResponse:
    properties:
      extras:
        additionalProperties:
          type: string
        type: object
      organization:
        $ref: '#/definitions/V1Organization'
      user:
        $ref: '#/definitions/V1User'
      vcs_integration:
        $ref: '#/definitions/commons.VCSIntegrationLean'
    required:
    - organization
    - user
    - vcs_integration
    type: object
  SwitchOrganizationRequest:
    properties:
      organization_id:
        type: string
      refresh_token:
        type: string
    required:
    - organization_id
    - refresh_token
    type: object
  SwitchOrganizationResponse:
    properties:
      access_token:
        type: string
      organization:
        $ref: '#/definitions/V1Organization'
    required:
    - access_token
    - organization
    type: object
  TokenRefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  TokenRefreshResponse:
    properties:
      access_token:
        type: string
    required:
    - access_token
    type: object
  UpdateOrganizationRequest:
    properties:
      avatar_url:
        type: string
      name:
        type: string
    type: object
  UpdateVCSIntegrationRequest:
    properties:
      code:
        description: |-
          Code is

          - 'code' param in the callback from gitlab
        type: string
      id:
        type: string
      installation_id:
        description: |-
          InstallationID

          - 'installation_id' param from github installation
        type: string
      setup_action:
        description: |-
          SetupAction

          - 'setup_action' param from github installation
        type: string
    required:
    - id
    type: object
  UpdateVCSIntegrationResponse:
    properties:
      new_session:
        $ref: '#/definitions/AuthUserResponse'
      vcs_integration:
        $ref: '#/definitions/VCSIntegration'
    type: object
  V1ListUsersForOrganizationResult:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      id:
        type: integer
      joined_at:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  V1Organization:
    properties:
      avatar_url:
        type: string
      created_by:
        type: integer
      id:
        type: string
      name:
        type: string
    required:
    - created_by
    - id
    - name
    type: object
  V1User:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      login:
        type: string
      name:
        type: string
      signup_provider:
        type: string
      signup_provider_user_id:
        type: string
      updated_at:
        type: string
    type: object
  VCSEntity:
    properties:
      account_id:
        description: |-
          AccountID is the github account

          TODO: AccountID should be group id in case of gitlab
        type: string
      commit_id:
        type: string
      created_at:
        type: string
      display_name:
        type: string
      entity_type:
        type: string
      external_id:
        type: string
      integration_id:
        type: string
      internal_id:
        type: string
      name:
        type: string
      provider:
        type: string
      updated_at:
        type: string
      web_url:
        type: string
    required:
    - display_name
    - entity_type
    - external_id
    - name
    - provider
    type: object
  VCSIntegration:
    properties:
      account_id:
        type: string
      account_owner:
        type: string
      application_id:
        type: string
      configuration_url:
        description: |-
          ConfigurationURL

          Github
          - Is the installation's settings page on the github account.
          - This field is only populated after the github account is successfully connected.

          Gitlab
          - <no-equivalent-exists>
        type: string
      connection_status:
        type: string
      created_at:
        type: string
      id:
        type: string
      installation_id:
        type: string
      integration_type:
        type: string
      integration_url:
        type: string
      organization_id:
        type: string
      provider:
        type: string
      target_type:
        type: string
      updated_at:
        type: string
      vcs_url:
        type: string
    required:
    - connection_status
    - created_at
    - id
    - integration_type
    - integration_url
    - provider
    - target_type
    - updated_at
    type: object
  WarpBuildAPIError:
    properties:
      code:
        type: string
      description:
        type: string
      message:
        type: string
      sub_code:
        type: string
      sub_message:
        type: string
    type: object
  WarpWorkflowsRequest:
    properties:
      authorization:
        additionalProperties:
          type: string
        description: for github oauth flow
        type: object
      runner_id:
        type: string
      workflow_ids:
        items:
          type: string
        type: array
    required:
    - runner_id
    - workflow_ids
    type: object
  WarpWorkflowsResponse:
    properties:
      pr_link:
        type: string
    type: object
  commons.AddRunnerInstanceInput:
    properties:
      provider_id:
        type: string
      runner_set_id:
        type: string
      unique_external_id:
        type: string
    type: object
  commons.Balance:
    properties:
      id:
        type: string
      limit:
        type: number
      percentage:
        type: number
      used:
        type: number
    type: object
  commons.BalanceDetails:
    properties:
      free_balance:
        $ref: '#/definitions/commons.Balance'
      paid_balance:
        $ref: '#/definitions/commons.Balance'
    type: object
  commons.BannerMessage:
    properties:
      closeable:
        type: boolean
      id:
        type: integer
      message:
        type: string
      priority:
        type: integer
      type:
        type: string
    type: object
  commons.BillingInfo:
    properties:
      applied_coupon:
        $ref: '#/definitions/commons.Coupon'
      email:
        type: string
    type: object
  commons.CacheCostSummary:
    properties:
      cache_storage_size_bytes:
        type: number
      num_cache_operations:
        type: integer
      total_cost:
        type: number
    type: object
  commons.ContainerRunnerImage:
    properties:
      args:
        items:
          type: string
        type: array
      command:
        type: string
      entrypoint:
        type: string
      environment_variables:
        additionalProperties:
          type: string
        type: object
      image_repository:
        type: string
      image_tag:
        type: string
    type: object
  commons.ContainerRunnerImageUpdate:
    properties:
      image_tag:
        type: string
    type: object
  commons.ContainerRunnerImageVersion:
    properties:
      data_dir_size:
        type: string
      image_digest:
        type: string
      image_repository:
        type: string
      image_size:
        type: string
      image_tag:
        type: string
      image_uri:
        description: |-
          ImageURI is the full uri of the image.
          This can be used to download the image

          +OutputOnly
        type: string
      snapshot_id:
        type: string
      snapshot_size:
        type: string
      volume_id:
        type: string
      volume_size_gb:
        description: |-
          VolumeSizeGB is the size of the volume in GB.
          This is used when creating a snapshot out of the volume.

          This is rounded up to the nearest GiB.
        type: integer
    type: object
  commons.CostSummary:
    properties:
      cache:
        $ref: '#/definitions/commons.CacheCostSummary'
      runners:
        $ref: '#/definitions/commons.RunnersCostSummary'
    type: object
  commons.Coupon:
    properties:
      amount_off:
        type: integer
      currency:
        type: string
      duration_months:
        type: integer
      id:
        type: string
      name:
        type: string
      percent_off:
        type: number
      redeemed_at:
        type: string
    type: object
  commons.CreateRepoOptions:
    properties:
      description:
        type: string
      display_name:
        type: string
      integration_id:
        type: string
      is_private:
        type: boolean
      name:
        type: string
      owner:
        type: string
      should_auto_init:
        type: boolean
      upsert:
        type: boolean
    required:
    - integration_id
    - name
    - owner
    type: object
  commons.CreateRunnerImageInput:
    properties:
      alias:
        type: string
      arch:
        type: string
      container_runner_image:
        $ref: '#/definitions/commons.ContainerRunnerImage'
      hooks:
        items:
          $ref: '#/definitions/commons.RunnerImageHook'
        type: array
      os:
        type: string
      runner_image_pull_secret_id:
        type: string
      settings:
        $ref: '#/definitions/commons.RunnerImageSettings'
      type:
        type: string
    type: object
  commons.CreateRunnerImagePullSecretInput:
    properties:
      alias:
        type: string
      aws:
        $ref: '#/definitions/commons.RunnerImagePullSecretAWS'
      docker_credentials:
        $ref: '#/definitions/commons.RunnerImagePullSecretDockerCredentials'
      type:
        enum:
        - docker_credentials
        - aws
        type: string
    required:
    - alias
    - type
    type: object
  commons.DaywiseCost:
    properties:
      amount:
        type: number
      cumulative_amount:
        type: number
      date:
        type: string
    type: object
  commons.DaywiseRuntime:
    properties:
      date:
        type: string
      runtime_seconds:
        type: integer
    type: object
  commons.GetPresignedLogUploadURLOutput:
    properties:
      url:
        type: string
    type: object
  commons.GithubRunnerApplicationDetails:
    properties:
      jit:
        type: string
      labels:
        items:
          type: string
        type: array
      runner_name:
        type: string
      variables:
        additionalProperties:
          type: string
        type: object
    type: object
  commons.InstanceSku:
    properties:
      arch:
        enum:
        - x64
        - arm64
        type: string
      cores:
        type: integer
      display_name:
        type: string
      id:
        type: string
      memory:
        type: integer
      os:
        items:
          enum:
          - ubuntu
          - mac
          type: string
        type: array
      properties:
        $ref: '#/definitions/commons.InstanceSkuProperties'
    type: object
  commons.InstanceSkuProperties:
    properties:
      burstable_speed:
        type: number
      generation:
        type: string
      gpu:
        type: integer
      manufacturer:
        enum:
        - any
        - amd
        - intel
        - arm
        type: string
      performance_category:
        enum:
        - small
        - medium
        - large
        type: string
      performance_rating:
        type: integer
      speed:
        type: number
    type: object
  commons.InternalPostUsageInput:
    properties:
      pricing_id:
        type: string
      product_category:
        type: string
      product_id:
        type: string
      product_name:
        type: string
      timestamp:
        type: string
      transaction_id:
        type: string
      usage_count:
        type: integer
    type: object
  commons.InternalPostUsageOutput:
    properties:
      ledger_id:
        type: string
      usage_id:
        type: string
    type: object
  commons.JobRunnerInfo:
    properties:
      job_id:
        type: string
      runner_arch:
        type: string
      runner_host:
        type: string
      runner_id:
        type: string
      runner_name:
        type: string
      runner_os:
        type: string
      warp_added_at:
        type: string
      warp_removed_at:
        type: string
    type: object
  commons.LastJobProcessedMeta:
    properties:
      vcs_base_ref:
        type: string
      vcs_head_ref:
        type: string
      vcs_org:
        type: string
      vcs_ref:
        type: string
      vcs_ref_type:
        type: string
      vcs_repo:
        type: string
    type: object
  commons.ListRunnerImagePullSecretsOutput:
    properties:
      runner_image_pull_secrets:
        items:
          $ref: '#/definitions/commons.RunnerImagePullSecret'
        type: array
    type: object
  commons.ListRunnerImageVersionsOutput:
    properties:
      runner_image_versions:
        items:
          $ref: '#/definitions/commons.RunnerImageVersion'
        type: array
    type: object
  commons.ListRunnerImagesOutput:
    properties:
      runner_images:
        items:
          $ref: '#/definitions/commons.RunnerImage'
        type: array
    type: object
  commons.ListTokensOptions:
    properties:
      organization_id:
        type: string
      user_id:
        type: string
    type: object
  commons.ListUsersOptions:
    properties:
      page:
        type: integer
      per_page:
        type: integer
    type: object
  commons.ListUsersResponse:
    properties:
      next:
        type: integer
      page:
        type: integer
      per_page:
        type: integer
      total_pages:
        type: integer
      total_rows:
        type: integer
      users:
        items:
          $ref: '#/definitions/V1User'
        type: array
    type: object
  commons.ListVCSRunnerGroupsInput:
    properties:
      fetch_from_remote:
        type: boolean
      integration_id:
        type: string
      owner:
        type: string
    type: object
  commons.ListVCSRunnerGroupsResponse:
    properties:
      last_synced_at:
        type: string
      runner_groups:
        items:
          $ref: '#/definitions/commons.RunnerGroup'
        type: array
    type: object
  commons.Organization:
    properties:
      avatar_url:
        type: string
      created_by:
        type: integer
      id:
        type: string
      name:
        type: string
    type: object
  commons.PaymentDetails:
    properties:
      amount:
        type: integer
      billing_email:
        type: string
      currency:
        type: string
      method:
        type: string
      method_meta:
        type: string
      ref:
        type: string
      status:
        type: string
    type: object
  commons.PaymentMethod:
    properties:
      country_code:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      external_id:
        type: string
      iin:
        type: string
      is_default:
        type: boolean
      issuer:
        type: string
      last4:
        type: string
      name:
        type: string
      network:
        type: string
      type:
        type: string
    type: object
  commons.PostPaymentMethodSetupInput:
    properties:
      customer_id:
        type: string
      organization_id:
        type: string
      payment_method_id:
        type: string
      setup_intent_id:
        type: string
    type: object
  commons.ProviderInstanceSkuMapping:
    properties:
      id:
        type: string
      priority:
        type: integer
      provider:
        type: string
      provider_sku:
        type: string
      provider_sku_meta:
        $ref: '#/definitions/commons.ProviderSkuMeta'
      sku_id:
        type: string
    type: object
  commons.ProviderSkuMeta:
    type: object
  commons.RateCalculationInput:
    properties:
      configuration:
        $ref: '#/definitions/commons.RunnerSetConfiguration'
      product_type:
        enum:
        - runner
        - cache
        type: string
    type: object
  commons.RateCalculationOutput:
    properties:
      currency:
        type: string
      rate:
        type: number
    type: object
  commons.Repo:
    properties:
      account_id:
        type: string
      created_at:
        type: string
      default_branch:
        type: string
      display_name:
        type: string
      id:
        type: string
      integration_id:
        type: string
      name:
        type: string
      owner:
        type: string
      provider:
        type: string
      sshurl:
        type: string
      updated_at:
        type: string
      vcs_id:
        type: string
      web_url:
        type: string
    type: object
  commons.ReqCheckoutSession:
    properties:
      cancel_url:
        type: string
      success_url:
        type: string
    required:
    - cancel_url
    - success_url
    type: object
  commons.ReqSetupIntentInit:
    properties:
      cancel_url:
        type: string
      success_url:
        type: string
    required:
    - cancel_url
    - success_url
    type: object
  commons.ResCheckoutSession:
    properties:
      redirect_url:
        type: string
      session_id:
        type: string
    type: object
  commons.ResSetupIntentInit:
    properties:
      data: {}
      gateway:
        type: string
    type: object
  commons.Runner:
    properties:
      active:
        type: boolean
      configuration:
        $ref: '#/definitions/commons.RunnerSetConfiguration'
      created_at:
        type: string
      id:
        type: string
      labels:
        items:
          type: string
        type: array
      name:
        type: string
      organization_id:
        type: string
      provider_id:
        type: string
      stock_runner_id:
        type: string
      updated_at:
        type: string
      vcs_integration_id:
        type: string
    type: object
  commons.RunnerGroup:
    properties:
      id:
        type: integer
      inherited:
        type: boolean
      is_default:
        type: boolean
      name:
        type: string
      runners_url:
        type: string
      visibility:
        type: string
    type: object
  commons.RunnerImage:
    properties:
      alias:
        type: string
      arch:
        type: string
      container_runner_image:
        $ref: '#/definitions/commons.ContainerRunnerImage'
      created_at:
        type: string
      hooks:
        items:
          $ref: '#/definitions/commons.RunnerImageHook'
        type: array
      id:
        type: string
      organization_id:
        type: string
      os:
        type: string
      runner_image_pull_secret_id:
        type: string
      settings:
        $ref: '#/definitions/commons.RunnerImageSettings'
      status:
        type: string
      type:
        type: string
      updated_at:
        type: string
      warpbuild_image:
        $ref: '#/definitions/commons.WarpbuildImage'
        description: |-
          WarpbuildImage is the vm image used by warpbuild to run the jobs.
          This will have the info for internal images managed by warpbuild when
          type = 'warpbuild_managed'.

          In case of container images, this will have the base image of the VM on
          which the container is run.
    type: object
  commons.RunnerImageHook:
    properties:
      file:
        description: |-
          File is the base64 encoded file.
          This must be a shell script which is encoded in base64.
        type: string
      type:
        description: Type is the type of hook.
        type: string
    type: object
  commons.RunnerImagePullSecret:
    properties:
      alias:
        type: string
      aws:
        $ref: '#/definitions/commons.RunnerImagePullSecretAWS'
      created_at:
        type: string
      docker_credentials:
        $ref: '#/definitions/commons.RunnerImagePullSecretDockerCredentials'
      id:
        type: string
      organization_id:
        type: string
      type:
        enum:
        - docker_credentials
        - aws
        type: string
      updated_at:
        type: string
    required:
    - alias
    - created_at
    - id
    - organization_id
    - type
    - updated_at
    type: object
  commons.RunnerImagePullSecretAWS:
    properties:
      access_key_id:
        type: string
      aws_ecr_repository:
        description: |-
          AWSECRRepository is the short name of the ecr repository
          For example, if the complete uri for an image is
          <account_id>.dkr.ecr.<region>.amazonaws.com/acme/customrunners:v1.5.0
          The AWS ECR Repo is `acme/customrunners`
        type: string
      region:
        type: string
      secret_access_key:
        type: string
    type: object
  commons.RunnerImagePullSecretDockerCredentials:
    properties:
      host:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - host
    - password
    - username
    type: object
  commons.RunnerImageSettings:
    properties:
      purge_image_versions_offset:
        description: |-
          PurgeImageVersionsOffset is the number of versions to keep.
          Each time a new version is created, the oldest version is purged.
          Allowed values range [1, inf).

          Default value is 2.
        type: integer
    type: object
  commons.RunnerImageVersion:
    properties:
      arch:
        type: string
      container_runner_image:
        $ref: '#/definitions/commons.ContainerRunnerImageVersion'
      created_at:
        type: string
      external_id:
        description: ExternalID is the ID of the runner image version in the external
          system.
        type: string
      id:
        type: string
      organization_id:
        type: string
      os:
        type: string
      runner_image_id:
        type: string
      runner_image_pull_secret_id:
        type: string
      status:
        type: string
      type:
        type: string
      updated_at:
        type: string
      version_time_id:
        type: integer
    type: object
  commons.RunnerInfo:
    properties:
      arch:
        type: string
      host:
        type: string
      os:
        type: string
    type: object
  commons.RunnerInstance:
    properties:
      allocated_at:
        type: string
      allocation_for:
        type: string
      allocation_requested_at:
        type: string
      allocation_requested_event_at:
        type: string
      cluster:
        type: string
      configuration:
        $ref: '#/definitions/commons.RunnerInstanceConfiguration'
      created_at:
        type: string
      created_by:
        type: string
      external_id:
        type: string
      first_polled_at:
        type: string
      host:
        type: string
      id:
        type: string
      labels:
        items:
          type: string
        type: array
      last_job_processed_id:
        type: string
      last_job_processed_meta:
        $ref: '#/definitions/commons.LastJobProcessedMeta'
      last_polled_at:
        type: string
      organization_id:
        type: string
      provider_kind:
        type: string
      provider_kind_id:
        type: string
      purged_at:
        type: string
      purged_reason:
        type: string
      runner_for:
        type: string
      runner_set_id:
        type: string
      running_started_at:
        type: string
      status:
        type: string
      updated_at:
        type: string
      vcs_integration_id:
        type: string
    type: object
  commons.RunnerInstanceAllocationDetails:
    properties:
      gh_runner_application_details:
        $ref: '#/definitions/commons.GithubRunnerApplicationDetails'
      runner_application:
        enum:
        - github
        type: string
      runner_instance:
        $ref: '#/definitions/commons.RunnerInstance'
      status:
        enum:
        - unassigned
        - assigned
        - invalidated
        type: string
    type: object
  commons.RunnerInstanceConfiguration:
    properties:
      capacity_type:
        enum:
        - spot
        - ondemand
        type: string
      image:
        description: Refer
        type: string
      provider_sku_mapping:
        items:
          $ref: '#/definitions/commons.ProviderInstanceSkuMapping'
        type: array
      sku:
        $ref: '#/definitions/commons.InstanceSku'
      stock_runner_set_id:
        type: string
      storage:
        $ref: '#/definitions/commons.Storage'
    type: object
  commons.RunnerSetConfiguration:
    properties:
      capacity_type:
        enum:
        - spot
        - ondemand
        type: string
      image:
        type: string
      sku:
        type: string
      storage:
        $ref: '#/definitions/commons.Storage'
    type: object
  commons.RunnerSetDefaultGroup:
    properties:
      group_id:
        type: integer
    type: object
  commons.RunnersCostSummary:
    properties:
      arm64_billed_minutes:
        type: integer
      total_cost:
        type: number
      x64_billed_minutes:
        type: integer
    type: object
  commons.RunnersUsage:
    properties:
      daywise:
        items:
          $ref: '#/definitions/commons.DaywiseRuntime'
        type: array
      runnerwise:
        items:
          $ref: '#/definitions/commons.RunnerwiseRuntime'
        type: array
      total_job_count:
        type: integer
      total_runtime_seconds:
        type: integer
    type: object
  commons.RunnerwiseRuntime:
    properties:
      runner_id:
        type: string
      runtime_seconds:
        type: integer
    type: object
  commons.SetRunnerSetDefaultGroupInput:
    properties:
      group_id:
        type: integer
    type: object
  commons.SetupRunnerInput:
    properties:
      Active:
        type: boolean
      configuration:
        $ref: '#/definitions/commons.RunnerSetConfiguration'
      labels:
        items:
          type: string
        type: array
      name:
        type: string
      stock_runner_id:
        type: string
      vcs_integration_id:
        type: string
    type: object
  commons.Storage:
    properties:
      iops:
        type: integer
      size:
        type: integer
      throughput:
        type: integer
      tier:
        enum:
        - low
        - medium
        - high
        - extreme
        type: string
    type: object
  commons.SubscriptionDetails:
    properties:
      balance_details:
        $ref: '#/definitions/commons.BalanceDetails'
      created_at:
        type: string
      id:
        type: string
      last_payment_at:
        type: string
      last_payment_details:
        $ref: '#/definitions/commons.PaymentDetails'
      organization_id:
        type: string
      payment_methods:
        items:
          $ref: '#/definitions/commons.PaymentMethod'
        type: array
      pg_customer_id:
        type: string
      pg_subscription_id:
        type: string
      status:
        type: string
      subscribed_at:
        type: string
      upcoming_bill:
        $ref: '#/definitions/commons.UpcomingBill'
      updated_at:
        type: string
    type: object
  commons.UpcomingBill:
    properties:
      amount:
        type: integer
      currency:
        type: string
      date:
        type: string
    type: object
  commons.UpdateBillingInfoInput:
    properties:
      email:
        type: string
    type: object
  commons.UpdateContainerRunnerImageVersion:
    properties:
      data_dir_size:
        type: string
      image_digest:
        type: string
      image_size:
        description: |-
          ImageSize is the size of the image.
          Expected format: "4G"
        type: string
      snapshot_id:
        type: string
      snapshot_size:
        description: SnapshotSize is the size of the snapshot in human readable format.
        type: string
      volume_id:
        type: string
      volume_size_gb:
        description: |-
          VolumeSizeGB is the size of the volume in GB.
          This is used when creating a snapshot out of the volume.

          This is rounded up to the nearest GiB.
        type: integer
    type: object
  commons.UpdateRunnerImageInput:
    properties:
      container_runner_image:
        $ref: '#/definitions/commons.ContainerRunnerImageUpdate'
      hooks:
        items:
          $ref: '#/definitions/commons.RunnerImageHook'
        type: array
      id:
        type: string
      runner_image_pull_secret_id:
        type: string
      settings:
        $ref: '#/definitions/commons.RunnerImageSettings'
    type: object
  commons.UpdateRunnerImagePullSecretInput:
    properties:
      aws:
        $ref: '#/definitions/commons.RunnerImagePullSecretAWS'
      docker_credentials:
        $ref: '#/definitions/commons.RunnerImagePullSecretDockerCredentials'
    type: object
  commons.UpdateRunnerImageVersionInput:
    properties:
      container_runner_image_version:
        $ref: '#/definitions/commons.UpdateContainerRunnerImageVersion'
    type: object
  commons.UpdateRunnerInput:
    properties:
      Active:
        type: boolean
      configuration:
        $ref: '#/definitions/commons.RunnerSetConfiguration'
      labels:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  commons.UserToken:
    properties:
      id:
        type: string
      organization_id:
        type: string
      provider:
        type: string
      provider_tenant_id:
        type: string
      provider_user_id:
        type: string
      user_id:
        type: string
    type: object
  commons.VCSIntegrationLean:
    properties:
      account_id:
        type: string
      account_owner:
        type: string
      connection_status:
        type: string
      id:
        type: string
      installation_id:
        type: string
      target_type:
        type: string
    required:
    - connection_status
    - id
    - target_type
    type: object
  commons.WarpbuildImage:
    properties:
      cloud_init_template:
        type: string
      image_uri:
        type: string
    type: object
  commons.Workflow:
    properties:
      external_id:
        type: string
      external_repo_entity:
        type: string
      external_repo_id:
        type: string
      id:
        type: string
      is_repo_public:
        type: boolean
      jobs_runner_info:
        items:
          $ref: '#/definitions/commons.JobRunnerInfo'
        type: array
      name:
        type: string
      organization_id:
        type: string
      provider:
        type: string
      provider_integration_id:
        type: string
      runner_info:
        $ref: '#/definitions/commons.RunnerInfo'
      stats:
        $ref: '#/definitions/commons.WorkflowStats'
      url:
        type: string
      warp_pr_id:
        type: string
      warp_pr_link:
        type: string
      warp_pr_runner:
        type: string
      warp_status:
        type: string
    type: object
  commons.WorkflowStats:
    properties:
      run_count:
        type: integer
      run_duration:
        type: integer
    type: object
  debugger.PublishEventInput:
    properties:
      data: {}
      id:
        type: string
      publisher:
        type: string
      topic:
        type: string
    type: object
  insights.callbackInput:
    properties:
      code:
        type: string
      installation_id:
        type: string
      setup_action:
        type: string
    required:
    - code
    - setup_action
    type: object
  types.GenericSuccessMessage:
    properties:
      message:
        type: string
    type: object
host: backend.warpbuild.com
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the docs for warp builds api for argonaut
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Warp Builds API Docs
  version: 0.4.0
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Logs in or signs up the userm
      operationId: AuthUser
      parameters:
      - description: Auth request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AuthUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Auth user
      tags:
      - v1 auth
  /auth/login/{provider}:
    get:
      consumes:
      - application/json
      description: Get auth url
      operationId: GetAuthURL
      parameters:
      - description: Provider
        in: path
        name: provider
        required: true
        type: string
      responses:
        "302":
          description: Redirects to auth url
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Get auth url
      tags:
      - v1 auth
  /auth/logout:
    patch:
      consumes:
      - application/json
      description: Logs out the user
      operationId: Logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Logout
      tags:
      - v1 auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Gets the currently logged in user
      operationId: GetMe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Auth user
      tags:
      - v1 auth
  /auth/switch:
    patch:
      consumes:
      - application/json
      operationId: SwitchOrganization
      parameters:
      - description: Switch organization
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SwitchOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SwitchOrganizationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Switch organization
      tags:
      - v1 auth
  /auth/token/refresh:
    patch:
      consumes:
      - application/json
      description: Refreshes the access token
      operationId: RefreshToken
      parameters:
      - description: Refresh token
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TokenRefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TokenRefreshResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Refresh token
      tags:
      - v1 auth
  /auth/tokens:
    get:
      consumes:
      - application/json
      description: List user tokens
      parameters:
      - description: ListTokenOptions
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.ListTokensOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.UserToken'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - WarpBuildAdminSecretAuth: []
      summary: List user tokens
      tags:
      - v1 auth
  /auth/users:
    get:
      consumes:
      - application/json
      description: List users from authentication provider
      parameters:
      - description: ListUsersOptions
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.ListUsersOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.ListUsersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - WarpBuildAdminSecretAuth: []
      summary: List users
      tags:
      - v1 auth
  /billing/checkout:
    post:
      consumes:
      - application/json
      operationId: InitateSubscriptionCheckout
      parameters:
      - description: initiate checkout session input
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/commons.ReqCheckoutSession'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.ResCheckoutSession'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Initiate Checkout for subscription with PG
      tags:
      - v1 subscriptions
  /billing/info:
    get:
      consumes:
      - application/json
      operationId: GetBillingInfo
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.BillingInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get Billing Info
      tags:
      - v1 subscriptions
    patch:
      consumes:
      - application/json
      operationId: UpdateBillingInfo
      parameters:
      - description: billing info update input
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/commons.UpdateBillingInfoInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.BillingInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Update Billing Info
      tags:
      - v1 subscriptions
  /billing/setup_intent/init:
    post:
      consumes:
      - application/json
      operationId: InitiateSetupIntent
      parameters:
      - description: initiate setup intent session input
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/commons.ReqSetupIntentInit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.ResSetupIntentInit'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Initiate Checkout for subscription with PG
      tags:
      - v1 subscriptions
  /billing/setup_intent/post_processor:
    post:
      consumes:
      - application/json
      operationId: PostSetupIntent
      parameters:
      - description: post setup intent session input
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/commons.PostPaymentMethodSetupInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.PostPaymentMethodSetupInput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Post Checkout processing for subscription with PG
      tags:
      - v1 subscriptions
  /billing/usage/internal:
    post:
      consumes:
      - application/json
      operationId: PostUsageForInternalService
      parameters:
      - description: post usage input
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/commons.InternalPostUsageInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.InternalPostUsageOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - WarpBuildServiceSecretAuth: []
      summary: Post Usage for internal service
      tags:
      - v1 billing
  /debugger/events/publish:
    post:
      consumes:
      - application/json
      operationId: DebugPublishEvent
      parameters:
      - description: Event to publish
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/debugger.PublishEventInput'
      produces:
      - application/json
      responses:
        "200":
          description: JSON response
          schema:
            $ref: '#/definitions/types.GenericSuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - WarpBuildAdminSecretAuth: []
      summary: Publish an event to the event bus
      tags:
      - v1 debugger
  /insights/integrations/github/callback:
    post:
      consumes:
      - application/json
      description: Callback for verifying insights integration
      operationId: GitHubCallback
      parameters:
      - description: Callback input
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/insights.callbackInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthUserResponse'
      security:
      - JWTKeyAuth: []
      summary: GitHub callback for insights
      tags:
      - v1 insights integrations
  /jobs/cost-summary:
    get:
      consumes:
      - application/json
      description: GetCostSummary
      operationId: GetCostSummary
      parameters:
      - description: Date range start
        in: query
        name: start_date
        required: true
        type: string
      - description: Date range end
        in: query
        name: end_date
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.CostSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: GetCostSummary
      tags:
      - v1 jobs
  /jobs/daywise-costs:
    get:
      consumes:
      - application/json
      description: GetDaywiseCosts
      operationId: GetDaywiseCosts
      parameters:
      - description: Date range start
        in: query
        name: start_date
        required: true
        type: string
      - description: Date range end
        in: query
        name: end_date
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.DaywiseCost'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: GetDaywiseCosts
      tags:
      - v1 jobs
  /organization:
    get:
      consumes:
      - application/json
      operationId: GetOrganization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get organization details for the current organization. Current organization
        is figured from the authorization token
      tags:
      - v1 organization
    patch:
      description: Organization is figured out from the auth token since tokens are
        specific to organizations.
      operationId: UpdateOrganization
      parameters:
      - description: Update existing organization body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Organization'
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Updates existing organization based on the fields provided.
      tags:
      - v1 organization
    post:
      description: User can manage multiple tenanats from one account, this api provides
        user a functionality to add a new tenant/org to the user.
      operationId: CreateOrganization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SwitchOrganizationResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Adds a new organisation for a current user
      tags:
      - v1 organization
  /organization/users:
    get:
      operationId: ListOrgUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/V1ListUsersForOrganizationResult'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: ListOrgUsers list the users for the current organization
      tags:
      - v1 organization
  /organizations:
    get:
      operationId: ListUserOrganizations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/V1Organization'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: ListUserOrganizations lists all the organization user has access to.
      tags:
      - v1 organization
  /runner-image-pull-secrets:
    get:
      consumes:
      - application/json
      operationId: ListRunnerImagePullSecrets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.ListRunnerImagePullSecretsOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: List all runner image pull secrets.
      tags:
      - v1 runner_image_pull_secrets
    post:
      consumes:
      - application/json
      operationId: CreateRunnerImagePullSecret
      parameters:
      - description: Runner Image Pull Secret
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.CreateRunnerImagePullSecretInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerImagePullSecret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Create a new runner image pull secret.
      tags:
      - v1 runner_image_pull_secrets
  /runner-image-pull-secrets/{id}:
    delete:
      consumes:
      - application/json
      operationId: DeleteRunnerImagePullSecret
      parameters:
      - description: Runner Image Pull Secret ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GenericSuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Delete runner image pull secret details for the id.
      tags:
      - v1 runner_image_pull_secrets
    get:
      consumes:
      - application/json
      operationId: GetRunnerImagePullSecret
      parameters:
      - description: Runner Image Pull Secret ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerImagePullSecret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get runner image pull secret details for the id.
      tags:
      - v1 runner_image_pull_secrets
    put:
      consumes:
      - application/json
      operationId: UpdateRunnerImagePullSecret
      parameters:
      - description: Runner Image Pull Secret ID
        in: path
        name: id
        required: true
        type: string
      - description: Runner Image Pull Secret
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.UpdateRunnerImagePullSecretInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerImagePullSecret'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Update runner image pull secret details for the id.
      tags:
      - v1 runner_image_pull_secrets
  /runner-image-versions:
    get:
      consumes:
      - application/json
      operationId: ListRunnerImageVersions
      parameters:
      - description: Runner Image ID
        in: query
        name: runner_image_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.ListRunnerImageVersionsOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: List all runner image versions.
      tags:
      - v1 runner_image_versions
  /runner-image-versions/{id}:
    delete:
      consumes:
      - application/json
      operationId: DeleteRunnerImageVersion
      parameters:
      - description: Runner Image Version ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GenericSuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Delete runner image version details for the id.
      tags:
      - v1 runner_image_versions
    get:
      consumes:
      - application/json
      operationId: GetRunnerImageVersion
      parameters:
      - description: Runner Image Version ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerImageVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get runner image version details for the id.
      tags:
      - v1 runner_image_versions
    patch:
      consumes:
      - application/json
      operationId: UpdateRunnerImageVersion
      parameters:
      - description: Runner Image Version ID
        in: path
        name: id
        required: true
        type: string
      - description: Runner Image Version
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.UpdateRunnerImageVersionInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerImageVersion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Update runner image version details for the id.
      tags:
      - v1 runner_image_versions
  /runner-images:
    get:
      consumes:
      - application/json
      operationId: ListRunnerImages
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.ListRunnerImagesOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: List all runner images.
      tags:
      - v1 runner_images
    post:
      consumes:
      - application/json
      operationId: CreateRunnerImage
      parameters:
      - description: Runner Image
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.CreateRunnerImageInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerImage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Create a new runner image.
      tags:
      - v1 runner_images
  /runner-images/{id}:
    delete:
      consumes:
      - application/json
      operationId: DeleteRunnerImage
      parameters:
      - description: Runner Image ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerImage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Delete runner image details for the id.
      tags:
      - v1 runner_images
    get:
      consumes:
      - application/json
      operationId: GetRunnerImage
      parameters:
      - description: Runner Image ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerImage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get runner image details for the id.
      tags:
      - v1 runner_images
    put:
      consumes:
      - application/json
      operationId: UpdateRunnerImage
      parameters:
      - description: Runner Image ID
        in: path
        name: id
        required: true
        type: string
      - description: Runner Image
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.UpdateRunnerImageInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerImage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Update runner image details for the id.
      tags:
      - v1 runner_images
  /runner_instance/internal/{id}/last_job_processed_meta:
    get:
      operationId: GetRunnerLastJobProcessedMeta
      parameters:
      - description: runner instance id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.LastJobProcessedMeta'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - WarpBuildServiceSecretAuth: []
      summary: Get runner last used job meta
      tags:
      - v1 RunnerInstance
  /runners:
    get:
      operationId: ListRunners
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.Runner'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: ListRunners lists all the runners for an org.
      tags:
      - v1 Runners
    post:
      description: User can request a runner setup by passing different name.
      operationId: SetupRunner
      parameters:
      - description: Create new runner body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.SetupRunnerInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Runner'
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Adds a new runner for a current organization
      tags:
      - v1 Runners
  /runners/{id}:
    delete:
      consumes:
      - application/json
      operationId: DeleteRunner
      parameters:
      - description: Runner ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Runner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: delete runner for the id. Current organization is figured from the
        authorization token
      tags:
      - v1 Runners
    get:
      consumes:
      - application/json
      operationId: GetRunner
      parameters:
      - description: Runner ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Runner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get runner details for the id. Current organization is figured from
        the authorization token
      tags:
      - v1 Runners
    patch:
      consumes:
      - application/json
      operationId: UpdateRunner
      parameters:
      - description: update runner body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.UpdateRunnerInput'
      - description: Runner ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Runner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get runner details for the id. Current organization is figured from
        the authorization token
      tags:
      - v1 Runners
  /runners/cost/calculator:
    post:
      operationId: ComputeCustomRunnerRate
      parameters:
      - description: Compute custom runner rate
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.RateCalculationInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RateCalculationOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get ComputeCustomRunnerRate details
      tags:
      - v1 runners
  /runners/default-group:
    get:
      operationId: GetRunnerSetDefaultGroup
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerSetDefaultGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get default group for runner set
      tags:
      - v1 Runners
    patch:
      consumes:
      - application/json
      operationId: SetRunnerSetDefaultGroup
      parameters:
      - description: Set default group for runner set body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.SetRunnerSetDefaultGroupInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerSetDefaultGroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Set default group for runner set
      tags:
      - v1 Runners
  /runners/usage:
    get:
      consumes:
      - application/json
      operationId: GetRunnersUsage
      parameters:
      - description: Date range start
        in: query
        name: start_date
        required: true
        type: string
      - description: Date range end
        in: query
        name: end_date
        required: true
        type: string
      - collectionFormat: multi
        description: Capacity types
        in: query
        items:
          enum:
          - ondemand
          - spot
          type: string
        name: capacity_types
        type: array
      - collectionFormat: multi
        description: Architectures
        in: query
        items:
          enum:
          - x64
          - arm64
          type: string
        name: archs
        type: array
      - collectionFormat: multi
        description: Images
        in: query
        items:
          enum:
          - macos-13
          - ubuntu-2204
          - macos-14
          - ubuntu-2404
          type: string
        name: images
        type: array
      - collectionFormat: multi
        description: Cores
        in: query
        items:
          enum:
          - 2
          - 4
          - 6
          - 8
          - 16
          - 32
          type: integer
        name: cores
        type: array
      - collectionFormat: multi
        description: Runner types
        in: query
        items:
          enum:
          - stock
          - custom
          type: string
        name: runner_types
        type: array
      - description: Search term
        in: query
        name: search_term
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnersUsage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get runtimes for runners of the organisation
      tags:
      - v1 Runners
  /runners_instance:
    post:
      consumes:
      - application/json
      description: Add a new runner instance
      operationId: AddRunnerInstance
      parameters:
      - description: Add runner instance body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.AddRunnerInstanceInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerInstance'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - WarpBuildServiceSecretAuth: []
      summary: Add a new runner instance
      tags:
      - v1 RunnerInstance
  /runners_instance/{id}/allocation_details:
    get:
      operationId: GetRunnerInstanceAllocationDetails
      parameters:
      - description: runner instance id
        in: path
        name: id
        required: true
        type: string
      - description: polling secret for validation
        in: header
        name: X-POLLING-SECRET
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerInstanceAllocationDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Get runner instance allocation details for the id
      tags:
      - v1 RunnerInstance
  /runners_instance/{id}/cleanup_hook:
    post:
      operationId: RunnerInstanceCleanupHook
      parameters:
      - description: runner instance id
        in: path
        name: id
        required: true
        type: string
      - description: polling secret for validation
        in: header
        name: X-POLLING-SECRET
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Get runner instance allocation details for the id
      tags:
      - v1 RunnerInstance
  /runners_instance/{id}/presigned_log_upload_url:
    get:
      operationId: GetRunnerInstancePresignedLogUploadURL
      parameters:
      - description: runner instance id
        in: path
        name: id
        required: true
        type: string
      - description: polling secret for validation
        in: header
        name: X-POLLING-SECRET
        required: true
        type: string
      - description: Log file name
        in: query
        name: log-file-name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.GetPresignedLogUploadURLOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Gets a presigned url for uploading logs for a runner instance
      tags:
      - v1 RunnerInstance
  /sku:
    get:
      operationId: ListSku
      parameters:
      - collectionFormat: multi
        description: list of sku id's
        in: query
        items:
          type: string
        name: ids
        type: array
      - description: cores
        in: query
        name: cores
        type: integer
      - description: memory
        in: query
        name: memory
        type: integer
      - description: Architectures
        enum:
        - x64
        - arm64
        in: query
        name: arch
        type: string
      - collectionFormat: multi
        description: operating system
        in: query
        items:
          enum:
          - ubuntu
          - mac
          type: string
        name: os
        type: array
      - description: Images
        enum:
        - any
        - amd
        - intel
        - arm
        in: query
        name: manufacturer
        type: string
      - description: performance category
        enum:
        - small
        - medium
        - large
        in: query
        name: performance_category
        type: string
      - description: has gpu
        in: query
        name: has_gpu
        type: boolean
      - description: burstable
        in: query
        name: burstable
        type: boolean
      - description: include internal skus
        in: query
        name: include_internal
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.InstanceSku'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: ListAllSku lists all the runners sku for an org.
      tags:
      - v1 Sku
  /sku/{id}:
    get:
      consumes:
      - application/json
      operationId: GetSku
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.InstanceSku'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get default group for runner set
      tags:
      - v1 Sku
  /subscription:
    delete:
      operationId: DeleteCurrentSubscription
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.SubscriptionDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Cancel Org current Subscription
      tags:
      - v1 subscriptions
    get:
      operationId: GetSubscriptionDetails
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.SubscriptionDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get Current Org Subscription Details
      tags:
      - v1 subscriptions
  /subscription/{gateway}/webhook:
    post:
      operationId: SubscriptionPGWebhook
      parameters:
      - description: gateway name, current only stripe
        in: path
        name: gateway
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: S2S Webhook received from PG
      tags:
      - v1 subscriptions
  /subscription/customer_portal_url:
    post:
      operationId: GetCustomerPortalUrl
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get customer portal url
      tags:
      - v1 subscriptions
  /subscription/stripe/payment_method/{payment_method_id}:
    delete:
      operationId: DeleteStripePaymentMethod
      parameters:
      - description: ID for the stripe payment method
        in: path
        name: payment_method_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.SubscriptionDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: delete stripe setup intent payment method
      tags:
      - v1 subscriptions
    patch:
      operationId: StripePaymentMethodDefault
      parameters:
      - description: ID for the stripe payment method
        in: path
        name: payment_method_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.SubscriptionDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: update stripe payment method to default
      tags:
      - v1 subscriptions
  /ui/banner-messages:
    get:
      consumes:
      - application/json
      operationId: GetBannerMessages
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.BannerMessage'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get specific banner messages for UI/Org or all
      tags:
      - v1 ui
  /vcs/approve-integration:
    put:
      consumes:
      - application/json
      operationId: ApproveVCSIntegration
      parameters:
      - description: Approve vcs integration app installation
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApproveVCSIntegrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: This handles the callback for approving an installation
      tags:
      - v1 vcs
  /vcs/entities:
    get:
      consumes:
      - application/json
      description: |-
        VCS Entities refers to git entites like git repos, git branches, etc.
        This endpoint is a commons endpoint to fetch these.
        ParentID is required depending on what git entity you are fetching.

        Git entity heirchary:
        Git Organization > Git Repository > Git Branch

        When fetching an entity the parent id is the id of git entity one level above
        So for example, fetching repository will be
        http://backend.warpbuild.com/api/v1/vcs/entities?provider=gitlab&entity_type=repository&parent_id=organization_external_id
        For the most top level entity there is no parent_id.
      operationId: ListVCSEntites
      parameters:
      - description: Git provider
        in: query
        name: provider
        type: string
      - description: Filter using organization name
        in: query
        name: name
        type: string
      - description: IntegrationID used by the git provider
        in: query
        name: integration_id
        type: string
      - description: VCS Entity that should be returned
        enum:
        - organization
        - repository
        - branch
        in: query
        name: entity_type
        required: true
        type: string
      - description: VCS Entity Parent ID
        in: query
        name: parent_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/VCSEntity'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Lists all vcs entities for vcs integration
      tags:
      - v1 vcs
  /vcs/integrations:
    get:
      consumes:
      - application/json
      operationId: ListVCSIntegration
      parameters:
      - description: vcs integration provider filter
        in: query
        name: provider
        type: string
      - description: vcs integration provider filter
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/VCSIntegration'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Lists all vcs integration for provider
      tags:
      - v1 vcs
    post:
      consumes:
      - application/json
      operationId: CreateVCSIntegration
      parameters:
      - description: Create new vcs integration body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateVCSIntegrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/VCSIntegration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Create a new vcs integration
      tags:
      - v1 vcs
  /vcs/integrations/{integration_id}:
    delete:
      consumes:
      - application/json
      operationId: DeleteVCSIntegration
      parameters:
      - description: ID for the vcs integration
        in: path
        name: integration_id
        required: true
        type: string
      - description: ID for the vcs integration
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GenericSuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Delete an existing vcs integration
      tags:
      - v1 vcs
    put:
      consumes:
      - application/json
      operationId: UpdateVCSIntegration
      parameters:
      - description: ID for the vcs integration
        in: path
        name: integration_id
        required: true
        type: string
      - description: Update vcs integration body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateVCSIntegrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateVCSIntegrationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Update an existing vcs integration
      tags:
      - v1 vcs
  /vcs/list-runner-groups:
    post:
      consumes:
      - application/json
      operationId: ListVCSRunnerGroups
      parameters:
      - description: List runner groups input
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.ListVCSRunnerGroupsInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.ListVCSRunnerGroupsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Lists all vcs runner groups
      tags:
      - v1 vcs
  /vcs/repos:
    get:
      consumes:
      - application/json
      operationId: ListVCSRepos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.Repo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Lists all vcs repos for vcs integration
      tags:
      - v1 vcs
    post:
      consumes:
      - application/json
      operationId: CreateVCSGitRepo
      parameters:
      - description: create repo options
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.CreateRepoOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Repo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth | WarpBuildAdminSecretAuth: []
      summary: create vcs repo based on repo internal id
      tags:
      - v1 vcs
  /vcs/repos/{id}:
    get:
      consumes:
      - application/json
      operationId: GetVCSGitRepo
      parameters:
      - description: internal id for the vcs git repo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Repo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: get vcs repo based on repo internal id
      tags:
      - v1 vcs
  /workflows:
    get:
      consumes:
      - application/json
      description: Workflows (workflows)
      operationId: ListWorkflows
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListWorkflowsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Lists all workflows (workflows) for organization according to repo
      tags:
      - v1 workflows
  /workflows/pr-auth-url:
    get:
      consumes:
      - application/json
      description: Get auth url required for GH PR
      operationId: GetPullRequestAuthURL
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get auth url required for GH PR
      tags:
      - v1 workflows
  /workflows/pull:
    patch:
      consumes:
      - application/json
      description: Workflows (workflows)
      operationId: PullWorkflows
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Pulls all workflows from the provider to the database
      tags:
      - v1 workflows
  /workflows/warp:
    patch:
      consumes:
      - application/json
      description: Warps workflows
      operationId: WarpWorkflows
      parameters:
      - description: Warp workflows options
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/WarpWorkflowsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WarpWorkflowsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Warps workflows for organization according to given internal workflow
        ids
      tags:
      - v1 workflows
schemes:
- https
securityDefinitions:
  JWTKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  WarpBuildAdminSecretAuth:
    in: header
    name: X-Warp-Build-Admin-Secret
    type: apiKey
  WarpBuildServiceSecretAuth:
    in: header
    name: x-warpbuild-service-secret
    type: apiKey
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
