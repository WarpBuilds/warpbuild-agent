basePath: /api/v1
definitions:
  ApproveVCSIntegrationRequest:
    properties:
      code:
        type: string
      installation_id:
        type: string
    type: object
  AuthUserRequest:
    properties:
      code:
        type: string
      state:
        type: string
    required:
    - code
    - state
    type: object
  AuthUserResponse:
    properties:
      access_token:
        type: string
      organization:
        $ref: '#/definitions/V1Organization'
      refresh_token:
        type: string
      should_show_vcs_integration:
        type: boolean
      user:
        $ref: '#/definitions/V1User'
    required:
    - access_token
    - organization
    - refresh_token
    - should_show_vcs_integration
    - user
    type: object
  CreateInviteRequest:
    properties:
      role_kind:
        enum:
        - owner
        - admin
        - member
        type: string
    required:
    - role_kind
    type: object
  CreateVCSIntegrationRequest:
    properties:
      additional_state:
        additionalProperties: true
        type: object
      application_callback_url:
        type: string
      application_id:
        type: string
      application_secret:
        type: string
      provider:
        type: string
      vcs_url:
        type: string
    required:
    - provider
    type: object
  EstimatedCost:
    properties:
      amount:
        type: number
      date:
        type: string
    type: object
  MeResponse:
    properties:
      organization:
        $ref: '#/definitions/V1Organization'
      user:
        $ref: '#/definitions/V1User'
      vcs_integration:
        $ref: '#/definitions/commons.VCSIntegrationLean'
    required:
    - organization
    - user
    - vcs_integration
    type: object
  SwitchOrganizationRequest:
    properties:
      organization_id:
        type: string
      refresh_token:
        type: string
    required:
    - organization_id
    - refresh_token
    type: object
  SwitchOrganizationResponse:
    properties:
      access_token:
        type: string
      organization:
        $ref: '#/definitions/V1Organization'
    required:
    - access_token
    - organization
    type: object
  TokenRefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  TokenRefreshResponse:
    properties:
      access_token:
        type: string
    required:
    - access_token
    type: object
  UpdateInviteRequest:
    properties:
      Status:
        type: string
    type: object
  UpdateOrganizationRequest:
    properties:
      avatar_url:
        type: string
      name:
        type: string
    type: object
  UpdateVCSIntegrationRequest:
    properties:
      code:
        description: |-
          Code is

          - 'code' param in the callback from gitlab
        type: string
      id:
        type: string
      installation_id:
        description: |-
          InstallationID

          - 'installation_id' param from github installation
        type: string
      setup_action:
        description: |-
          SetupAction

          - 'setup_action' param from github installation
        type: string
    required:
    - id
    type: object
  UpdateVCSIntegrationResponse:
    properties:
      new_session:
        $ref: '#/definitions/AuthUserResponse'
      vcs_integration:
        $ref: '#/definitions/VCSIntegration'
    type: object
  V1Invite:
    properties:
      code:
        type: string
      expires_at:
        type: string
      id:
        type: string
      organization_id:
        type: string
      role:
        type: string
      status:
        type: string
    type: object
  V1ListUsersForOrganizationResult:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      id:
        type: integer
      joined_at:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  V1Organization:
    properties:
      avatar_url:
        type: string
      created_by:
        type: integer
      id:
        type: string
      name:
        type: string
    required:
    - created_by
    - id
    - name
    type: object
  V1SendInviteRequest:
    properties:
      email:
        type: string
      invite_id:
        type: string
    required:
    - email
    - invite_id
    type: object
  V1User:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      login:
        type: string
      name:
        type: string
      signup_provider:
        type: string
      signup_provider_user_id:
        type: string
      updated_at:
        type: string
    type: object
  VCSEntity:
    properties:
      account_id:
        description: |-
          AccountID is the github account

          TODO: AccountID should be group id in case of gitlab
        type: string
      commit_id:
        type: string
      created_at:
        type: string
      display_name:
        type: string
      entity_type:
        type: string
      external_id:
        type: string
      integration_id:
        type: string
      internal_id:
        type: string
      name:
        type: string
      provider:
        type: string
      updated_at:
        type: string
      web_url:
        type: string
    required:
    - display_name
    - entity_type
    - external_id
    - name
    - provider
    type: object
  VCSIntegration:
    properties:
      account_id:
        type: string
      account_owner:
        type: string
      application_id:
        type: string
      configuration_url:
        description: |-
          ConfigurationURL

          Github
          - Is the installation's settings page on the github account.
          - This field is only populated after the github account is successfully connected.

          Gitlab
          - <no-equivalent-exists>
        type: string
      connection_status:
        type: string
      created_at:
        type: string
      id:
        type: string
      installation_id:
        type: string
      integration_type:
        type: string
      integration_url:
        type: string
      organization_id:
        type: string
      provider:
        type: string
      target_type:
        type: string
      updated_at:
        type: string
      vcs_url:
        type: string
    required:
    - connection_status
    - created_at
    - id
    - integration_type
    - integration_url
    - provider
    - target_type
    - updated_at
    type: object
  WarpBuildAPIError:
    properties:
      code:
        type: string
      description:
        type: string
      message:
        type: string
      sub_code:
        type: string
      sub_message:
        type: string
    type: object
  commons.Balance:
    properties:
      id:
        type: string
      limit:
        type: number
      percentage:
        type: number
      used:
        type: number
    type: object
  commons.BalanceDetails:
    properties:
      free_balance:
        $ref: '#/definitions/commons.Balance'
      paid_balance:
        $ref: '#/definitions/commons.Balance'
    type: object
  commons.CreateRepoOptions:
    properties:
      description:
        type: string
      display_name:
        type: string
      integration_id:
        type: string
      is_private:
        type: boolean
      name:
        type: string
      owner:
        type: string
      should_auto_init:
        type: boolean
      upsert:
        type: boolean
    required:
    - integration_id
    - name
    - owner
    type: object
  commons.ListTokensOptions:
    properties:
      organization_id:
        type: string
      user_id:
        type: string
    type: object
  commons.ListUsersOptions:
    properties:
      page:
        type: integer
      per_page:
        type: integer
    type: object
  commons.ListUsersResponse:
    properties:
      next:
        type: integer
      page:
        type: integer
      per_page:
        type: integer
      total_pages:
        type: integer
      total_rows:
        type: integer
      users:
        items:
          $ref: '#/definitions/V1User'
        type: array
    type: object
  commons.Organization:
    properties:
      avatar_url:
        type: string
      created_by:
        type: integer
      id:
        type: string
      name:
        type: string
    type: object
  commons.PaymentDetails:
    properties:
      amount:
        type: integer
      billing_email:
        type: string
      currency:
        type: string
      method:
        type: string
      method_meta:
        type: string
      ref:
        type: string
      status:
        type: string
    type: object
  commons.PaymentMethod:
    properties:
      country_code:
        type: string
      exp_month:
        type: integer
      exp_year:
        type: integer
      external_id:
        type: string
      iin:
        type: string
      is_default:
        type: boolean
      issuer:
        type: string
      last4:
        type: string
      name:
        type: string
      network:
        type: string
      type:
        type: string
    type: object
  commons.Repo:
    properties:
      AccountID:
        type: string
      CreatedAt:
        type: string
      DefaultBranch:
        type: string
      DisplayName:
        type: string
      IntegrationID:
        type: string
      SSHURL:
        type: string
      UpdatedAt:
        type: string
      WebURL:
        type: string
      id:
        type: string
      name:
        type: string
      owner:
        type: string
      provider:
        type: string
      vcs_id:
        type: string
    type: object
  commons.ReqCheckoutSession:
    properties:
      cancel_url:
        type: string
      success_url:
        type: string
    required:
    - cancel_url
    - success_url
    type: object
  commons.ReqSetupIntentInit:
    properties:
      cancel_url:
        type: string
      success_url:
        type: string
    required:
    - cancel_url
    - success_url
    type: object
  commons.ResCheckoutSession:
    properties:
      redirect_url:
        type: string
      session_id:
        type: string
    type: object
  commons.ResSetupIntentInit:
    properties:
      data: {}
      gateway:
        type: string
    type: object
  commons.Runner:
    properties:
      active:
        type: boolean
      cluster_id:
        type: string
      configuration:
        $ref: '#/definitions/commons.RunnerConfiguration'
      created_at:
        type: string
      external_reference_id:
        type: string
      id:
        type: string
      labels:
        additionalProperties: true
        type: object
      name:
        type: string
      organization_id:
        type: string
      updated_at:
        type: string
      vcs_integration_id:
        type: string
    type: object
  commons.RunnerConfiguration:
    properties:
      arch:
        type: string
      cores:
        type: integer
      image:
        type: string
      memory:
        type: integer
    type: object
  commons.RunnerInstance:
    properties:
      cluster:
        type: string
      configuration:
        $ref: '#/definitions/commons.RunnerConfiguration'
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      last_job_processed_id:
        type: string
      last_polled:
        type: string
      organization_id:
        type: string
      runner_for:
        type: string
      runner_set_id:
        type: string
      status:
        type: string
      updated_at:
        type: string
      vcs_integration_id:
        type: string
    type: object
  commons.RunnerInstanceAllocationDetails:
    properties:
      runner_application_details: {}
      runner_instance:
        $ref: '#/definitions/commons.RunnerInstance'
      status:
        type: string
    type: object
  commons.Runtime:
    properties:
      duration_seconds:
        type: integer
      runner_id:
        type: string
    type: object
  commons.SetupRunnerInput:
    properties:
      Active:
        type: boolean
      configuration:
        $ref: '#/definitions/commons.RunnerConfiguration'
      labels:
        additionalProperties: true
        type: object
      name:
        type: string
      vcs_integration_id:
        type: string
    type: object
  commons.SubscriptionDetails:
    properties:
      balance_details:
        $ref: '#/definitions/commons.BalanceDetails'
      created_at:
        type: string
      id:
        type: string
      last_payment_at:
        type: string
      last_payment_details:
        $ref: '#/definitions/commons.PaymentDetails'
      organization_id:
        type: string
      payment_methods:
        items:
          $ref: '#/definitions/commons.PaymentMethod'
        type: array
      pg_customer_id:
        type: string
      pg_subscription_id:
        type: string
      status:
        type: string
      subscribed_at:
        type: string
      upcoming_bill:
        $ref: '#/definitions/commons.UpcomingBill'
      updated_at:
        type: string
    type: object
  commons.UpcomingBill:
    properties:
      amount:
        type: integer
      currency:
        type: string
      date:
        type: string
    type: object
  commons.UpdateRunnerInput:
    properties:
      Active:
        type: boolean
      configuration:
        $ref: '#/definitions/commons.RunnerConfiguration'
      labels:
        additionalProperties: true
        type: object
    type: object
  commons.UserToken:
    properties:
      id:
        type: string
      organization_id:
        type: string
      provider:
        type: string
      provider_tenant_id:
        type: string
      provider_user_id:
        type: string
      user_id:
        type: string
    type: object
  commons.VCSIntegrationLean:
    properties:
      account_id:
        type: string
      account_owner:
        type: string
      connection_status:
        type: string
      id:
        type: string
      installation_id:
        type: string
      target_type:
        type: string
    required:
    - connection_status
    - id
    - target_type
    type: object
  debugger.PublishEventInput:
    properties:
      data: {}
      id:
        type: string
      publisher:
        type: string
      topic:
        type: string
    type: object
  types.GenericSuccessMessage:
    properties:
      message:
        type: string
    type: object
host: backend.warpbuild.com
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the docs for warp builds api for argonaut
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Warp Builds API Docs
  version: 0.4.0
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Logs in or signs up the userm
      operationId: AuthUser
      parameters:
      - description: Auth request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AuthUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Auth user
      tags:
      - v1 auth
  /auth/login/{provider}:
    get:
      consumes:
      - application/json
      description: Get auth url
      operationId: GetAuthURL
      parameters:
      - description: Provider
        in: path
        name: provider
        required: true
        type: string
      - description: Invite code if any
        in: query
        name: invite_code
        type: string
      responses:
        "302":
          description: Redirects to auth url
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Get auth url
      tags:
      - v1 auth
  /auth/logout:
    patch:
      consumes:
      - application/json
      description: Logs out the user
      operationId: Logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Logout
      tags:
      - v1 auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Gets the currently logged in user
      operationId: GetMe
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Auth user
      tags:
      - v1 auth
  /auth/switch:
    patch:
      consumes:
      - application/json
      operationId: SwitchOrganization
      parameters:
      - description: Switch organization
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SwitchOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SwitchOrganizationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Switch organization
      tags:
      - v1 auth
  /auth/token/refresh:
    patch:
      consumes:
      - application/json
      description: Refreshes the access token
      operationId: RefreshToken
      parameters:
      - description: Refresh token
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/TokenRefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TokenRefreshResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Refresh token
      tags:
      - v1 auth
  /auth/tokens:
    get:
      consumes:
      - application/json
      description: List user tokens
      parameters:
      - description: ListTokenOptions
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.ListTokensOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.UserToken'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - WarpBuildAdminSecretAuth: []
      summary: List user tokens
      tags:
      - v1 auth
  /auth/users:
    get:
      consumes:
      - application/json
      description: List users from authentication provider
      parameters:
      - description: ListUsersOptions
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.ListUsersOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.ListUsersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - WarpBuildAdminSecretAuth: []
      summary: List users
      tags:
      - v1 auth
  /billing/checkout:
    post:
      consumes:
      - application/json
      operationId: InitateSubscriptionCheckout
      parameters:
      - description: initiate checkout session input
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/commons.ReqCheckoutSession'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.ResCheckoutSession'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Initiate Checkout for subscription with PG
      tags:
      - v1 subscriptions
  /billing/setup_intent/init:
    post:
      consumes:
      - application/json
      operationId: InitiateSetupIntent
      parameters:
      - description: initiate setup intent session input
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/commons.ReqSetupIntentInit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.ResSetupIntentInit'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Initiate Checkout for subscription with PG
      tags:
      - v1 subscriptions
  /debugger/events/publish:
    post:
      consumes:
      - application/json
      operationId: DebugPublishEvent
      parameters:
      - description: Event to publish
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/debugger.PublishEventInput'
      produces:
      - application/json
      responses:
        "200":
          description: JSON response
          schema:
            $ref: '#/definitions/types.GenericSuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - WarpBuildAdminSecretAuth: []
      summary: Publish an event to the event bus
      tags:
      - v1 debugger
  /invite:
    patch:
      description: Invite is figured out from the auth token since tokens are specific
        to invites.
      operationId: UpdateInvite
      parameters:
      - description: Update existing invite body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateInviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1Invite'
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Updates existing invite based on the fields provided.
      tags:
      - v1 invite
    post:
      description: User can manage multiple tenanats from one account, this api provides
        user a functionality to add a new tenant/org to the user.
      operationId: CreateInvite
      parameters:
      - description: Create new invite body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateInviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/V1Invite'
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Adds a new organisation for a current user
      tags:
      - v1 invite
  /invite/send/email:
    post:
      description: Sending email invite to the user.
      operationId: SendInvite
      parameters:
      - description: Send invite body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/V1SendInviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Adds a new organisation for a current user
      tags:
      - v1 invite
  /invites:
    get:
      operationId: ListOrgInvites
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/V1Invite'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: ListOrgInvites lists all the invite user has access to.
      tags:
      - v1 invite
  /jobs/estimated-costs:
    get:
      consumes:
      - application/json
      description: GetEstimatedCosts
      operationId: GetEstimatedCosts
      parameters:
      - description: Date range start
        in: query
        name: start_date
        required: true
        type: string
      - description: Date range end
        in: query
        name: end_date
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/EstimatedCost'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: GetEstimatedCosts
      tags:
      - v1 jobs
  /organization:
    get:
      consumes:
      - application/json
      operationId: GetOrganization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get organization details for the current organization. Current organization
        is figured from the authorization token
      tags:
      - v1 organization
    patch:
      description: Organization is figured out from the auth token since tokens are
        specific to organizations.
      operationId: UpdateOrganization
      parameters:
      - description: Update existing organization body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Organization'
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Updates existing organization based on the fields provided.
      tags:
      - v1 organization
    post:
      description: User can manage multiple tenanats from one account, this api provides
        user a functionality to add a new tenant/org to the user.
      operationId: CreateOrganization
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SwitchOrganizationResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Adds a new organisation for a current user
      tags:
      - v1 organization
  /organization/users:
    get:
      operationId: ListOrgUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/V1ListUsersForOrganizationResult'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: ListOrgUsers list the users for the current organization
      tags:
      - v1 organization
  /organizations:
    get:
      operationId: ListUserOrganizations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/V1Organization'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: ListUserOrganizations lists all the organization user has access to.
      tags:
      - v1 organization
  /runner_instance/{id}/allocation_details:
    get:
      operationId: GetRunnerInstanceAllocationDetails
      parameters:
      - description: runner instance id
        in: path
        name: id
        required: true
        type: string
      - description: polling secret for validation
        in: header
        name: X-POLLING-SECRET
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.RunnerInstanceAllocationDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: Get runner instance allocation details for the id
      tags:
      - v1 RunnerInstance
  /runners:
    get:
      operationId: ListRunners
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.Runner'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: ListRunners lists all the runners for an org.
      tags:
      - v1 Runners
    post:
      description: User can request a runner setup by passing different name.
      operationId: SetupRunner
      parameters:
      - description: Create new runner body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.SetupRunnerInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Runner'
        default:
          description: ""
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Adds a new runner for a current organization
      tags:
      - v1 Runners
  /runners/{id}:
    delete:
      consumes:
      - application/json
      operationId: DeleteRunner
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Runner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: delete runner for the id. Current organization is figured from the
        authorization token
      tags:
      - v1 Runners
    get:
      consumes:
      - application/json
      operationId: GetRunner
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Runner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get runner details for the id. Current organization is figured from
        the authorization token
      tags:
      - v1 Runners
    patch:
      consumes:
      - application/json
      operationId: UpdateRunner
      parameters:
      - description: update runner body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.UpdateRunnerInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Runner'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get runner details for the id. Current organization is figured from
        the authorization token
      tags:
      - v1 Runners
  /runners/runtimes:
    get:
      consumes:
      - application/json
      operationId: GetRuntimes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/commons.Runtime'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get runtimes for runners of the organisation
      tags:
      - v1 Runners
  /subscription:
    delete:
      operationId: DeleteCurrentSubscription
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.SubscriptionDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Cancel Org current Subscription
      tags:
      - v1 subscriptions
    get:
      operationId: GetSubscriptionDetails
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.SubscriptionDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Get Current Org Subscription Details
      tags:
      - v1 subscriptions
  /subscription/{gateway}/webhook:
    post:
      operationId: SubscriptionPGWebhook
      parameters:
      - description: gateway name, current only stripe
        in: path
        name: gateway
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: S2S Webhook received from PG
      tags:
      - v1 subscriptions
  /subscription/stripe/payment_method/{payment_method_id}:
    delete:
      operationId: DeleteStripePaymentMethod
      parameters:
      - description: ID for the stripe payment method
        in: path
        name: payment_method_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.SubscriptionDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: delete stripe setup intent payment method
      tags:
      - v1 subscriptions
    patch:
      operationId: StripePaymentMethodDefault
      parameters:
      - description: ID for the stripe payment method
        in: path
        name: payment_method_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.SubscriptionDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: update stripe payment method to default
      tags:
      - v1 subscriptions
  /vcs/approve-integration:
    put:
      consumes:
      - application/json
      operationId: ApproveVCSIntegration
      parameters:
      - description: Approve vcs integration app installation
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ApproveVCSIntegrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      summary: This handles the callback for approving an installation
      tags:
      - v1 vcs
  /vcs/entities:
    get:
      consumes:
      - application/json
      description: |-
        VCS Entities refers to git entites like git repos, git branches, etc.
        This endpoint is a commons endpoint to fetch these.
        ParentID is required depending on what git entity you are fetching.

        Git entity heirchary:
        Git Organization > Git Repository > Git Branch

        When fetching an entity the parent id is the id of git entity one level above
        So for example, fetching repository will be
        http://backend.warpbuild.com/api/v1/vcs/entities?provider=gitlab&entity_type=repository&parent_id=organization_external_id
        For the most top level entity there is no parent_id.
      operationId: ListVCSEntites
      parameters:
      - description: Git provider
        in: query
        name: provider
        type: string
      - description: Filter using organization name
        in: query
        name: name
        type: string
      - description: IntegrationID used by the git provider
        in: query
        name: integration_id
        type: string
      - description: VCS Entity that should be returned
        enum:
        - organization
        - repository
        - branch
        in: query
        name: entity_type
        required: true
        type: string
      - description: VCS Entity Parent ID
        in: query
        name: parent_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/VCSEntity'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Lists all vcs entities for vcs integration
      tags:
      - v1 vcs
  /vcs/integrations:
    get:
      consumes:
      - application/json
      operationId: ListVCSIntegration
      parameters:
      - description: vcs integration provider filter
        in: query
        name: provider
        type: string
      - description: vcs integration provider filter
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/VCSIntegration'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Lists all vcs integration for provider
      tags:
      - v1 vcs
    post:
      consumes:
      - application/json
      operationId: CreateVCSIntegration
      parameters:
      - description: Create new vcs integration body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateVCSIntegrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/VCSIntegration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Create a new vcs integration
      tags:
      - v1 vcs
  /vcs/integrations/{integration_id}:
    delete:
      consumes:
      - application/json
      operationId: DeleteVCSIntegration
      parameters:
      - description: ID for the vcs integration
        in: path
        name: integration_id
        required: true
        type: string
      - description: ID for the vcs integration
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.GenericSuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Delete an existing vcs integration
      tags:
      - v1 vcs
    put:
      consumes:
      - application/json
      operationId: UpdateVCSIntegration
      parameters:
      - description: ID for the vcs integration
        in: path
        name: integration_id
        required: true
        type: string
      - description: Update vcs integration body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateVCSIntegrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateVCSIntegrationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: Update an existing vcs integration
      tags:
      - v1 vcs
  /vcs/repos:
    post:
      consumes:
      - application/json
      operationId: CreateVCSGitRepo
      parameters:
      - description: create repo options
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/commons.CreateRepoOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Repo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth | WarpBuildAdminSecretAuth: []
      summary: create vcs repo based on repo internal id
      tags:
      - v1 vcs
  /vcs/repos/{id}:
    get:
      consumes:
      - application/json
      operationId: GetVCSGitRepo
      parameters:
      - description: internal id for the vcs git repo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/commons.Repo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/WarpBuildAPIError'
      security:
      - JWTKeyAuth: []
      summary: get vcs repo based on repo internal id
      tags:
      - v1 vcs
schemes:
- https
securityDefinitions:
  JWTKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  WarpBuildAdminSecretAuth:
    in: header
    name: X-Warp-Build-Admin-Secret
    type: apiKey
swagger: "2.0"
x-extension-openapi:
  example: value on a json format