{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the docs for warp builds api for argonaut",
        "title": "Warp Builds API Docs",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.4.0"
    },
    "host": "backend.warpbuild.com",
    "basePath": "/api/v1",
    "paths": {
        "/auth": {
            "post": {
                "description": "Logs in or signs up the userm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 auth"
                ],
                "summary": "Auth user",
                "operationId": "AuthUser",
                "parameters": [
                    {
                        "description": "Auth request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/auth/login/{provider}": {
            "get": {
                "description": "Get auth url",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "v1 auth"
                ],
                "summary": "Get auth url",
                "operationId": "GetAuthURL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to auth url",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "Logs out the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 auth"
                ],
                "summary": "Logout",
                "operationId": "Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "Gets the currently logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 auth"
                ],
                "summary": "Auth user",
                "operationId": "GetMe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/auth/switch": {
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 auth"
                ],
                "summary": "Switch organization",
                "operationId": "SwitchOrganization",
                "parameters": [
                    {
                        "description": "Switch organization",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SwitchOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SwitchOrganizationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/auth/token/refresh": {
            "patch": {
                "description": "Refreshes the access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 auth"
                ],
                "summary": "Refresh token",
                "operationId": "RefreshToken",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TokenRefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TokenRefreshResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/auth/tokens": {
            "get": {
                "security": [
                    {
                        "WarpBuildAdminSecretAuth": []
                    }
                ],
                "description": "List user tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 auth"
                ],
                "summary": "List user tokens",
                "parameters": [
                    {
                        "description": "ListTokenOptions",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.ListTokensOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/commons.UserToken"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/auth/users": {
            "get": {
                "security": [
                    {
                        "WarpBuildAdminSecretAuth": []
                    }
                ],
                "description": "List users from authentication provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 auth"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "description": "ListUsersOptions",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.ListUsersOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/commons.ListUsersResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/billing/checkout": {
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "Initiate Checkout for subscription with PG",
                "operationId": "InitateSubscriptionCheckout",
                "parameters": [
                    {
                        "description": "initiate checkout session input",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.ReqCheckoutSession"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.ResCheckoutSession"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/billing/info": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "Get Billing Info",
                "operationId": "GetBillingInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.BillingInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "Update Billing Info",
                "operationId": "UpdateBillingInfo",
                "parameters": [
                    {
                        "description": "billing info update input",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.UpdateBillingInfoInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.BillingInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/billing/setup_intent/init": {
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "Initiate Checkout for subscription with PG",
                "operationId": "InitiateSetupIntent",
                "parameters": [
                    {
                        "description": "initiate setup intent session input",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.ReqSetupIntentInit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.ResSetupIntentInit"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/billing/setup_intent/post_processor": {
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "Post Checkout processing for subscription with PG",
                "operationId": "PostSetupIntent",
                "parameters": [
                    {
                        "description": "post setup intent session input",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.PostPaymentMethodSetupInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.PostPaymentMethodSetupInput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/billing/usage/internal": {
            "post": {
                "security": [
                    {
                        "WarpBuildServiceSecretAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 billing"
                ],
                "summary": "Post Usage for internal service",
                "operationId": "PostUsageForInternalService",
                "parameters": [
                    {
                        "description": "post usage input",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.InternalPostUsageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.InternalPostUsageOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/debugger/events/publish": {
            "post": {
                "security": [
                    {
                        "WarpBuildAdminSecretAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 debugger"
                ],
                "summary": "Publish an event to the event bus",
                "operationId": "DebugPublishEvent",
                "parameters": [
                    {
                        "description": "Event to publish",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/debugger.PublishEventInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JSON response",
                        "schema": {
                            "$ref": "#/definitions/types.GenericSuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/insights/integrations/github/callback": {
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "Callback for verifying insights integration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 insights integrations"
                ],
                "summary": "GitHub callback for insights",
                "operationId": "GitHubCallback",
                "parameters": [
                    {
                        "description": "Callback input",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/insights.callbackInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthUserResponse"
                        }
                    }
                }
            }
        },
        "/jobs/cost-summary": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "GetCostSummary",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "v1 jobs"
                ],
                "summary": "GetCostSummary",
                "operationId": "GetCostSummary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date range start",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date range end",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.CostSummary"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/jobs/daywise-costs": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "GetDaywiseCosts",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "v1 jobs"
                ],
                "summary": "GetDaywiseCosts",
                "operationId": "GetDaywiseCosts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date range start",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date range end",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/commons.DaywiseCost"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/organization": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 organization"
                ],
                "summary": "Get organization details for the current organization. Current organization is figured from the authorization token",
                "operationId": "GetOrganization",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "User can manage multiple tenanats from one account, this api provides user a functionality to add a new tenant/org to the user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 organization"
                ],
                "summary": "Adds a new organisation for a current user",
                "operationId": "CreateOrganization",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SwitchOrganizationResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "Organization is figured out from the auth token since tokens are specific to organizations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 organization"
                ],
                "summary": "Updates existing organization based on the fields provided.",
                "operationId": "UpdateOrganization",
                "parameters": [
                    {
                        "description": "Update existing organization body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.Organization"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/organization/users": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 organization"
                ],
                "summary": "ListOrgUsers list the users for the current organization",
                "operationId": "ListOrgUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V1ListUsersForOrganizationResult"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 organization"
                ],
                "summary": "ListUserOrganizations lists all the organization user has access to.",
                "operationId": "ListUserOrganizations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/V1Organization"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runner-image-pull-secrets": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_image_pull_secrets"
                ],
                "summary": "List all runner image pull secrets.",
                "operationId": "ListRunnerImagePullSecrets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.ListRunnerImagePullSecretsOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_image_pull_secrets"
                ],
                "summary": "Create a new runner image pull secret.",
                "operationId": "CreateRunnerImagePullSecret",
                "parameters": [
                    {
                        "description": "Runner Image Pull Secret",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.CreateRunnerImagePullSecretInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerImagePullSecret"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runner-image-pull-secrets/{id}": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_image_pull_secrets"
                ],
                "summary": "Get runner image pull secret details for the id.",
                "operationId": "GetRunnerImagePullSecret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image Pull Secret ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerImagePullSecret"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_image_pull_secrets"
                ],
                "summary": "Update runner image pull secret details for the id.",
                "operationId": "UpdateRunnerImagePullSecret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image Pull Secret ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Runner Image Pull Secret",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.UpdateRunnerImagePullSecretInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerImagePullSecret"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_image_pull_secrets"
                ],
                "summary": "Delete runner image pull secret details for the id.",
                "operationId": "DeleteRunnerImagePullSecret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image Pull Secret ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GenericSuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runner-image-versions": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_image_versions"
                ],
                "summary": "List all runner image versions.",
                "operationId": "ListRunnerImageVersions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image ID",
                        "name": "runner_image_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.ListRunnerImageVersionsOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runner-image-versions/{id}": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_image_versions"
                ],
                "summary": "Get runner image version details for the id.",
                "operationId": "GetRunnerImageVersion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image Version ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerImageVersion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_image_versions"
                ],
                "summary": "Delete runner image version details for the id.",
                "operationId": "DeleteRunnerImageVersion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image Version ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GenericSuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_image_versions"
                ],
                "summary": "Update runner image version details for the id.",
                "operationId": "UpdateRunnerImageVersion",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image Version ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Runner Image Version",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.UpdateRunnerImageVersionInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerImageVersion"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runner-images": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_images"
                ],
                "summary": "List all runner images.",
                "operationId": "ListRunnerImages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.ListRunnerImagesOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_images"
                ],
                "summary": "Create a new runner image.",
                "operationId": "CreateRunnerImage",
                "parameters": [
                    {
                        "description": "Runner Image",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.CreateRunnerImageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerImage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runner-images/{id}": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_images"
                ],
                "summary": "Get runner image details for the id.",
                "operationId": "GetRunnerImage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerImage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_images"
                ],
                "summary": "Update runner image details for the id.",
                "operationId": "UpdateRunnerImage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Runner Image",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.UpdateRunnerImageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerImage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runner_images"
                ],
                "summary": "Delete runner image details for the id.",
                "operationId": "DeleteRunnerImage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner Image ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerImage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runner_instance/internal/{id}/last_job_processed_meta": {
            "get": {
                "security": [
                    {
                        "WarpBuildServiceSecretAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 RunnerInstance"
                ],
                "summary": "Get runner last used job meta",
                "operationId": "GetRunnerLastJobProcessedMeta",
                "parameters": [
                    {
                        "type": "string",
                        "description": "runner instance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.LastJobProcessedMeta"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runners": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Runners"
                ],
                "summary": "ListRunners lists all the runners for an org.",
                "operationId": "ListRunners",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/commons.Runner"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "User can request a runner setup by passing different name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Runners"
                ],
                "summary": "Adds a new runner for a current organization",
                "operationId": "SetupRunner",
                "parameters": [
                    {
                        "description": "Create new runner body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.SetupRunnerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.Runner"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runners/cost/calculator": {
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 runners"
                ],
                "summary": "Get ComputeCustomRunnerRate details",
                "operationId": "ComputeCustomRunnerRate",
                "parameters": [
                    {
                        "description": "Compute custom runner rate",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.RateCalculationInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RateCalculationOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runners/default-group": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Runners"
                ],
                "summary": "Get default group for runner set",
                "operationId": "GetRunnerSetDefaultGroup",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerSetDefaultGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Runners"
                ],
                "summary": "Set default group for runner set",
                "operationId": "SetRunnerSetDefaultGroup",
                "parameters": [
                    {
                        "description": "Set default group for runner set body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.SetRunnerSetDefaultGroupInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerSetDefaultGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runners/usage": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Runners"
                ],
                "summary": "Get runtimes for runners of the organisation",
                "operationId": "GetRunnersUsage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date range start",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date range end",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "ondemand",
                                "spot"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Capacity types",
                        "name": "capacity_types",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "x64",
                                "arm64"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Architectures",
                        "name": "archs",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "macos-13",
                                "ubuntu-2204",
                                "macos-14",
                                "ubuntu-2404"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Images",
                        "name": "images",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                2,
                                4,
                                6,
                                8,
                                16,
                                32
                            ],
                            "type": "integer"
                        },
                        "collectionFormat": "multi",
                        "description": "Cores",
                        "name": "cores",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "stock",
                                "custom"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Runner types",
                        "name": "runner_types",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term",
                        "name": "search_term",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnersUsage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runners/{id}": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Runners"
                ],
                "summary": "Get runner details for the id. Current organization is figured from the authorization token",
                "operationId": "GetRunner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.Runner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Runners"
                ],
                "summary": "delete runner for the id. Current organization is figured from the authorization token",
                "operationId": "DeleteRunner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.Runner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Runners"
                ],
                "summary": "Get runner details for the id. Current organization is figured from the authorization token",
                "operationId": "UpdateRunner",
                "parameters": [
                    {
                        "description": "update runner body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.UpdateRunnerInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Runner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.Runner"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runners_instance": {
            "post": {
                "security": [
                    {
                        "WarpBuildServiceSecretAuth": []
                    }
                ],
                "description": "Add a new runner instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 RunnerInstance"
                ],
                "summary": "Add a new runner instance",
                "operationId": "AddRunnerInstance",
                "parameters": [
                    {
                        "description": "Add runner instance body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.AddRunnerInstanceInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerInstance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runners_instance/{id}/allocation_details": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 RunnerInstance"
                ],
                "summary": "Get runner instance allocation details for the id",
                "operationId": "GetRunnerInstanceAllocationDetails",
                "parameters": [
                    {
                        "type": "string",
                        "description": "runner instance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "polling secret for validation",
                        "name": "X-POLLING-SECRET",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.RunnerInstanceAllocationDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runners_instance/{id}/cleanup_hook": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 RunnerInstance"
                ],
                "summary": "Get runner instance allocation details for the id",
                "operationId": "RunnerInstanceCleanupHook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "runner instance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "polling secret for validation",
                        "name": "X-POLLING-SECRET",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/runners_instance/{id}/presigned_log_upload_url": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 RunnerInstance"
                ],
                "summary": "Gets a presigned url for uploading logs for a runner instance",
                "operationId": "GetRunnerInstancePresignedLogUploadURL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "runner instance id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "polling secret for validation",
                        "name": "X-POLLING-SECRET",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Log file name",
                        "name": "log-file-name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.GetPresignedLogUploadURLOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/sku": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Sku"
                ],
                "summary": "ListAllSku lists all the runners sku for an org.",
                "operationId": "ListSku",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "list of sku id's",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "cores",
                        "name": "cores",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "memory",
                        "name": "memory",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "x64",
                            "arm64"
                        ],
                        "type": "string",
                        "description": "Architectures",
                        "name": "arch",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "enum": [
                                "ubuntu",
                                "mac"
                            ],
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "operating system",
                        "name": "os",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "any",
                            "amd",
                            "intel",
                            "arm"
                        ],
                        "type": "string",
                        "description": "Images",
                        "name": "manufacturer",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "small",
                            "medium",
                            "large"
                        ],
                        "type": "string",
                        "description": "performance category",
                        "name": "performance_category",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "has gpu",
                        "name": "has_gpu",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "burstable",
                        "name": "burstable",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "include internal skus",
                        "name": "include_internal",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/commons.InstanceSku"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/sku/{id}": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Sku"
                ],
                "summary": "Get default group for runner set",
                "operationId": "GetSku",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.InstanceSku"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/subscription": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "Get Current Org Subscription Details",
                "operationId": "GetSubscriptionDetails",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.SubscriptionDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "Cancel Org current Subscription",
                "operationId": "DeleteCurrentSubscription",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.SubscriptionDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/subscription/customer_portal_url": {
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "Get customer portal url",
                "operationId": "GetCustomerPortalUrl",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/subscription/stripe/payment_method/{payment_method_id}": {
            "delete": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "delete stripe setup intent payment method",
                "operationId": "DeleteStripePaymentMethod",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID for the stripe payment method",
                        "name": "payment_method_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.SubscriptionDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "update stripe payment method to default",
                "operationId": "StripePaymentMethodDefault",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID for the stripe payment method",
                        "name": "payment_method_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.SubscriptionDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/subscription/{gateway}/webhook": {
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 subscriptions"
                ],
                "summary": "S2S Webhook received from PG",
                "operationId": "SubscriptionPGWebhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "gateway name, current only stripe",
                        "name": "gateway",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/ui/banner-messages": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 ui"
                ],
                "summary": "Get specific banner messages for UI/Org or all",
                "operationId": "GetBannerMessages",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/commons.BannerMessage"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/vcs/approve-integration": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "This handles the callback for approving an installation",
                "operationId": "ApproveVCSIntegration",
                "parameters": [
                    {
                        "description": "Approve vcs integration app installation",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApproveVCSIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/vcs/entities": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "VCS Entities refers to git entites like git repos, git branches, etc.\nThis endpoint is a commons endpoint to fetch these.\nParentID is required depending on what git entity you are fetching.\n\nGit entity heirchary:\nGit Organization \u003e Git Repository \u003e Git Branch\n\nWhen fetching an entity the parent id is the id of git entity one level above\nSo for example, fetching repository will be\nhttp://backend.warpbuild.com/api/v1/vcs/entities?provider=gitlab\u0026entity_type=repository\u0026parent_id=organization_external_id\nFor the most top level entity there is no parent_id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "Lists all vcs entities for vcs integration",
                "operationId": "ListVCSEntites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Git provider",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter using organization name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "IntegrationID used by the git provider",
                        "name": "integration_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "organization",
                            "repository",
                            "branch"
                        ],
                        "type": "string",
                        "description": "VCS Entity that should be returned",
                        "name": "entity_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "VCS Entity Parent ID",
                        "name": "parent_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VCSEntity"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/vcs/integrations": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "Lists all vcs integration for provider",
                "operationId": "ListVCSIntegration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vcs integration provider filter",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "vcs integration provider filter",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VCSIntegration"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "Create a new vcs integration",
                "operationId": "CreateVCSIntegration",
                "parameters": [
                    {
                        "description": "Create new vcs integration body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateVCSIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/VCSIntegration"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/vcs/integrations/{integration_id}": {
            "put": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "Update an existing vcs integration",
                "operationId": "UpdateVCSIntegration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID for the vcs integration",
                        "name": "integration_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update vcs integration body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateVCSIntegrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/UpdateVCSIntegrationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "Delete an existing vcs integration",
                "operationId": "DeleteVCSIntegration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID for the vcs integration",
                        "name": "integration_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID for the vcs integration",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.GenericSuccessMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/vcs/list-runner-groups": {
            "post": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "Lists all vcs runner groups",
                "operationId": "ListVCSRunnerGroups",
                "parameters": [
                    {
                        "description": "List runner groups input",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.ListVCSRunnerGroupsInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.ListVCSRunnerGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/vcs/repos": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "Lists all vcs repos for vcs integration",
                "operationId": "ListVCSRepos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/commons.Repo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JWTKeyAuth | WarpBuildAdminSecretAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "create vcs repo based on repo internal id",
                "operationId": "CreateVCSGitRepo",
                "parameters": [
                    {
                        "description": "create repo options",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/commons.CreateRepoOptions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.Repo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/vcs/repos/{id}": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 vcs"
                ],
                "summary": "get vcs repo based on repo internal id",
                "operationId": "GetVCSGitRepo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "internal id for the vcs git repo",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/commons.Repo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/workflows": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "Workflows (workflows)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 workflows"
                ],
                "summary": "Lists all workflows (workflows) for organization according to repo",
                "operationId": "ListWorkflows",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListWorkflowsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/workflows/pr-auth-url": {
            "get": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "Get auth url required for GH PR",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "v1 workflows"
                ],
                "summary": "Get auth url required for GH PR",
                "operationId": "GetPullRequestAuthURL",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/workflows/pull": {
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "Workflows (workflows)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 workflows"
                ],
                "summary": "Pulls all workflows from the provider to the database",
                "operationId": "PullWorkflows",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        },
        "/workflows/warp": {
            "patch": {
                "security": [
                    {
                        "JWTKeyAuth": []
                    }
                ],
                "description": "Warps workflows",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 workflows"
                ],
                "summary": "Warps workflows for organization according to given internal workflow ids",
                "operationId": "WarpWorkflows",
                "parameters": [
                    {
                        "description": "Warp workflows options",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WarpWorkflowsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WarpWorkflowsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/WarpBuildAPIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ApproveVCSIntegrationRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "installation_id": {
                    "type": "string"
                }
            }
        },
        "AuthUserRequest": {
            "type": "object",
            "required": [
                "code",
                "state"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "AuthUserResponse": {
            "type": "object",
            "required": [
                "access_token",
                "is_different_org",
                "organization",
                "refresh_token",
                "user"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "is_different_org": {
                    "type": "boolean"
                },
                "organization": {
                    "$ref": "#/definitions/V1Organization"
                },
                "refresh_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/V1User"
                }
            }
        },
        "CreateVCSIntegrationRequest": {
            "type": "object",
            "required": [
                "provider"
            ],
            "properties": {
                "additional_state": {
                    "type": "object",
                    "additionalProperties": true
                },
                "application_callback_url": {
                    "type": "string"
                },
                "application_id": {
                    "type": "string"
                },
                "application_secret": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "vcs_url": {
                    "type": "string"
                }
            }
        },
        "ListWorkflowsResponse": {
            "type": "object",
            "properties": {
                "is_pulling": {
                    "type": "boolean"
                },
                "last_synced_at": {
                    "type": "string"
                },
                "workflows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.Workflow"
                    }
                }
            }
        },
        "MeResponse": {
            "type": "object",
            "required": [
                "organization",
                "user",
                "vcs_integration"
            ],
            "properties": {
                "extras": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "organization": {
                    "$ref": "#/definitions/V1Organization"
                },
                "user": {
                    "$ref": "#/definitions/V1User"
                },
                "vcs_integration": {
                    "$ref": "#/definitions/commons.VCSIntegrationLean"
                }
            }
        },
        "SwitchOrganizationRequest": {
            "type": "object",
            "required": [
                "organization_id",
                "refresh_token"
            ],
            "properties": {
                "organization_id": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "SwitchOrganizationResponse": {
            "type": "object",
            "required": [
                "access_token",
                "organization"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/V1Organization"
                }
            }
        },
        "TokenRefreshRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "TokenRefreshResponse": {
            "type": "object",
            "required": [
                "access_token"
            ],
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "UpdateOrganizationRequest": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "UpdateVCSIntegrationRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "code": {
                    "description": "Code is\n\n- 'code' param in the callback from gitlab",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "installation_id": {
                    "description": "InstallationID\n\n- 'installation_id' param from github installation",
                    "type": "string"
                },
                "setup_action": {
                    "description": "SetupAction\n\n- 'setup_action' param from github installation",
                    "type": "string"
                }
            }
        },
        "UpdateVCSIntegrationResponse": {
            "type": "object",
            "properties": {
                "new_session": {
                    "$ref": "#/definitions/AuthUserResponse"
                },
                "vcs_integration": {
                    "$ref": "#/definitions/VCSIntegration"
                }
            }
        },
        "V1ListUsersForOrganizationResult": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "joined_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "V1Organization": {
            "type": "object",
            "required": [
                "created_by",
                "id",
                "name"
            ],
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "V1User": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "signup_provider": {
                    "type": "string"
                },
                "signup_provider_user_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "VCSEntity": {
            "type": "object",
            "required": [
                "display_name",
                "entity_type",
                "external_id",
                "name",
                "provider"
            ],
            "properties": {
                "account_id": {
                    "description": "AccountID is the github account\n\nTODO: AccountID should be group id in case of gitlab",
                    "type": "string"
                },
                "commit_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "entity_type": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "integration_id": {
                    "type": "string"
                },
                "internal_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "VCSIntegration": {
            "type": "object",
            "required": [
                "connection_status",
                "created_at",
                "id",
                "integration_type",
                "integration_url",
                "provider",
                "target_type",
                "updated_at"
            ],
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "account_owner": {
                    "type": "string"
                },
                "application_id": {
                    "type": "string"
                },
                "configuration_url": {
                    "description": "ConfigurationURL\n\nGithub\n- Is the installation's settings page on the github account.\n- This field is only populated after the github account is successfully connected.\n\nGitlab\n- \u003cno-equivalent-exists\u003e",
                    "type": "string"
                },
                "connection_status": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "installation_id": {
                    "type": "string"
                },
                "integration_type": {
                    "type": "string"
                },
                "integration_url": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "target_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vcs_url": {
                    "type": "string"
                }
            }
        },
        "WarpBuildAPIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "sub_code": {
                    "type": "string"
                },
                "sub_message": {
                    "type": "string"
                }
            }
        },
        "WarpWorkflowsRequest": {
            "type": "object",
            "required": [
                "runner_id",
                "workflow_ids"
            ],
            "properties": {
                "authorization": {
                    "description": "for github oauth flow",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "runner_id": {
                    "type": "string"
                },
                "workflow_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "WarpWorkflowsResponse": {
            "type": "object",
            "properties": {
                "pr_link": {
                    "type": "string"
                }
            }
        },
        "commons.AddRunnerInstanceInput": {
            "type": "object",
            "properties": {
                "provider_id": {
                    "type": "string"
                },
                "runner_set_id": {
                    "type": "string"
                },
                "unique_external_id": {
                    "type": "string"
                }
            }
        },
        "commons.Balance": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "limit": {
                    "type": "number"
                },
                "percentage": {
                    "type": "number"
                },
                "used": {
                    "type": "number"
                }
            }
        },
        "commons.BalanceDetails": {
            "type": "object",
            "properties": {
                "free_balance": {
                    "$ref": "#/definitions/commons.Balance"
                },
                "paid_balance": {
                    "$ref": "#/definitions/commons.Balance"
                }
            }
        },
        "commons.BannerMessage": {
            "type": "object",
            "properties": {
                "closeable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "commons.BillingInfo": {
            "type": "object",
            "properties": {
                "applied_coupon": {
                    "$ref": "#/definitions/commons.Coupon"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "commons.CacheCostSummary": {
            "type": "object",
            "properties": {
                "cache_storage_size_bytes": {
                    "type": "number"
                },
                "num_cache_operations": {
                    "type": "integer"
                },
                "total_cost": {
                    "type": "number"
                }
            }
        },
        "commons.ContainerRunnerImage": {
            "type": "object",
            "properties": {
                "args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "command": {
                    "type": "string"
                },
                "entrypoint": {
                    "type": "string"
                },
                "environment_variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "image_repository": {
                    "type": "string"
                },
                "image_tag": {
                    "type": "string"
                }
            }
        },
        "commons.ContainerRunnerImageUpdate": {
            "type": "object",
            "properties": {
                "image_tag": {
                    "type": "string"
                }
            }
        },
        "commons.ContainerRunnerImageVersion": {
            "type": "object",
            "properties": {
                "data_dir_size": {
                    "type": "string"
                },
                "image_digest": {
                    "type": "string"
                },
                "image_repository": {
                    "type": "string"
                },
                "image_size": {
                    "type": "string"
                },
                "image_tag": {
                    "type": "string"
                },
                "image_uri": {
                    "description": "ImageURI is the full uri of the image.\nThis can be used to download the image\n\n+OutputOnly",
                    "type": "string"
                },
                "snapshot_id": {
                    "type": "string"
                },
                "snapshot_size": {
                    "type": "string"
                },
                "volume_id": {
                    "type": "string"
                },
                "volume_size_gb": {
                    "description": "VolumeSizeGB is the size of the volume in GB.\nThis is used when creating a snapshot out of the volume.\n\nThis is rounded up to the nearest GiB.",
                    "type": "integer"
                }
            }
        },
        "commons.CostSummary": {
            "type": "object",
            "properties": {
                "cache": {
                    "$ref": "#/definitions/commons.CacheCostSummary"
                },
                "runners": {
                    "$ref": "#/definitions/commons.RunnersCostSummary"
                }
            }
        },
        "commons.Coupon": {
            "type": "object",
            "properties": {
                "amount_off": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "duration_months": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "percent_off": {
                    "type": "number"
                },
                "redeemed_at": {
                    "type": "string"
                }
            }
        },
        "commons.CreateRepoOptions": {
            "type": "object",
            "required": [
                "integration_id",
                "name",
                "owner"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "integration_id": {
                    "type": "string"
                },
                "is_private": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "should_auto_init": {
                    "type": "boolean"
                },
                "upsert": {
                    "type": "boolean"
                }
            }
        },
        "commons.CreateRunnerImageInput": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "arch": {
                    "type": "string"
                },
                "container_runner_image": {
                    "$ref": "#/definitions/commons.ContainerRunnerImage"
                },
                "hooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.RunnerImageHook"
                    }
                },
                "os": {
                    "type": "string"
                },
                "runner_image_pull_secret_id": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/commons.RunnerImageSettings"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "commons.CreateRunnerImagePullSecretInput": {
            "type": "object",
            "required": [
                "alias",
                "type"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "aws": {
                    "$ref": "#/definitions/commons.RunnerImagePullSecretAWS"
                },
                "docker_credentials": {
                    "$ref": "#/definitions/commons.RunnerImagePullSecretDockerCredentials"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "docker_credentials",
                        "aws"
                    ]
                }
            }
        },
        "commons.DaywiseCost": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "cumulative_amount": {
                    "type": "number"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "commons.DaywiseRuntime": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "runtime_seconds": {
                    "type": "integer"
                }
            }
        },
        "commons.GetPresignedLogUploadURLOutput": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        },
        "commons.GithubRunnerApplicationDetails": {
            "type": "object",
            "properties": {
                "jit": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "runner_name": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "commons.InstanceSku": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string",
                    "enum": [
                        "x64",
                        "arm64"
                    ]
                },
                "cores": {
                    "type": "integer"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "os": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ubuntu",
                            "mac"
                        ]
                    }
                },
                "properties": {
                    "$ref": "#/definitions/commons.InstanceSkuProperties"
                }
            }
        },
        "commons.InstanceSkuProperties": {
            "type": "object",
            "properties": {
                "burstable_speed": {
                    "type": "number"
                },
                "generation": {
                    "type": "string"
                },
                "gpu": {
                    "type": "integer"
                },
                "manufacturer": {
                    "type": "string",
                    "enum": [
                        "any",
                        "amd",
                        "intel",
                        "arm"
                    ]
                },
                "performance_category": {
                    "type": "string",
                    "enum": [
                        "small",
                        "medium",
                        "large"
                    ]
                },
                "performance_rating": {
                    "type": "integer"
                },
                "speed": {
                    "type": "number"
                }
            }
        },
        "commons.InternalPostUsageInput": {
            "type": "object",
            "properties": {
                "pricing_id": {
                    "type": "string"
                },
                "product_category": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "usage_count": {
                    "type": "integer"
                }
            }
        },
        "commons.InternalPostUsageOutput": {
            "type": "object",
            "properties": {
                "ledger_id": {
                    "type": "string"
                },
                "usage_id": {
                    "type": "string"
                }
            }
        },
        "commons.JobRunnerInfo": {
            "type": "object",
            "properties": {
                "job_id": {
                    "type": "string"
                },
                "runner_arch": {
                    "type": "string"
                },
                "runner_host": {
                    "type": "string"
                },
                "runner_id": {
                    "type": "string"
                },
                "runner_name": {
                    "type": "string"
                },
                "runner_os": {
                    "type": "string"
                },
                "warp_added_at": {
                    "type": "string"
                },
                "warp_removed_at": {
                    "type": "string"
                }
            }
        },
        "commons.LastJobProcessedMeta": {
            "type": "object",
            "properties": {
                "vcs_base_ref": {
                    "type": "string"
                },
                "vcs_head_ref": {
                    "type": "string"
                },
                "vcs_org": {
                    "type": "string"
                },
                "vcs_ref": {
                    "type": "string"
                },
                "vcs_ref_type": {
                    "type": "string"
                },
                "vcs_repo": {
                    "type": "string"
                }
            }
        },
        "commons.ListRunnerImagePullSecretsOutput": {
            "type": "object",
            "properties": {
                "runner_image_pull_secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.RunnerImagePullSecret"
                    }
                }
            }
        },
        "commons.ListRunnerImageVersionsOutput": {
            "type": "object",
            "properties": {
                "runner_image_versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.RunnerImageVersion"
                    }
                }
            }
        },
        "commons.ListRunnerImagesOutput": {
            "type": "object",
            "properties": {
                "runner_images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.RunnerImage"
                    }
                }
            }
        },
        "commons.ListTokensOptions": {
            "type": "object",
            "properties": {
                "organization_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "commons.ListUsersOptions": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                }
            }
        },
        "commons.ListUsersResponse": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_rows": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/V1User"
                    }
                }
            }
        },
        "commons.ListVCSRunnerGroupsInput": {
            "type": "object",
            "properties": {
                "fetch_from_remote": {
                    "type": "boolean"
                },
                "integration_id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "commons.ListVCSRunnerGroupsResponse": {
            "type": "object",
            "properties": {
                "last_synced_at": {
                    "type": "string"
                },
                "runner_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.RunnerGroup"
                    }
                }
            }
        },
        "commons.Organization": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "commons.PaymentDetails": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "billing_email": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "method_meta": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "commons.PaymentMethod": {
            "type": "object",
            "properties": {
                "country_code": {
                    "type": "string"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "external_id": {
                    "type": "string"
                },
                "iin": {
                    "type": "string"
                },
                "is_default": {
                    "type": "boolean"
                },
                "issuer": {
                    "type": "string"
                },
                "last4": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "commons.PostPaymentMethodSetupInput": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "payment_method_id": {
                    "type": "string"
                },
                "setup_intent_id": {
                    "type": "string"
                }
            }
        },
        "commons.ProviderInstanceSkuMapping": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "provider_sku": {
                    "type": "string"
                },
                "provider_sku_meta": {
                    "$ref": "#/definitions/commons.ProviderSkuMeta"
                },
                "sku_id": {
                    "type": "string"
                }
            }
        },
        "commons.ProviderSkuMeta": {
            "type": "object"
        },
        "commons.RateCalculationInput": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/definitions/commons.RunnerSetConfiguration"
                },
                "product_type": {
                    "type": "string",
                    "enum": [
                        "runner",
                        "cache"
                    ]
                }
            }
        },
        "commons.RateCalculationOutput": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                }
            }
        },
        "commons.Repo": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "default_branch": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "integration_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "sshurl": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vcs_id": {
                    "type": "string"
                },
                "web_url": {
                    "type": "string"
                }
            }
        },
        "commons.ReqCheckoutSession": {
            "type": "object",
            "required": [
                "cancel_url",
                "success_url"
            ],
            "properties": {
                "cancel_url": {
                    "type": "string"
                },
                "success_url": {
                    "type": "string"
                }
            }
        },
        "commons.ReqSetupIntentInit": {
            "type": "object",
            "required": [
                "cancel_url",
                "success_url"
            ],
            "properties": {
                "cancel_url": {
                    "type": "string"
                },
                "success_url": {
                    "type": "string"
                }
            }
        },
        "commons.ResCheckoutSession": {
            "type": "object",
            "properties": {
                "redirect_url": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "commons.ResSetupIntentInit": {
            "type": "object",
            "properties": {
                "data": {},
                "gateway": {
                    "type": "string"
                }
            }
        },
        "commons.Runner": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "configuration": {
                    "$ref": "#/definitions/commons.RunnerSetConfiguration"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "string"
                },
                "stock_runner_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vcs_integration_id": {
                    "type": "string"
                }
            }
        },
        "commons.RunnerGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "inherited": {
                    "type": "boolean"
                },
                "is_default": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "runners_url": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "commons.RunnerImage": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "arch": {
                    "type": "string"
                },
                "container_runner_image": {
                    "$ref": "#/definitions/commons.ContainerRunnerImage"
                },
                "created_at": {
                    "type": "string"
                },
                "hooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.RunnerImageHook"
                    }
                },
                "id": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "runner_image_pull_secret_id": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/commons.RunnerImageSettings"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "warpbuild_image": {
                    "description": "WarpbuildImage is the vm image used by warpbuild to run the jobs.\nThis will have the info for internal images managed by warpbuild when\ntype = 'warpbuild_managed'.\n\nIn case of container images, this will have the base image of the VM on\nwhich the container is run.",
                    "$ref": "#/definitions/commons.WarpbuildImage"
                }
            }
        },
        "commons.RunnerImageHook": {
            "type": "object",
            "properties": {
                "file": {
                    "description": "File is the base64 encoded file.\nThis must be a shell script which is encoded in base64.",
                    "type": "string"
                },
                "type": {
                    "description": "Type is the type of hook.",
                    "type": "string"
                }
            }
        },
        "commons.RunnerImagePullSecret": {
            "type": "object",
            "required": [
                "alias",
                "created_at",
                "id",
                "organization_id",
                "type",
                "updated_at"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "aws": {
                    "$ref": "#/definitions/commons.RunnerImagePullSecretAWS"
                },
                "created_at": {
                    "type": "string"
                },
                "docker_credentials": {
                    "$ref": "#/definitions/commons.RunnerImagePullSecretDockerCredentials"
                },
                "id": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "docker_credentials",
                        "aws"
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "commons.RunnerImagePullSecretAWS": {
            "type": "object",
            "properties": {
                "access_key_id": {
                    "type": "string"
                },
                "aws_ecr_repository": {
                    "description": "AWSECRRepository is the short name of the ecr repository\nFor example, if the complete uri for an image is\n\u003caccount_id\u003e.dkr.ecr.\u003cregion\u003e.amazonaws.com/acme/customrunners:v1.5.0\nThe AWS ECR Repo is `acme/customrunners`",
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "secret_access_key": {
                    "type": "string"
                }
            }
        },
        "commons.RunnerImagePullSecretDockerCredentials": {
            "type": "object",
            "required": [
                "host",
                "password",
                "username"
            ],
            "properties": {
                "host": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "commons.RunnerImageSettings": {
            "type": "object",
            "properties": {
                "purge_image_versions_offset": {
                    "description": "PurgeImageVersionsOffset is the number of versions to keep.\nEach time a new version is created, the oldest version is purged.\nAllowed values range [1, inf).\n\nDefault value is 2.",
                    "type": "integer"
                }
            }
        },
        "commons.RunnerImageVersion": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "container_runner_image": {
                    "$ref": "#/definitions/commons.ContainerRunnerImageVersion"
                },
                "created_at": {
                    "type": "string"
                },
                "external_id": {
                    "description": "ExternalID is the ID of the runner image version in the external system.",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "runner_image_id": {
                    "type": "string"
                },
                "runner_image_pull_secret_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "version_time_id": {
                    "type": "integer"
                }
            }
        },
        "commons.RunnerInfo": {
            "type": "object",
            "properties": {
                "arch": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                }
            }
        },
        "commons.RunnerInstance": {
            "type": "object",
            "properties": {
                "allocated_at": {
                    "type": "string"
                },
                "allocation_for": {
                    "type": "string"
                },
                "allocation_requested_at": {
                    "type": "string"
                },
                "allocation_requested_event_at": {
                    "type": "string"
                },
                "cluster": {
                    "type": "string"
                },
                "configuration": {
                    "$ref": "#/definitions/commons.RunnerInstanceConfiguration"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "first_polled_at": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "last_job_processed_id": {
                    "type": "string"
                },
                "last_job_processed_meta": {
                    "$ref": "#/definitions/commons.LastJobProcessedMeta"
                },
                "last_polled_at": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "provider_kind": {
                    "type": "string"
                },
                "provider_kind_id": {
                    "type": "string"
                },
                "purged_at": {
                    "type": "string"
                },
                "purged_reason": {
                    "type": "string"
                },
                "runner_for": {
                    "type": "string"
                },
                "runner_set_id": {
                    "type": "string"
                },
                "running_started_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "vcs_integration_id": {
                    "type": "string"
                }
            }
        },
        "commons.RunnerInstanceAllocationDetails": {
            "type": "object",
            "properties": {
                "gh_runner_application_details": {
                    "$ref": "#/definitions/commons.GithubRunnerApplicationDetails"
                },
                "runner_application": {
                    "type": "string",
                    "enum": [
                        "github"
                    ]
                },
                "runner_instance": {
                    "$ref": "#/definitions/commons.RunnerInstance"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "unassigned",
                        "assigned",
                        "invalidated"
                    ]
                }
            }
        },
        "commons.RunnerInstanceConfiguration": {
            "type": "object",
            "properties": {
                "capacity_type": {
                    "type": "string",
                    "enum": [
                        "spot",
                        "ondemand"
                    ]
                },
                "image": {
                    "description": "Refer",
                    "type": "string"
                },
                "provider_sku_mapping": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.ProviderInstanceSkuMapping"
                    }
                },
                "sku": {
                    "$ref": "#/definitions/commons.InstanceSku"
                },
                "stock_runner_set_id": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/definitions/commons.Storage"
                }
            }
        },
        "commons.RunnerSetConfiguration": {
            "type": "object",
            "properties": {
                "capacity_type": {
                    "type": "string",
                    "enum": [
                        "spot",
                        "ondemand"
                    ]
                },
                "image": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/definitions/commons.Storage"
                }
            }
        },
        "commons.RunnerSetDefaultGroup": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                }
            }
        },
        "commons.RunnersCostSummary": {
            "type": "object",
            "properties": {
                "arm64_billed_minutes": {
                    "type": "integer"
                },
                "total_cost": {
                    "type": "number"
                },
                "x64_billed_minutes": {
                    "type": "integer"
                }
            }
        },
        "commons.RunnersUsage": {
            "type": "object",
            "properties": {
                "daywise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.DaywiseRuntime"
                    }
                },
                "runnerwise": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.RunnerwiseRuntime"
                    }
                },
                "total_job_count": {
                    "type": "integer"
                },
                "total_runtime_seconds": {
                    "type": "integer"
                }
            }
        },
        "commons.RunnerwiseRuntime": {
            "type": "object",
            "properties": {
                "runner_id": {
                    "type": "string"
                },
                "runtime_seconds": {
                    "type": "integer"
                }
            }
        },
        "commons.SetRunnerSetDefaultGroupInput": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                }
            }
        },
        "commons.SetupRunnerInput": {
            "type": "object",
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "configuration": {
                    "$ref": "#/definitions/commons.RunnerSetConfiguration"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "stock_runner_id": {
                    "type": "string"
                },
                "vcs_integration_id": {
                    "type": "string"
                }
            }
        },
        "commons.Storage": {
            "type": "object",
            "properties": {
                "iops": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "throughput": {
                    "type": "integer"
                },
                "tier": {
                    "type": "string",
                    "enum": [
                        "low",
                        "medium",
                        "high",
                        "extreme"
                    ]
                }
            }
        },
        "commons.SubscriptionDetails": {
            "type": "object",
            "properties": {
                "balance_details": {
                    "$ref": "#/definitions/commons.BalanceDetails"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_payment_at": {
                    "type": "string"
                },
                "last_payment_details": {
                    "$ref": "#/definitions/commons.PaymentDetails"
                },
                "organization_id": {
                    "type": "string"
                },
                "payment_methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.PaymentMethod"
                    }
                },
                "pg_customer_id": {
                    "type": "string"
                },
                "pg_subscription_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subscribed_at": {
                    "type": "string"
                },
                "upcoming_bill": {
                    "$ref": "#/definitions/commons.UpcomingBill"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "commons.UpcomingBill": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "commons.UpdateBillingInfoInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "commons.UpdateContainerRunnerImageVersion": {
            "type": "object",
            "properties": {
                "data_dir_size": {
                    "type": "string"
                },
                "image_digest": {
                    "type": "string"
                },
                "image_size": {
                    "description": "ImageSize is the size of the image.\nExpected format: \"4G\"",
                    "type": "string"
                },
                "snapshot_id": {
                    "type": "string"
                },
                "snapshot_size": {
                    "description": "SnapshotSize is the size of the snapshot in human readable format.",
                    "type": "string"
                },
                "volume_id": {
                    "type": "string"
                },
                "volume_size_gb": {
                    "description": "VolumeSizeGB is the size of the volume in GB.\nThis is used when creating a snapshot out of the volume.\n\nThis is rounded up to the nearest GiB.",
                    "type": "integer"
                }
            }
        },
        "commons.UpdateRunnerImageInput": {
            "type": "object",
            "properties": {
                "container_runner_image": {
                    "$ref": "#/definitions/commons.ContainerRunnerImageUpdate"
                },
                "hooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.RunnerImageHook"
                    }
                },
                "id": {
                    "type": "string"
                },
                "runner_image_pull_secret_id": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/commons.RunnerImageSettings"
                }
            }
        },
        "commons.UpdateRunnerImagePullSecretInput": {
            "type": "object",
            "properties": {
                "aws": {
                    "$ref": "#/definitions/commons.RunnerImagePullSecretAWS"
                },
                "docker_credentials": {
                    "$ref": "#/definitions/commons.RunnerImagePullSecretDockerCredentials"
                }
            }
        },
        "commons.UpdateRunnerImageVersionInput": {
            "type": "object",
            "properties": {
                "container_runner_image_version": {
                    "$ref": "#/definitions/commons.UpdateContainerRunnerImageVersion"
                }
            }
        },
        "commons.UpdateRunnerInput": {
            "type": "object",
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "configuration": {
                    "$ref": "#/definitions/commons.RunnerSetConfiguration"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "commons.UserToken": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "provider_tenant_id": {
                    "type": "string"
                },
                "provider_user_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "commons.VCSIntegrationLean": {
            "type": "object",
            "required": [
                "connection_status",
                "id",
                "target_type"
            ],
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "account_owner": {
                    "type": "string"
                },
                "connection_status": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "installation_id": {
                    "type": "string"
                },
                "target_type": {
                    "type": "string"
                }
            }
        },
        "commons.WarpbuildImage": {
            "type": "object",
            "properties": {
                "cloud_init_template": {
                    "type": "string"
                },
                "image_uri": {
                    "type": "string"
                }
            }
        },
        "commons.Workflow": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string"
                },
                "external_repo_entity": {
                    "type": "string"
                },
                "external_repo_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_repo_public": {
                    "type": "boolean"
                },
                "jobs_runner_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commons.JobRunnerInfo"
                    }
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "provider_integration_id": {
                    "type": "string"
                },
                "runner_info": {
                    "$ref": "#/definitions/commons.RunnerInfo"
                },
                "stats": {
                    "$ref": "#/definitions/commons.WorkflowStats"
                },
                "url": {
                    "type": "string"
                },
                "warp_pr_id": {
                    "type": "string"
                },
                "warp_pr_link": {
                    "type": "string"
                },
                "warp_pr_runner": {
                    "type": "string"
                },
                "warp_status": {
                    "type": "string"
                }
            }
        },
        "commons.WorkflowStats": {
            "type": "object",
            "properties": {
                "run_count": {
                    "type": "integer"
                },
                "run_duration": {
                    "type": "integer"
                }
            }
        },
        "debugger.PublishEventInput": {
            "type": "object",
            "properties": {
                "data": {},
                "id": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "insights.callbackInput": {
            "type": "object",
            "required": [
                "code",
                "setup_action"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "installation_id": {
                    "type": "string"
                },
                "setup_action": {
                    "type": "string"
                }
            }
        },
        "types.GenericSuccessMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWTKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "WarpBuildAdminSecretAuth": {
            "type": "apiKey",
            "name": "X-Warp-Build-Admin-Secret",
            "in": "header"
        },
        "WarpBuildServiceSecretAuth": {
            "type": "apiKey",
            "name": "x-warpbuild-service-secret",
            "in": "header"
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}